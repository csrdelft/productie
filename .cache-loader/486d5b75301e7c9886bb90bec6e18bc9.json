{"remainingRequest":"/home/travis/build/csrdelft/csrdelft.nl/node_modules/babel-loader/lib/index.js??ref--1-1!/home/travis/build/csrdelft/csrdelft.nl/node_modules/eslint-loader/index.js!/home/travis/build/csrdelft/csrdelft.nl/resources/assets/js/fxclouds.js","dependencies":[{"path":"/home/travis/build/csrdelft/csrdelft.nl/resources/assets/js/fxclouds.js","mtime":1545951909668},{"path":"/home/travis/build/csrdelft/csrdelft.nl/node_modules/cache-loader/dist/cjs.js","mtime":1545951596000},{"path":"/home/travis/build/csrdelft/csrdelft.nl/node_modules/babel-loader/lib/index.js","mtime":1545951596000},{"path":"/home/travis/build/csrdelft/csrdelft.nl/node_modules/eslint-loader/index.js","mtime":1545951596000}],"contextDependencies":[],"result":["'use strict';\n\nvar _three = require('three');\n\nvar THREE = _interopRequireWildcard(_three);\n\nvar _three2 = require('./lib/three.detector');\n\nvar _three3 = _interopRequireDefault(_three2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nif (!_three3.default.webgl) {\n\t_three3.default.addGetWebGLMessage();\n}\n\nvar container = void 0;\nvar camera = void 0,\n    scene = void 0,\n    renderer = void 0;\nvar mesh = void 0,\n    geometry = void 0,\n    material = void 0;\n\nvar mouseX = 0,\n    mouseY = 0;\nvar start_time = Date.now();\n\nvar windowHalfX = window.innerWidth / 2;\nvar windowHalfY = window.innerHeight / 2;\n\ninitClouds();\n\nfunction initClouds() {\n\n\tcontainer = document.getElementById('cd-main-overlay');\n\n\t// Bg gradient\n\n\tvar canvas = document.createElement('canvas');\n\tcanvas.width = 32;\n\tcanvas.height = window.innerHeight;\n\n\tvar context = canvas.getContext('2d');\n\n\tvar gradient = context.createLinearGradient(0, 0, 0, canvas.height);\n\tgradient.addColorStop(0, '#1e4877');\n\tgradient.addColorStop(0.5, '#4584b4');\n\n\tcontext.fillStyle = gradient;\n\tcontext.fillRect(0, 0, canvas.width, canvas.height);\n\n\tcontainer.style.background = 'url(\"' + canvas.toDataURL('image/png') + '\")';\n\n\t//\n\n\tcamera = new THREE.PerspectiveCamera(30, window.innerWidth / window.innerHeight, 1, 3000);\n\tcamera.position.z = 3000;\n\n\tscene = new THREE.Scene();\n\n\tgeometry = new THREE.Geometry();\n\n\tvar texture = THREE.ImageUtils.loadTexture('/images/cloud10.png', null, animateClouds);\n\ttexture.magFilter = THREE.LinearMipMapLinearFilter;\n\ttexture.minFilter = THREE.LinearMipMapLinearFilter;\n\n\tvar fog = new THREE.Fog(0x4584b4, -100, 3000);\n\n\tmaterial = new THREE.ShaderMaterial({\n\t\tuniforms: {\n\t\t\tmap: {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: texture\n\t\t\t},\n\t\t\tfogColor: {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: fog.color\n\t\t\t},\n\t\t\tfogNear: {\n\t\t\t\ttype: 'f',\n\t\t\t\tvalue: fog.near\n\t\t\t},\n\t\t\tfogFar: {\n\t\t\t\ttype: 'f',\n\t\t\t\tvalue: fog.far\n\t\t\t}\n\t\t},\n\t\tvertexShader: document.getElementById('vs').textContent,\n\t\tfragmentShader: document.getElementById('fs').textContent,\n\t\tdepthWrite: false,\n\t\tdepthTest: false,\n\t\ttransparent: true\n\n\t});\n\n\tvar plane = new THREE.Mesh(new THREE.PlaneGeometry(64, 64));\n\n\tfor (var i = 0; i < 8000; i++) {\n\n\t\tplane.position.x = Math.random() * 1000 - 500;\n\t\tplane.position.y = -Math.random() * Math.random() * 200 - 15;\n\t\tplane.position.z = i;\n\t\tplane.rotation.z = Math.random() * Math.PI;\n\t\tplane.scale.x = plane.scale.y = Math.random() * Math.random() * 1.5 + 0.5;\n\n\t\tTHREE.GeometryUtils.merge(geometry, plane);\n\t}\n\n\tmesh = new THREE.Mesh(geometry, material);\n\tscene.add(mesh);\n\n\tmesh = new THREE.Mesh(geometry, material);\n\tmesh.position.z = -8000;\n\tscene.add(mesh);\n\n\trenderer = new THREE.WebGLRenderer({\n\t\tantialias: false\n\t});\n\trenderer.setSize(window.innerWidth, window.innerHeight);\n\tcontainer.append(renderer.domElement);\n\n\tdocument.addEventListener('mousemove', onDocumentMouseMoveClouds, false);\n\twindow.addEventListener('resize', onWindowResizeClouds, false);\n}\n\nfunction onDocumentMouseMoveClouds(event) {\n\n\tmouseX = (event.clientX - windowHalfX) * 0.25;\n\tmouseY = (event.clientY - windowHalfY) * 0.15;\n}\n\nfunction onWindowResizeClouds() {\n\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\tcamera.updateProjectionMatrix();\n\n\trenderer.setSize(window.innerWidth, window.innerHeight);\n}\n\nfunction animateClouds() {\n\n\trequestAnimationFrame(animateClouds);\n\n\tif (container.style.visibility !== 'hidden') {\n\n\t\tvar position = (Date.now() - start_time) * 0.03 % 8000;\n\n\t\tcamera.position.x += (mouseX - camera.position.x) * 0.005;\n\t\tcamera.position.y += (-mouseY - 70 - camera.position.y) * 0.01;\n\t\tcamera.position.z = -position + 8000;\n\n\t\trenderer.render(scene, camera);\n\t}\n}",{"version":3,"sources":["resources/assets/js/fxclouds.js"],"names":["THREE","Detector","webgl","addGetWebGLMessage","container","camera","scene","renderer","mesh","geometry","material","mouseX","mouseY","start_time","Date","now","windowHalfX","window","innerWidth","windowHalfY","innerHeight","initClouds","document","getElementById","canvas","createElement","width","height","context","getContext","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","style","background","toDataURL","PerspectiveCamera","position","z","Scene","Geometry","texture","ImageUtils","loadTexture","animateClouds","magFilter","LinearMipMapLinearFilter","minFilter","fog","Fog","ShaderMaterial","uniforms","map","type","value","fogColor","color","fogNear","near","fogFar","far","vertexShader","textContent","fragmentShader","depthWrite","depthTest","transparent","plane","Mesh","PlaneGeometry","i","x","Math","random","y","rotation","PI","scale","GeometryUtils","merge","add","WebGLRenderer","antialias","setSize","append","domElement","addEventListener","onDocumentMouseMoveClouds","onWindowResizeClouds","event","clientX","clientY","aspect","updateProjectionMatrix","requestAnimationFrame","visibility","render"],"mappings":";;AAAA;;IAAYA,K;;AACZ;;;;;;;;AAEA,IAAI,CAACC,gBAASC,KAAd,EAAqB;AACpBD,iBAASE,kBAAT;AACA;;AAED,IAAIC,kBAAJ;AACA,IAAIC,eAAJ;AAAA,IAAYC,cAAZ;AAAA,IAAmBC,iBAAnB;AACA,IAAIC,aAAJ;AAAA,IAAUC,iBAAV;AAAA,IAAoBC,iBAApB;;AAEA,IAAIC,SAAS,CAAb;AAAA,IAAgBC,SAAS,CAAzB;AACA,IAAMC,aAAaC,KAAKC,GAAL,EAAnB;;AAEA,IAAMC,cAAcC,OAAOC,UAAP,GAAoB,CAAxC;AACA,IAAMC,cAAcF,OAAOG,WAAP,GAAqB,CAAzC;;AAEAC;;AAEA,SAASA,UAAT,GAAsB;;AAErBjB,aAAYkB,SAASC,cAAT,CAAwB,iBAAxB,CAAZ;;AAEA;;AAEA,KAAMC,SAASF,SAASG,aAAT,CAAuB,QAAvB,CAAf;AACAD,QAAOE,KAAP,GAAe,EAAf;AACAF,QAAOG,MAAP,GAAgBV,OAAOG,WAAvB;;AAEA,KAAMQ,UAAUJ,OAAOK,UAAP,CAAkB,IAAlB,CAAhB;;AAEA,KAAMC,WAAWF,QAAQG,oBAAR,CAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsCP,OAAOG,MAA7C,CAAjB;AACAG,UAASE,YAAT,CAAsB,CAAtB,EAAyB,SAAzB;AACAF,UAASE,YAAT,CAAsB,GAAtB,EAA2B,SAA3B;;AAEAJ,SAAQK,SAAR,GAAoBH,QAApB;AACAF,SAAQM,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBV,OAAOE,KAA9B,EAAqCF,OAAOG,MAA5C;;AAEAvB,WAAU+B,KAAV,CAAgBC,UAAhB,aAAqCZ,OAAOa,SAAP,CAAiB,WAAjB,CAArC;;AAEA;;AAEAhC,UAAS,IAAIL,MAAMsC,iBAAV,CAA4B,EAA5B,EAAgCrB,OAAOC,UAAP,GAAoBD,OAAOG,WAA3D,EAAwE,CAAxE,EAA2E,IAA3E,CAAT;AACAf,QAAOkC,QAAP,CAAgBC,CAAhB,GAAoB,IAApB;;AAEAlC,SAAQ,IAAIN,MAAMyC,KAAV,EAAR;;AAEAhC,YAAW,IAAIT,MAAM0C,QAAV,EAAX;;AAEA,KAAMC,UAAU3C,MAAM4C,UAAN,CAAiBC,WAAjB,CAA6B,qBAA7B,EAAoD,IAApD,EAA0DC,aAA1D,CAAhB;AACAH,SAAQI,SAAR,GAAoB/C,MAAMgD,wBAA1B;AACAL,SAAQM,SAAR,GAAoBjD,MAAMgD,wBAA1B;;AAEA,KAAME,MAAM,IAAIlD,MAAMmD,GAAV,CAAc,QAAd,EAAwB,CAAC,GAAzB,EAA8B,IAA9B,CAAZ;;AAEAzC,YAAW,IAAIV,MAAMoD,cAAV,CAAyB;AACnCC,YAAU;AACTC,QAAK;AACJC,UAAM,GADF;AAEJC,WAAOb;AAFH,IADI;AAKTc,aAAU;AACTF,UAAM,GADG;AAETC,WAAON,IAAIQ;AAFF,IALD;AASTC,YAAS;AACRJ,UAAM,GADE;AAERC,WAAON,IAAIU;AAFH,IATA;AAaTC,WAAQ;AACPN,UAAM,GADC;AAEPC,WAAON,IAAIY;AAFJ;AAbC,GADyB;AAmBnCC,gBAAczC,SAASC,cAAT,CAAwB,IAAxB,EAA8ByC,WAnBT;AAoBnCC,kBAAgB3C,SAASC,cAAT,CAAwB,IAAxB,EAA8ByC,WApBX;AAqBnCE,cAAY,KArBuB;AAsBnCC,aAAW,KAtBwB;AAuBnCC,eAAa;;AAvBsB,EAAzB,CAAX;;AA2BA,KAAMC,QAAQ,IAAIrE,MAAMsE,IAAV,CAAe,IAAItE,MAAMuE,aAAV,CAAwB,EAAxB,EAA4B,EAA5B,CAAf,CAAd;;AAEA,MAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,IAApB,EAA0BA,GAA1B,EAA+B;;AAE9BH,QAAM9B,QAAN,CAAekC,CAAf,GAAmBC,KAAKC,MAAL,KAAgB,IAAhB,GAAuB,GAA1C;AACAN,QAAM9B,QAAN,CAAeqC,CAAf,GAAmB,CAACF,KAAKC,MAAL,EAAD,GAAiBD,KAAKC,MAAL,EAAjB,GAAiC,GAAjC,GAAuC,EAA1D;AACAN,QAAM9B,QAAN,CAAeC,CAAf,GAAmBgC,CAAnB;AACAH,QAAMQ,QAAN,CAAerC,CAAf,GAAmBkC,KAAKC,MAAL,KAAgBD,KAAKI,EAAxC;AACAT,QAAMU,KAAN,CAAYN,CAAZ,GAAgBJ,MAAMU,KAAN,CAAYH,CAAZ,GAAgBF,KAAKC,MAAL,KAAgBD,KAAKC,MAAL,EAAhB,GAAgC,GAAhC,GAAsC,GAAtE;;AAEA3E,QAAMgF,aAAN,CAAoBC,KAApB,CAA0BxE,QAA1B,EAAoC4D,KAApC;AAEA;;AAED7D,QAAO,IAAIR,MAAMsE,IAAV,CAAe7D,QAAf,EAAyBC,QAAzB,CAAP;AACAJ,OAAM4E,GAAN,CAAU1E,IAAV;;AAEAA,QAAO,IAAIR,MAAMsE,IAAV,CAAe7D,QAAf,EAAyBC,QAAzB,CAAP;AACAF,MAAK+B,QAAL,CAAcC,CAAd,GAAkB,CAAC,IAAnB;AACAlC,OAAM4E,GAAN,CAAU1E,IAAV;;AAEAD,YAAW,IAAIP,MAAMmF,aAAV,CAAwB;AAClCC,aAAW;AADuB,EAAxB,CAAX;AAGA7E,UAAS8E,OAAT,CAAiBpE,OAAOC,UAAxB,EAAoCD,OAAOG,WAA3C;AACAhB,WAAUkF,MAAV,CAAiB/E,SAASgF,UAA1B;;AAEAjE,UAASkE,gBAAT,CAA0B,WAA1B,EAAuCC,yBAAvC,EAAkE,KAAlE;AACAxE,QAAOuE,gBAAP,CAAwB,QAAxB,EAAkCE,oBAAlC,EAAwD,KAAxD;AAEA;;AAED,SAASD,yBAAT,CAAmCE,KAAnC,EAA0C;;AAEzChF,UAAS,CAACgF,MAAMC,OAAN,GAAgB5E,WAAjB,IAAgC,IAAzC;AACAJ,UAAS,CAAC+E,MAAME,OAAN,GAAgB1E,WAAjB,IAAgC,IAAzC;AAEA;;AAED,SAASuE,oBAAT,GAAgC;;AAE/BrF,QAAOyF,MAAP,GAAgB7E,OAAOC,UAAP,GAAoBD,OAAOG,WAA3C;AACAf,QAAO0F,sBAAP;;AAEAxF,UAAS8E,OAAT,CAAiBpE,OAAOC,UAAxB,EAAoCD,OAAOG,WAA3C;AAEA;;AAED,SAAS0B,aAAT,GAAyB;;AAExBkD,uBAAsBlD,aAAtB;;AAEA,KAAI1C,UAAU+B,KAAV,CAAgB8D,UAAhB,KAA+B,QAAnC,EAA6C;;AAE5C,MAAI1D,WAAY,CAACzB,KAAKC,GAAL,KAAaF,UAAd,IAA4B,IAA7B,GAAqC,IAApD;;AAEAR,SAAOkC,QAAP,CAAgBkC,CAAhB,IAAqB,CAAC9D,SAASN,OAAOkC,QAAP,CAAgBkC,CAA1B,IAA+B,KAApD;AACApE,SAAOkC,QAAP,CAAgBqC,CAAhB,IAAqB,CAAC,CAAChE,MAAD,GAAU,EAAV,GAAeP,OAAOkC,QAAP,CAAgBqC,CAAhC,IAAqC,IAA1D;AACAvE,SAAOkC,QAAP,CAAgBC,CAAhB,GAAoB,CAACD,QAAD,GAAY,IAAhC;;AAEAhC,WAAS2F,MAAT,CAAgB5F,KAAhB,EAAuBD,MAAvB;AACA;AACD","file":"fxclouds.js","sourceRoot":"/home/travis/build/csrdelft/csrdelft.nl","sourcesContent":["import * as THREE from 'three';\nimport Detector from './lib/three.detector';\n\nif (!Detector.webgl) {\n\tDetector.addGetWebGLMessage();\n}\n\nlet container;\nlet camera, scene, renderer;\nlet mesh, geometry, material;\n\nlet mouseX = 0, mouseY = 0;\nconst start_time = Date.now();\n\nconst windowHalfX = window.innerWidth / 2;\nconst windowHalfY = window.innerHeight / 2;\n\ninitClouds();\n\nfunction initClouds() {\n\n\tcontainer = document.getElementById('cd-main-overlay');\n\n\t// Bg gradient\n\n\tconst canvas = document.createElement('canvas');\n\tcanvas.width = 32;\n\tcanvas.height = window.innerHeight;\n\n\tconst context = canvas.getContext('2d');\n\n\tconst gradient = context.createLinearGradient(0, 0, 0, canvas.height);\n\tgradient.addColorStop(0, '#1e4877');\n\tgradient.addColorStop(0.5, '#4584b4');\n\n\tcontext.fillStyle = gradient;\n\tcontext.fillRect(0, 0, canvas.width, canvas.height);\n\n\tcontainer.style.background = `url(\"${canvas.toDataURL('image/png')}\")`;\n\n\t//\n\n\tcamera = new THREE.PerspectiveCamera(30, window.innerWidth / window.innerHeight, 1, 3000);\n\tcamera.position.z = 3000;\n\n\tscene = new THREE.Scene();\n\n\tgeometry = new THREE.Geometry();\n\n\tconst texture = THREE.ImageUtils.loadTexture('/images/cloud10.png', null, animateClouds);\n\ttexture.magFilter = THREE.LinearMipMapLinearFilter;\n\ttexture.minFilter = THREE.LinearMipMapLinearFilter;\n\n\tconst fog = new THREE.Fog(0x4584b4, -100, 3000);\n\n\tmaterial = new THREE.ShaderMaterial({\n\t\tuniforms: {\n\t\t\tmap: {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: texture\n\t\t\t},\n\t\t\tfogColor: {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: fog.color\n\t\t\t},\n\t\t\tfogNear: {\n\t\t\t\ttype: 'f',\n\t\t\t\tvalue: fog.near\n\t\t\t},\n\t\t\tfogFar: {\n\t\t\t\ttype: 'f',\n\t\t\t\tvalue: fog.far\n\t\t\t}\n\t\t},\n\t\tvertexShader: document.getElementById('vs').textContent,\n\t\tfragmentShader: document.getElementById('fs').textContent,\n\t\tdepthWrite: false,\n\t\tdepthTest: false,\n\t\ttransparent: true\n\n\t});\n\n\tconst plane = new THREE.Mesh(new THREE.PlaneGeometry(64, 64));\n\n\tfor (let i = 0; i < 8000; i++) {\n\n\t\tplane.position.x = Math.random() * 1000 - 500;\n\t\tplane.position.y = -Math.random() * Math.random() * 200 - 15;\n\t\tplane.position.z = i;\n\t\tplane.rotation.z = Math.random() * Math.PI;\n\t\tplane.scale.x = plane.scale.y = Math.random() * Math.random() * 1.5 + 0.5;\n\n\t\tTHREE.GeometryUtils.merge(geometry, plane);\n\n\t}\n\n\tmesh = new THREE.Mesh(geometry, material);\n\tscene.add(mesh);\n\n\tmesh = new THREE.Mesh(geometry, material);\n\tmesh.position.z = -8000;\n\tscene.add(mesh);\n\n\trenderer = new THREE.WebGLRenderer({\n\t\tantialias: false\n\t});\n\trenderer.setSize(window.innerWidth, window.innerHeight);\n\tcontainer.append(renderer.domElement);\n\n\tdocument.addEventListener('mousemove', onDocumentMouseMoveClouds, false);\n\twindow.addEventListener('resize', onWindowResizeClouds, false);\n\n}\n\nfunction onDocumentMouseMoveClouds(event) {\n\n\tmouseX = (event.clientX - windowHalfX) * 0.25;\n\tmouseY = (event.clientY - windowHalfY) * 0.15;\n\n}\n\nfunction onWindowResizeClouds() {\n\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\tcamera.updateProjectionMatrix();\n\n\trenderer.setSize(window.innerWidth, window.innerHeight);\n\n}\n\nfunction animateClouds() {\n\n\trequestAnimationFrame(animateClouds);\n\n\tif (container.style.visibility !== 'hidden') {\n\n\t\tlet position = ((Date.now() - start_time) * 0.03) % 8000;\n\n\t\tcamera.position.x += (mouseX - camera.position.x) * 0.005;\n\t\tcamera.position.y += (-mouseY - 70 - camera.position.y) * 0.01;\n\t\tcamera.position.z = -position + 8000;\n\n\t\trenderer.render(scene, camera);\n\t}\n}\n"]}]}