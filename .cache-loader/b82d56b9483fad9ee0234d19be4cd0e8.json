{"remainingRequest":"/home/travis/build/csrdelft/csrdelft.nl/node_modules/babel-loader/lib/index.js??ref--1-1!/home/travis/build/csrdelft/csrdelft.nl/node_modules/eslint-loader/index.js!/home/travis/build/csrdelft/csrdelft.nl/resources/assets/js/datatable-api.js","dependencies":[{"path":"/home/travis/build/csrdelft/csrdelft.nl/resources/assets/js/datatable-api.js","mtime":1545951539341},{"path":"/home/travis/build/csrdelft/csrdelft.nl/node_modules/cache-loader/dist/cjs.js","mtime":1545951596970},{"path":"/home/travis/build/csrdelft/csrdelft.nl/node_modules/babel-loader/lib/index.js","mtime":1545951596898},{"path":"/home/travis/build/csrdelft/csrdelft.nl/node_modules/eslint-loader/index.js","mtime":1545951596454}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.fnUpdateDataTable = fnUpdateDataTable;\nexports.fnGetSelection = fnGetSelection;\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _context = require('./context');\n\nvar _context2 = _interopRequireDefault(_context);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/****************************\n * Een paar functies om met datatables te\n * praten, laadt datatables zelf niet in.\n */\n\n/**\n * @see datatable.js\n * @see view/formulier/datatable/DataTable.php\n * @param tableId\n * @param response\n */\nfunction fnUpdateDataTable(tableId, response) {\n    var $table = (0, _jquery2.default)(tableId);\n    var table = $table.DataTable();\n    // update or remove existing rows or add new rows\n    response.data.forEach(function (row) {\n        var $tr = (0, _jquery2.default)('tr[data-uuid=\"' + row.UUID + '\"]');\n        if ($tr.length === 1) {\n            if ('remove' in row) {\n                table.row($tr).remove();\n            } else {\n                table.row($tr).data(row);\n                (0, _context2.default)($tr);\n            }\n        } else if ($tr.length === 0) {\n            table.row.add(row);\n        } else {\n            alert($tr.length);\n        }\n    });\n    table.draw(false);\n}\n\n/**\n * @see csrdelft.js\n * @param tableId\n * @returns {Array}\n */\nfunction fnGetSelection(tableId) {\n    var selection = [];\n    (0, _jquery2.default)(tableId + ' tbody tr.selected').each(function () {\n        selection.push((0, _jquery2.default)(this).attr('data-uuid'));\n    });\n    return selection;\n}",{"version":3,"sources":["resources/assets/js/datatable-api.js"],"names":["fnUpdateDataTable","fnGetSelection","tableId","response","$table","table","DataTable","data","forEach","row","$tr","UUID","length","remove","add","alert","draw","selection","each","push","attr"],"mappings":";;;;;QAegBA,iB,GAAAA,iB;QA8BAC,c,GAAAA,c;;AA7ChB;;;;AAEA;;;;;;AAEA;;;;;AAKA;;;;;;AAMO,SAASD,iBAAT,CAA2BE,OAA3B,EAAoCC,QAApC,EAA8C;AACjD,QAAIC,SAAS,sBAAEF,OAAF,CAAb;AACA,QAAIG,QAAQD,OAAOE,SAAP,EAAZ;AACA;AACAH,aAASI,IAAT,CAAcC,OAAd,CAAsB,UAACC,GAAD,EAAS;AAC3B,YAAIC,MAAM,sBAAE,mBAAmBD,IAAIE,IAAvB,GAA8B,IAAhC,CAAV;AACA,YAAID,IAAIE,MAAJ,KAAe,CAAnB,EAAsB;AAClB,gBAAI,YAAYH,GAAhB,EAAqB;AACjBJ,sBAAMI,GAAN,CAAUC,GAAV,EAAeG,MAAf;AACH,aAFD,MAGK;AACDR,sBAAMI,GAAN,CAAUC,GAAV,EAAeH,IAAf,CAAoBE,GAApB;AACA,uCAAYC,GAAZ;AACH;AACJ,SARD,MASK,IAAIA,IAAIE,MAAJ,KAAe,CAAnB,EAAsB;AACvBP,kBAAMI,GAAN,CAAUK,GAAV,CAAcL,GAAd;AACH,SAFI,MAGA;AACDM,kBAAML,IAAIE,MAAV;AACH;AACJ,KAjBD;AAkBAP,UAAMW,IAAN,CAAW,KAAX;AACH;;AAED;;;;;AAKO,SAASf,cAAT,CAAwBC,OAAxB,EAAiC;AACpC,QAAIe,YAAY,EAAhB;AACA,0BAAEf,UAAU,oBAAZ,EAAkCgB,IAAlC,CAAuC,YAAY;AAC/CD,kBAAUE,IAAV,CAAe,sBAAE,IAAF,EAAQC,IAAR,CAAa,WAAb,CAAf;AACH,KAFD;AAGA,WAAOH,SAAP;AACH","file":"datatable-api.js","sourceRoot":"/home/travis/build/csrdelft/csrdelft.nl","sourcesContent":["import $ from 'jquery';\n\nimport initContext from './context';\n\n/****************************\n * Een paar functies om met datatables te\n * praten, laadt datatables zelf niet in.\n */\n\n/**\n * @see datatable.js\n * @see view/formulier/datatable/DataTable.php\n * @param tableId\n * @param response\n */\nexport function fnUpdateDataTable(tableId, response) {\n    let $table = $(tableId);\n    let table = $table.DataTable();\n    // update or remove existing rows or add new rows\n    response.data.forEach((row) => {\n        let $tr = $('tr[data-uuid=\"' + row.UUID + '\"]');\n        if ($tr.length === 1) {\n            if ('remove' in row) {\n                table.row($tr).remove();\n            }\n            else {\n                table.row($tr).data(row);\n                initContext($tr);\n            }\n        }\n        else if ($tr.length === 0) {\n            table.row.add(row);\n        }\n        else {\n            alert($tr.length);\n        }\n    });\n    table.draw(false);\n}\n\n/**\n * @see csrdelft.js\n * @param tableId\n * @returns {Array}\n */\nexport function fnGetSelection(tableId) {\n    let selection = [];\n    $(tableId + ' tbody tr.selected').each(function () {\n        selection.push($(this).attr('data-uuid'));\n    });\n    return selection;\n}"]}]}