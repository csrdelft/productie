{"version":3,"sources":["webpack:///./js/lib/datepicker.ts"],"names":["initDateTimePicker","el","before","after","maxDate","minDate","readonly","dataset","readOnly","defaultOpts","locale","enableTime","time_24hr","Object","assign","plugins","input","initDatePicker"],"mappings":"2FAAA,0JAGO,MAAMA,EAAsBC,IAC/B,MAAM,OAAEC,EAAM,MAAEC,EAAK,QAAEC,EAAO,QAAEC,EAAO,SAAEC,GAAaL,EAAGM,QACzD,GAAID,EAEA,YADAL,EAAGO,UAAW,GAGlB,MAAMC,EAAc,CAChBC,OAAQ,QACRC,YAAY,EACZC,WAAW,EACXP,UACAD,WAGAD,IAIAD,EACA,IAAUD,EAAIY,OAAOC,OAAOD,OAAOC,OAAO,GAAIL,GAAc,CAAEM,QAAS,CAAC,IAAY,CAAEC,MAAO,IAAId,QAGrG,IAAUD,EAAIQ,KAELQ,EAAkBhB,IAC3B,MAAM,SAAEK,EAAQ,QAAED,EAAO,QAAED,GAAYH,EAAGM,QACtCD,EACAL,EAAGO,UAAW,EAGlB,IAAUP,EAAI,CACVS,OAAQ,QACRL,UACAD","file":"js/datepicker.ffd50d567849055a241f.chunk.js","sourcesContent":["import flatpickr from 'flatpickr';\nimport { Dutch } from 'flatpickr/dist/l10n/nl';\nimport rangePlugin from 'flatpickr/dist/plugins/rangePlugin';\nexport const initDateTimePicker = (el) => {\n    const { before, after, maxDate, minDate, readonly } = el.dataset;\n    if (readonly) {\n        el.readOnly = true;\n        return;\n    }\n    const defaultOpts = {\n        locale: Dutch,\n        enableTime: true,\n        time_24hr: true,\n        minDate,\n        maxDate,\n    };\n    // Als after is gezet, dan zorgt before dat deze datetimepicker geinitialiseerd wordt.\n    if (after) {\n        return;\n    }\n    // rangePlugin initialiseerd ook de andere input.\n    if (before) {\n        flatpickr(el, Object.assign(Object.assign({}, defaultOpts), { plugins: [rangePlugin({ input: `#${before}` })] }));\n        return;\n    }\n    flatpickr(el, defaultOpts);\n};\nexport const initDatePicker = (el) => {\n    const { readonly, minDate, maxDate } = el.dataset;\n    if (readonly) {\n        el.readOnly = true;\n        return;\n    }\n    flatpickr(el, {\n        locale: Dutch,\n        minDate,\n        maxDate\n    });\n};\n"],"sourceRoot":""}