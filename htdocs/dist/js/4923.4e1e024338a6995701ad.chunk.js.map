{"version":3,"sources":["webpack:///../.yarn/cache/timeago.js-npm-4.0.2-e87d64f9a3-c785a06988.zip/node_modules/timeago.js/esm/lang/en_US.js","webpack:///../.yarn/cache/timeago.js-npm-4.0.2-e87d64f9a3-c785a06988.zip/node_modules/timeago.js/esm/lang/zh_CN.js","webpack:///../.yarn/cache/timeago.js-npm-4.0.2-e87d64f9a3-c785a06988.zip/node_modules/timeago.js/esm/register.js","webpack:///../.yarn/cache/timeago.js-npm-4.0.2-e87d64f9a3-c785a06988.zip/node_modules/timeago.js/esm/utils/dom.js","webpack:///../.yarn/cache/timeago.js-npm-4.0.2-e87d64f9a3-c785a06988.zip/node_modules/timeago.js/esm/utils/date.js","webpack:///../.yarn/cache/timeago.js-npm-4.0.2-e87d64f9a3-c785a06988.zip/node_modules/timeago.js/esm/realtime.js","webpack:///../.yarn/cache/timeago.js-npm-4.0.2-e87d64f9a3-c785a06988.zip/node_modules/timeago.js/esm/index.js","webpack:///./js/lib/timeago.ts","webpack:///../.yarn/cache/timeago.js-npm-4.0.2-e87d64f9a3-c785a06988.zip/node_modules/timeago.js/lib/lang/nl.js"],"names":["EN_US","ZH_CN","Locales","register","locale","func","ATTR_TIMEAGO_TID","SEC_ARRAY","toDate","input","Date","isNaN","test","parseInt","trim","replace","TIMER_POOL","clear","tid","clearTimeout","run","node","date","localeFunc","opts","getAttribute","relativeDate","minInterval","diff","innerText","agoIn","totalSec","Math","abs","idx","length","floor","toString","setTimeout","min","max","rst","i","d","ceil","nextInterval","timerId","setAttribute","setTimerId","render","nodes","nodeList","forEach","getDateAttribute","unit","initTimeago","el","exports","number","index"],"mappings":"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","file":"js/4923.4e1e024338a6995701ad.chunk.js","sourcesContent":["var EN_US = ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['just now', 'right now'];\n    var unit = EN_US[Math.floor(idx / 2)];\n    if (diff > 1)\n        unit += 's';\n    return [diff + \" \" + unit + \" ago\", \"in \" + diff + \" \" + unit];\n}\n//# sourceMappingURL=en_US.js.map","var ZH_CN = ['秒', '分钟', '小时', '天', '周', '个月', '年'];\nexport default function (diff, idx) {\n    if (idx === 0)\n        return ['刚刚', '片刻后'];\n    var unit = ZH_CN[~~(idx / 2)];\n    return [diff + \" \" + unit + \"\\u524D\", diff + \" \" + unit + \"\\u540E\"];\n}\n//# sourceMappingURL=zh_CN.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n/**\n * All supported locales\n */\nvar Locales = {};\n/**\n * register a locale\n * @param locale\n * @param func\n */\nexport var register = function (locale, func) {\n    Locales[locale] = func;\n};\n/**\n * get a locale, default is en_US\n * @param locale\n * @returns {*}\n */\nexport var getLocale = function (locale) {\n    return Locales[locale] || Locales['en_US'];\n};\n//# sourceMappingURL=register.js.map","var ATTR_TIMEAGO_TID = 'timeago-id';\n/**\n * get the datetime attribute, `datetime` are supported.\n * @param node\n * @returns {*}\n */\nexport function getDateAttribute(node) {\n    return node.getAttribute('datetime');\n}\n/**\n * set the node attribute, native DOM\n * @param node\n * @param timerId\n * @returns {*}\n */\nexport function setTimerId(node, timerId) {\n    // @ts-ignore\n    node.setAttribute(ATTR_TIMEAGO_TID, timerId);\n}\n/**\n * get the timer id\n * @param node\n */\nexport function getTimerId(node) {\n    return parseInt(node.getAttribute(ATTR_TIMEAGO_TID));\n}\n//# sourceMappingURL=dom.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nvar SEC_ARRAY = [\n    60,\n    60,\n    24,\n    7,\n    365 / 7 / 12,\n    12,\n];\n/**\n * format Date / string / timestamp to timestamp\n * @param input\n * @returns {*}\n */\nexport function toDate(input) {\n    if (input instanceof Date)\n        return input;\n    // @ts-ignore\n    if (!isNaN(input) || /^\\d+$/.test(input))\n        return new Date(parseInt(input));\n    input = (input || '')\n        // @ts-ignore\n        .trim()\n        .replace(/\\.\\d+/, '') // remove milliseconds\n        .replace(/-/, '/')\n        .replace(/-/, '/')\n        .replace(/(\\d)T(\\d)/, '$1 $2')\n        .replace(/Z/, ' UTC') // 2017-2-5T3:57:52Z -> 2017-2-5 3:57:52UTC\n        .replace(/([+-]\\d\\d):?(\\d\\d)/, ' $1$2'); // -04:00 -> -0400\n    return new Date(input);\n}\n/**\n * format the diff second to *** time ago, with setting locale\n * @param diff\n * @param localeFunc\n * @returns\n */\nexport function formatDiff(diff, localeFunc) {\n    /**\n     * if locale is not exist, use defaultLocale.\n     * if defaultLocale is not exist, use build-in `en`.\n     * be sure of no error when locale is not exist.\n     *\n     * If `time in`, then 1\n     * If `time ago`, then 0\n     */\n    var agoIn = diff < 0 ? 1 : 0;\n    /**\n     * Get absolute value of number (|diff| is non-negative) value of x\n     * |diff| = diff if diff is positive\n     * |diff| = -diff if diff is negative\n     * |0| = 0\n     */\n    diff = Math.abs(diff);\n    /**\n     * Time in seconds\n     */\n    var totalSec = diff;\n    /**\n     * Unit of time\n     */\n    var idx = 0;\n    for (; diff >= SEC_ARRAY[idx] && idx < SEC_ARRAY.length; idx++) {\n        diff /= SEC_ARRAY[idx];\n    }\n    /**\n     * Math.floor() is alternative of ~~\n     *\n     * The differences and bugs:\n     * Math.floor(3.7) -> 4 but ~~3.7 -> 3\n     * Math.floor(1559125440000.6) -> 1559125440000 but ~~1559125440000.6 -> 52311552\n     *\n     * More information about the performance of algebraic:\n     * https://www.youtube.com/watch?v=65-RbBwZQdU\n     */\n    diff = Math.floor(diff);\n    idx *= 2;\n    if (diff > (idx === 0 ? 9 : 1))\n        idx += 1;\n    return localeFunc(diff, idx, totalSec)[agoIn].replace('%s', diff.toString());\n}\n/**\n * calculate the diff second between date to be formatted an now date.\n * @param date\n * @param relativeDate\n * @returns {number}\n */\nexport function diffSec(date, relativeDate) {\n    var relDate = relativeDate ? toDate(relativeDate) : new Date();\n    return (+relDate - +toDate(date)) / 1000;\n}\n/**\n * nextInterval: calculate the next interval time.\n * - diff: the diff sec between now and date to be formatted.\n *\n * What's the meaning?\n * diff = 61 then return 59\n * diff = 3601 (an hour + 1 second), then return 3599\n * make the interval with high performance.\n **/\nexport function nextInterval(diff) {\n    var rst = 1, i = 0, d = Math.abs(diff);\n    for (; diff >= SEC_ARRAY[i] && i < SEC_ARRAY.length; i++) {\n        diff /= SEC_ARRAY[i];\n        rst *= SEC_ARRAY[i];\n    }\n    d = d % rst;\n    d = d ? rst - d : rst;\n    return Math.ceil(d);\n}\n//# sourceMappingURL=date.js.map","import { setTimerId, getTimerId, getDateAttribute } from './utils/dom';\nimport { formatDiff, diffSec, nextInterval } from './utils/date';\nimport { getLocale } from './register';\n// all realtime timer\nvar TIMER_POOL = {};\n/**\n * clear a timer from pool\n * @param tid\n */\nvar clear = function (tid) {\n    clearTimeout(tid);\n    delete TIMER_POOL[tid];\n};\n// run with timer(setTimeout)\nfunction run(node, date, localeFunc, opts) {\n    // clear the node's exist timer\n    clear(getTimerId(node));\n    var relativeDate = opts.relativeDate, minInterval = opts.minInterval;\n    // get diff seconds\n    var diff = diffSec(date, relativeDate);\n    // render\n    node.innerText = formatDiff(diff, localeFunc);\n    var tid = setTimeout(function () {\n        run(node, date, localeFunc, opts);\n    }, Math.min(Math.max(nextInterval(diff), minInterval || 1) * 1000, 0x7fffffff));\n    // there is no need to save node in object. Just save the key\n    TIMER_POOL[tid] = 0;\n    setTimerId(node, tid);\n}\n/**\n * cancel a timer or all timers\n * @param node - node hosting the time string\n */\nexport function cancel(node) {\n    // cancel one\n    if (node)\n        clear(getTimerId(node));\n    // cancel all\n    // @ts-ignore\n    else\n        Object.keys(TIMER_POOL).forEach(clear);\n}\n/**\n * render a dom realtime\n * @param nodes\n * @param locale\n * @param opts\n */\nexport function render(nodes, locale, opts) {\n    // by .length\n    // @ts-ignore\n    var nodeList = nodes.length ? nodes : [nodes];\n    nodeList.forEach(function (node) {\n        run(node, getDateAttribute(node), getLocale(locale), opts || {});\n    });\n    return nodeList;\n}\n//# sourceMappingURL=realtime.js.map","/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\nimport en_US from './lang/en_US';\nimport zh_CN from './lang/zh_CN';\nimport { register } from './register';\nregister('en_US', en_US);\nregister('zh_CN', zh_CN);\nexport { format } from './format';\nexport { render, cancel } from './realtime';\nexport { register };\n//# sourceMappingURL=index.js.map","import { render, register } from 'timeago.js';\nimport nl from 'timeago.js/lib/lang/nl';\nregister('nl', nl);\nexport const initTimeago = (el) => {\n    render(el, 'nl');\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction default_1(number, index) {\n    return [\n        ['recent', 'binnenkort'],\n        ['%s seconden geleden', 'binnen %s seconden'],\n        ['1 minuut geleden', 'binnen 1 minuut'],\n        ['%s minuten geleden', 'binnen %s minuten'],\n        ['1 uur geleden', 'binnen 1 uur'],\n        ['%s uur geleden', 'binnen %s uur'],\n        ['1 dag geleden', 'binnen 1 dag'],\n        ['%s dagen geleden', 'binnen %s dagen'],\n        ['1 week geleden', 'binnen 1 week'],\n        ['%s weken geleden', 'binnen %s weken'],\n        ['1 maand geleden', 'binnen 1 maand'],\n        ['%s maanden geleden', 'binnen %s maanden'],\n        ['1 jaar geleden', 'binnen 1 jaar'],\n        ['%s jaar geleden', 'binnen %s jaar'],\n    ][index];\n}\nexports.default = default_1;\n//# sourceMappingURL=nl.js.map"],"sourceRoot":""}