{"version":3,"sources":["webpack:///../.yarn/cache/@sentry-core-npm-7.1.1-fe15e6fa04-687d46e7a0.zip/node_modules/@sentry/core/esm/integration.js","webpack:///../.yarn/cache/@sentry-core-npm-7.1.1-fe15e6fa04-687d46e7a0.zip/node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack:///../.yarn/cache/@sentry-core-npm-7.1.1-fe15e6fa04-687d46e7a0.zip/node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/error.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/dsn.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/envelope.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/normalize.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/memo.js","webpack:///../.yarn/cache/@sentry-core-npm-7.1.1-fe15e6fa04-687d46e7a0.zip/node_modules/@sentry/core/esm/api.js","webpack:///../.yarn/cache/@sentry-core-npm-7.1.1-fe15e6fa04-687d46e7a0.zip/node_modules/@sentry/core/esm/envelope.js","webpack:///../.yarn/cache/@sentry-core-npm-7.1.1-fe15e6fa04-687d46e7a0.zip/node_modules/@sentry/core/esm/baseclient.js","webpack:///../.yarn/cache/@sentry-core-npm-7.1.1-fe15e6fa04-687d46e7a0.zip/node_modules/@sentry/core/esm/version.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.1.1-8cbe1469f6-7a2dc5a1ea.zip/node_modules/@sentry/browser/esm/eventbuilder.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/severity.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.1.1-8cbe1469f6-7a2dc5a1ea.zip/node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.1.1-8cbe1469f6-7a2dc5a1ea.zip/node_modules/@sentry/browser/esm/transports/utils.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.1.1-8cbe1469f6-7a2dc5a1ea.zip/node_modules/@sentry/browser/esm/client.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/clientreport.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.1.1-8cbe1469f6-7a2dc5a1ea.zip/node_modules/@sentry/browser/esm/stack-parsers.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.1.1-8cbe1469f6-7a2dc5a1ea.zip/node_modules/@sentry/browser/esm/helpers.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.1.1-8cbe1469f6-7a2dc5a1ea.zip/node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.1.1-8cbe1469f6-7a2dc5a1ea.zip/node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.1.1-8cbe1469f6-7a2dc5a1ea.zip/node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.1.1-8cbe1469f6-7a2dc5a1ea.zip/node_modules/@sentry/browser/esm/integrations/dedupe.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.1.1-8cbe1469f6-7a2dc5a1ea.zip/node_modules/@sentry/browser/esm/integrations/httpcontext.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/promisebuffer.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/ratelimit.js","webpack:///../.yarn/cache/@sentry-core-npm-7.1.1-fe15e6fa04-687d46e7a0.zip/node_modules/@sentry/core/esm/transports/base.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.1.1-8cbe1469f6-7a2dc5a1ea.zip/node_modules/@sentry/browser/esm/transports/fetch.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.1.1-8cbe1469f6-7a2dc5a1ea.zip/node_modules/@sentry/browser/esm/transports/xhr.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.1.1-8cbe1469f6-7a2dc5a1ea.zip/node_modules/@sentry/browser/esm/sdk.js","webpack:///../.yarn/cache/@sentry-core-npm-7.1.1-fe15e6fa04-687d46e7a0.zip/node_modules/@sentry/core/esm/sdk.js","webpack:///../.yarn/cache/@sentry-hub-npm-7.1.1-7ae9933aca-ddc61b31aa.zip/node_modules/@sentry/hub/esm/exports.js","webpack:///../.yarn/cache/@sentry-hub-npm-7.1.1-7ae9933aca-ddc61b31aa.zip/node_modules/@sentry/hub/esm/hub.js","webpack:///../.yarn/cache/@sentry-hub-npm-7.1.1-7ae9933aca-ddc61b31aa.zip/node_modules/@sentry/hub/esm/scope.js","webpack:///../.yarn/cache/@sentry-hub-npm-7.1.1-7ae9933aca-ddc61b31aa.zip/node_modules/@sentry/hub/esm/session.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/errors.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/hubextensions.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/idletransaction.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/tracing.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/backgroundtab.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/generateUniqueID.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/getLCP.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/metrics/utils.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/metrics/index.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/getCLS.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/getFID.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/request.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/router.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/browser/browsertracing.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/index.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/span.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/transaction.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.1.1-2ce086629f-3b11cc36ea.zip/node_modules/@sentry/tracing/esm/utils.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/baggage.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/browser.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/global.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/instrument.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/is.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/logger.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/misc.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/node.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/env.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/object.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/stacktrace.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/string.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/supports.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/syncpromise.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.1.1-f2bbac871b-b36d0e03b0.zip/node_modules/@sentry/utils/esm/time.js"],"names":["installedIntegrations","filterDuplicates","integrations","reduce","acc","every","accIntegration","name","push","getIntegrationsToSetup","options","defaultIntegrations","userIntegrations","Array","isArray","filter","userIntegration","integrationsNames","map","i","alwaysLastToRun","indexOf","splice","DEFAULT_IGNORE_ERRORS","InboundFilters","this","id","_options","prototype","__init","call","addGlobalEventProcessor","getCurrentHub","eventProcess","event","hub","self","getIntegration","client","getClient","clientOptions","getOptions","ignoreInternal","exception","values","type","e","_isSentryError","__SENTRY_DEBUG__","ignoreErrors","length","message","value","oO","_getPossibleEventMessages","some","pattern","_isIgnoredError","denyUrls","url","_getEventFilterUrl","_isDeniedUrl","allowUrls","_isAllowedUrl","_shouldDropEvent","internalOptions","undefined","_mergeOptions","frames","stacktrace","frame","filename","_getLastValidUrl","__initStatic","originalFunctionToString","FunctionToString","Function","toString","args","context","apply","_optionalChain","ops","lastAccessLHS","op","fn","SentryError","Error","super","constructor","Object","setPrototypeOf","DSN_REGEX","dsn","withPassword","host","path","pass","port","projectId","protocol","publicKey","dsnFromString","str","match","exec","lastPath","slice","split","join","pop","projectMatch","dsnFromComponents","components","from","forEach","component","isValidProtocol","isNaN","parseInt","validateDsn","createEnvelope","headers","items","addItemToEnvelope","envelope","newItem","forEachEnvelopeItem","callback","envelopeItem","envelopeItemType","encodeUTF8","input","textEncoder","TextEncoder","encode","serializeEnvelope","envHeaders","parts","JSON","stringify","append","next","item","itemHeaders","payload","Uint8Array","buffers","totalLength","buf","merged","offset","buffer","set","concatBuffers","createAttachmentEnvelopeItem","attachment","data","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","session","sessions","transaction","client_report","user_report","envelopeItemTypeToDataCategory","normalize","depth","Infinity","maxProperties","visit","err","ERROR","normalizeToSize","object","maxSize","normalized","encodeURI","utf8Length","key","memo","hasWeakSet","WeakSet","inner","obj","has","add","delete","memoBuilder","memoize","unmemoize","valueWithToJSON","toJSON","includes","is","stringified","_events","g","window","document","String","getPrototypeOf","stringifyValue","startsWith","replace","numAdded","visitable","visitKey","hasOwnProperty","visitValue","getBaseApiEndpoint","getEnvelopeEndpointWithUrlEncodedAuth","tunnel","_getIngestEndpoint","sentry_key","sentry_version","_encodedAuth","getSdkMetadataForEnvelopeHeader","metadata","sdk","version","createEventEnvelope","sdkInfo","eventType","transactionSampling","sdkProcessingMetadata","method","samplingMethod","rate","sampleRate","packages","enhanceEventWithSdkInfo","tags","extra","baseClientNormalized","skippedNormalization","normalizeDepth","event_id","sent_at","Date","toISOString","contexts","trace","trace_id","environment","release","user","segment","public_key","createEventEnvelopeHeaders","sample_rates","ALREADY_SEEN_ERROR","BaseClient","_integrations","_integrationsInitialized","_numProcessing","_outcomes","__init2","__init3","__init4","_dsn","_transport","transport","recordDroppedEvent","bind","transportOptions","hint","scope","log","eventId","_process","eventFromException","then","_captureEvent","result","level","promisedEvent","eventFromMessage","originalException","_isEnabled","sendSession","init","timeout","_isClientDoneProcessing","clientFinished","flush","transportFlushed","enabled","integrationIndex","integration","setupOnce","integrationId","_oO","env","_metadata","attachments","_","_2","_3","_sendEnvelope","createSessionEnvelope","reason","category","sendClientReports","crashed","errored","exceptions","ex","mechanism","handled","sessionNonTerminal","status","errors","Number","captureSession","resolve","ticked","interval","setInterval","clearInterval","normalizeMaxBreadth","prepared","timestamp","_applyClientOptions","_applyIntegrationsMetadata","finalScope","captureContext","update","getAttachments","applyToEvent","evt","_normalizeEvent","maxBreadth","breadcrumbs","b","spans","span","dist","maxValueLength","request","integrationsArray","keys","_processEvent","finalEvent","beforeSend","isTransaction","Math","random","_prepareEvent","__sentry__","rv","nullErr","_ensureBeforeSendRv","processedEvent","getSession","_updateSessionFromEvent","sendEvent","captureException","promise","send","outcomes","quantity","SDK_VERSION","exceptionFromError","stackParser","parseStackFrames","extractMessage","eventFromError","stack","popSize","framesToPop","reactMinifiedRegexp","test","getPopSize","error","eventFromUnknownInput","syntheticException","attachStacktrace","isUnhandledRejection","domException","eventFromString","code","__serialized__","eventFromPlainObject","synthetic","validSeverityLevels","severityLevelFromString","BREADCRUMB_INTEGRATION_ID","Breadcrumbs","console","dom","fetch","history","sentry","xhr","_consoleBreadcrumb","_innerDomBreadcrumb","handlerData","target","keyAttrs","serializeAttribute","addBreadcrumb","global","_domBreadcrumb","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","breadcrumb","arguments","logger","endTimestamp","__sentry_own_request__","status_code","body","__sentry_xhr__","fetchData","response","to","parsedLoc","location","href","parsedFrom","parsedTo","relative","cachedFetchImpl","getNativeFetchImplementation","fetchImpl","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","globalObject","BrowserClient","addEventListener","visibilityState","_flushOutcomes","breadcrumbIntegration","getIntegrationById","platform","_clearOutcomes","discarded_events","navigator","sendBeacon","supports","credentials","keepalive","sendReport","UNKNOWN_FUNCTION","createFrame","func","lineno","colno","function","in_app","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackLineParsers","line","subMatch","extractSafariExtensionDetails","defaultStackParser","isSafariExtension","isSafariWebExtension","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","setTimeout","wrap","before","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","addEventProcessor","property","getOwnPropertyDescriptor","configurable","defineProperty","get","DEFAULT_EVENT_TARGET","TryCatch","XMLHttpRequest","eventTarget","requestAnimationFrame","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","original","originalCallback","handler","originalSend","prop","wrapOptions","originalFunction","proto","eventName","handleEvent","originalRemoveEventListener","wrappedEventHandler","originalEventHandler","GlobalHandlers","_installFunc","onerror","_installGlobalOnErrorHandler","onunhandledrejection","_installGlobalOnUnhandledRejectionHandler","stackTraceLimit","installFunc","getHubAndOptions","msg","column","ERROR_TYPES_RE","groups","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","addMechanismAndCapture","detail","ev","ev0","ev0s","ev0sf","captureEvent","LinkedErrors","_key","_limit","limit","parser","linkedErrors","_walkErrorTree","_handler","Dedupe","eventProcessor","currentEvent","previousEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","_previousEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","fingerprint","previousFingerprint","HttpContext","referrer","userAgent","Referer","makePromiseBuffer","remove","task","$","taskProducer","drain","reject","counter","capturedSetTimeout","clearTimeout","updateRateLimits","limits","statusCode","now","updatedRateLimits","rateLimitHeader","retryAfterHeader","trim","retryAfter","categories","headerDelay","delay","all","header","headerDate","parse","parseRetryAfterHeader","createTransport","makeRequest","bufferSize","rateLimits","filteredEnvelopeItems","envelopeItemDataCategory","disabledUntil","isRateLimited","filteredEnvelope","recordEnvelopeLoss","makeFetchTransport","nativeFetch","requestOptions","referrerPolicy","fetchOptions","makeXHRTransport","onreadystatechange","readyState","getResponseHeader","open","setRequestHeader","SENTRY_RELEASE","autoSessionTracking","clientClass","debug","warn","getScope","initialScope","bindClient","initAndBind","startSessionOnHub","startSessionTracking","startSession","ignoreDuration","setUser","withScope","DEFAULT_BREADCRUMBS","Hub","_stack","_version","getStackTop","setupIntegrations","getStack","pushScope","popScope","_lastEventId","_withClient","captureMessage","beforeBreadcrumb","maxBreadcrumbs","mergedBreadcrumb","finalBreadcrumb","setTags","extras","setExtras","setTag","setExtra","setContext","oldHub","makeMain","customSamplingContext","_callExtensionMethod","endSession","_sendSessionUpdate","layer","setSession","getUser","currentSession","getMainCarrier","__SENTRY__","extensions","carrier","registry","getHubFromCarrier","setHubOnCarrier","hasHubOnCarrier","isOlderThan","activeDomain","domain","active","registryHubTopStack","_Oo","getHubFromActiveDomain","Scope","__init5","__init6","__init7","__init8","__init9","__init10","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_contexts","_attachments","_sdkProcessingMetadata","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","_notifyScopeListeners","requestSession","getSpan","updatedScope","maxCrumbs","min","getTraceContext","transactionName","_applyFingerprint","_notifyEventProcessors","getGlobalEventProcessors","newData","processors","index","processor","final","concat","makeSession","startingTime","sid","started","duration","did","attrs","ip_address","ipAddress","user_agent","sessionToJSON","updateSession","email","username","closeSession","errorCallback","activeTransaction","setStatus","traceHeaders","toTraceparent","sample","samplingContext","sampled","setMetadata","tracesSampler","parentSampled","tracesSampleRate","isValidSampleRate","_startTransaction","transactionContext","initSpanRecorder","_experiments","startIdleTransaction","idleTimeout","finalTimeout","onScope","addExtensionMethods","startTransaction","packageToIntegrationMapping","mongodb","module","Mongo","mongoose","mysql","Mysql","pg","Postgres","mappedPackages","moduleName","pkg","p","_autoloadDatabaseIntegrations","DEFAULT_IDLE_TIMEOUT","DEFAULT_FINAL_TIMEOUT","IdleTransactionSpanRecorder","_pushActivity","_popActivity","transactionSpanId","maxlen","spanId","finish","IdleTransaction","activities","_heartbeatCounter","_finished","_beforeFinishCallbacks","_idleHub","_idleTimeout","_finalTimeout","_onScope","clearActiveTransaction","configureScope","setSpan","_startIdleTimeout","spanRecorder","keepSpan","startTimestamp","_pingHeartbeat","_idleTimeoutID","_cancelIdleTimeout","heartbeatString","_prevHeartbeatString","_beat","getTransaction","TRACEPARENT_REGEXP","RegExp","bindReporter","metric","reportAllChanges","prevValue","forceReport","delta","initMetric","_nullishCoalesce","entries","floor","observe","PerformanceObserver","supportedEntryTypes","po","l","getEntries","buffered","onHidden","cb","once","onHiddenOrPageHide","removeEventListener","firstHiddenTime","getVisibilityWatcher","timeStamp","reportedMetricIDs","isMeasurementValue","isFinite","_startChild","ctx","startChild","getBrowserPerformanceAPI","performance","_lcpEntry","_clsEntry","_performanceCursor","_measurements","startTrackingWebVitals","mark","onReport","report","sessionValue","sessionEntries","entryHandler","entry","hadRecentInput","firstSessionEntry","lastSessionEntry","startTime","takeRecords","getCLS","unit","visibilityWatcher","stopListening","disconnect","capture","getLCP","timeOrigin","_trackLCP","processingStart","getFID","addPerformanceEntries","performanceEntries","responseStartTimestamp","requestStartTimestamp","entryType","_addPerformanceNavigationTiming","description","requestStart","responseEnd","responseStart","_addRequest","_addNavigationSpans","measureStartTimestamp","measureEndTimestamp","_addMeasureSpans","firstHidden","shouldRecord","resourceName","origin","initiatorType","transferSize","encodedBodySize","decodedBodySize","_addResourceSpans","max","connection","effectiveType","rtt","downlink","deviceMemory","hardwareConcurrency","_trackNavigator","oldValue","measurementTimestamp","normalizedValue","abs","cls","measurementName","setMeasurement","element","size","sources","source","node","_tagMetricInfo","eventEnd","end","start","defaultRequestInstrumentationOptions","traceFetch","traceXHR","tracingOrigins","instrumentOutgoingRequests","shouldCreateSpanForRequest","urlMap","defaultShouldCreateSpan","origins","shouldCreateSpan","__span","setHttpStatus","Request","incomingBaggage","getBaggage","headerBaggageString","find","baggage","addTracingHeaders","fetchCallback","__sentry_xhr_span_id__","getRequestHeader","xhrCallback","DEFAULT_BROWSER_TRACING_OPTIONS","markBackgroundTransactions","routingInstrumentation","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","pathname","BrowserTracing","_emitOptionsWarning","_metricOptions","_reportAllChanges","_getCurrentHub","instrumentRouting","_createRouteTransaction","statusType","beforeNavigate","parentContextFromHeader","sentrytraceValue","getMetaContent","baggageValue","sentrytraceData","traceparent","matches","traceId","parentSpanId","extractTraceparentData","extractTraceDataFromMetaTags","expandedContext","trimEnd","modifiedContext","finalContext","idleTransaction","registerBeforeFinishCallback","Boolean","metaName","querySelector","el","getAttribute","__SENTRY_TRACING__","SpanRecorder","_maxlen","Span","substring","spanContext","childSpan","httpStatus","spanStatus","spanStatusfromHttpCode","sampledString","parent_span_id","span_id","existingBaggage","finalBaggage","_getBaggageWithSentryValues","start_timestamp","_hub","Transaction","_trimEnd","newMetadata","finishedSpans","s","prev","current","measurements","toContext","updateWithContext","hasTracingEnabled","maybeOptions","getActiveTransaction","maybeHub","msToSec","time","BAGGAGE_HEADER_NAME","SENTRY_BAGGAGE_KEY_PREFIX_REGEX","createBaggage","initItems","baggageString","setBaggageValue","isSentryBaggageEmpty","isBaggageEmpty","thirdPartyBaggage","getThirdPartyBaggage","parseBaggageString","inputBaggageString","baggageObj","curr","val","baggageKey","decodeURIComponent","mergeAndSerializeBaggage","headerBaggage","thirdPartyHeaderBaggage","baggageEntry","encodeURIComponent","newVal","htmlTreeAsString","elem","currentElem","out","height","len","sepLength","nextStr","_htmlElementAsString","parentNode","reverse","className","classes","attr","tagName","toLowerCase","keyAttrPairs","keyAttr","keyAttrPair","allowedAttrs","getLocationHref","lhs","rhsFn","fallbackGlobalObject","getGlobalObject","getGlobalSingleton","creator","handlers","instrumented","instrument","originalConsoleMethod","triggerHandlers","instrumentConsole","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","instrumentDOM","xhrproto","originalOpen","xhrInfo","toUpperCase","onreadystatechangeHandler","readyStateArgs","instrumentXHR","originalFetch","getFetchMethod","getFetchUrl","instrumentFetch","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","lastHref","instrumentHistory","_oldOnErrorHandler","_oldOnUnhandledRejectionHandler","addInstrumentationHandler","fetchArgs","debounceTimerID","lastCapturedEvent","globalListener","isContentEditable","shouldSkipDOMEvent","previous","shouldShortcircuitPreviousDebounce","objectToString","isError","wat","isInstanceOf","isBuiltin","ty","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isEvent","Event","isElement","Element","isRegExp","isThenable","isSyntheticEvent","base","_e","CONSOLE_LEVELS","consoleSandbox","originalConsole","wrappedLevels","originalWrappedFunc","__sentry_original__","makeLogger","enable","disable","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","c","r","parseUrl","query","fragment","getFirstException","getEventDescription","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mergedData","checkOrSetAlreadyCaught","__sentry_captured__","isNodeEnv","__SENTRY_BROWSER_BUNDLE__","process","dynamicRequire","mod","require","loadModule","cwd","fill","replacementFactory","wrapped","markFunctionWrapped","addNonEnumerableProperty","writable","getOriginalFunction","urlEncode","convertToPlainObject","getOwnProperties","newObj","serializeEventTarget","currentTarget","CustomEvent","extractedProps","extractExceptionKeysForMessage","maxLength","sort","includedKeys","serialized","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","memoVal","returnValue","createStackParser","parsers","sortedParsers","a","skipFirst","localStack","firstFrameFunction","lastFrameFunction","stripSentryFramesAndReverse","stackParserFromStackParserOptions","defaultFunctionName","getFunctionName","truncate","substr","safeJoin","delimiter","output","isMatchingPattern","supportsFetch","Headers","Response","isNativeFetch","supportsNativeFetch","doc","supportsHistory","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","pushState","replaceState","States","resolvedSyncPromise","SyncPromise","rejectedSyncPromise","_state","PENDING","_handlers","executor","_resolve","_reject","onfulfilled","onrejected","_executeHandlers","onfinally","isRejected","_setResult","RESOLVED","REJECTED","state","_value","cachedHandlers","dateTimestampSource","nowSeconds","platformPerformance","getNodePerformance","getBrowserPerformance","timestampSource","dateTimestampInSeconds","timestampInSeconds","timestampWithMs","_browserPerformanceTimeOriginMode","browserPerformanceTimeOrigin","threshold","performanceNow","dateNow","timeOriginDelta","timeOriginIsReliable","navigationStart","timing","navigationStartDelta"],"mappings":"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","file":"js/5366.ee708b9c5291b5d83cc2.bundle.js","sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n\nvar installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * @private\n */\nfunction filterDuplicates(integrations) {\n  return integrations.reduce((acc, integrations) => {\n    if (acc.every(accIntegration => integrations.name !== accIntegration.name)) {\n      acc.push(integrations);\n    }\n    return acc;\n  }, [] );\n}\n\n/** Gets integration to install */\nfunction getIntegrationsToSetup(options) {\n  var defaultIntegrations = (options.defaultIntegrations && [...options.defaultIntegrations]) || [];\n  var userIntegrations = options.integrations;\n\n  let integrations = [...filterDuplicates(defaultIntegrations)];\n\n  if (Array.isArray(userIntegrations)) {\n    // Filter out integrations that are also included in user options\n    integrations = [\n      ...integrations.filter(integrations =>\n        userIntegrations.every(userIntegration => userIntegration.name !== integrations.name),\n      ),\n      // And filter out duplicated user options integrations\n      ...filterDuplicates(userIntegrations),\n    ];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(integrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  }\n\n  // Make sure that if present, `Debug` integration will always run last\n  var integrationsNames = integrations.map(i => i.name);\n  var alwaysLastToRun = 'Debug';\n  if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n    integrations.push(...integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1));\n  }\n\n  return integrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(integrations) {\n  var integrationIndex = {};\n\n  integrations.forEach(integration => {\n    integrationIndex[integration.name] = integration;\n\n    if (installedIntegrations.indexOf(integration.name) === -1) {\n      integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n      installedIntegrations.push(integration.name);\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Integration installed: ${integration.name}`);\n    }\n  });\n\n  return integrationIndex;\n}\n\nexport { getIntegrationsToSetup, installedIntegrations, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { logger, getEventDescription, isMatchingPattern } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = InboundFilters.id;}\n\n   constructor(  _options = {}) {;this._options = _options;InboundFilters.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    var eventProcess = (event) => {\n      var hub = getCurrentHub();\n      if (hub) {\n        var self = hub.getIntegration(InboundFilters);\n        if (self) {\n          var client = hub.getClient();\n          var clientOptions = client ? client.getOptions() : {};\n          var options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...DEFAULT_IGNORE_ERRORS,\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  if (!ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message =>\n    ignoreErrors.some(pattern => isMatchingPattern(message, pattern)),\n  );\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? false : denyUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  var url = _getEventFilterUrl(event);\n  return !url ? true : allowUrls.some(pattern => isMatchingPattern(url, pattern));\n}\n\nfunction _getPossibleEventMessages(event) {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    try {\n      const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n        return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    var frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, _mergeOptions, _shouldDropEvent };\n//# sourceMappingURL=inboundfilters.js.map\n","import { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {constructor() { FunctionToString.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = FunctionToString.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n        originalFunctionToString = Function.prototype.toString;\n\n        Function.prototype.toString = function ( ...args) {\n      var context = getOriginalFunction(this) || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n} FunctionToString.__initStatic();\n\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map\n","/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    var op = ops[i] ;\n    var fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     var op = ops[i];\n//     var fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexport { _optionalChain };\n//# sourceMappingURL=_optionalChain.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n  \n\n   constructor( message) {\n    super(message);this.message = message;;\n\n    this.name = new.target.prototype.constructor.name;\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { SentryError } from './error.js';\n\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents\n */\nfunction dsnFromString(str) {\n  var match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    throw new SentryError(`Invalid Sentry Dsn: ${str}`);\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  var split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    var projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  var requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  requiredComponents.forEach(component => {\n    if (!dsn[component]) {\n      throw new SentryError(`Invalid Sentry Dsn: ${component} missing`);\n    }\n  });\n\n  if (!projectId.match(/^\\d+$/)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n  }\n\n  if (!isValidProtocol(protocol)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid port ${port}`);\n  }\n\n  return true;\n}\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nfunction makeDsn(from) {\n  var components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  validateDsn(components);\n  return components;\n}\n\n/**\n * Changes a Dsn to point to the `relay` server running in the Lambda Extension.\n *\n * This is only used by the serverless integration for AWS Lambda.\n *\n * @param originalDsn The original Dsn of the customer.\n * @returns Dsn pointing to Lambda extension.\n */\nfunction extensionRelayDSN(originalDsn) {\n  if (originalDsn === undefined) {\n    return undefined;\n  }\n\n  var dsn = dsnFromString(originalDsn);\n  dsn.host = 'localhost';\n  dsn.port = '3000';\n  dsn.protocol = 'http';\n\n  return dsnToString(dsn);\n}\n\nexport { dsnToString, extensionRelayDSN, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","import { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  var envelopeItems = envelope[1];\n  envelopeItems.forEach((envelopeItem) => {\n    var envelopeItemType = envelopeItem[0].type;\n    callback(envelopeItem, envelopeItemType);\n  });\n}\n\nfunction encodeUTF8(input, textEncoder) {\n  var utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (var item of items) {\n    const [itemHeaders, payload] = item ;\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n    append(typeof payload === 'string' || payload instanceof Uint8Array ? payload : JSON.stringify(payload));\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  var totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  var merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (var buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  var buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nvar ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, envelopeItemTypeToDataCategory, forEachEnvelopeItem, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { isNaN, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output..\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\nfunction normalize(input, depth = +Infinity, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n    object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  var normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // If the value has a `toJSON` method, see if we can bail and let it do the work\n  var valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      return valueWithToJSON.toJSON();\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))) {\n    return value ;\n  }\n\n  var stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We're also done if we've reached the max depth\n  if (depth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  var normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  var visitable = convertToPlainObject(value );\n\n  for (var visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    var visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, depth - 1, maxProperties, memo);\n\n    numAdded += 1;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n        if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n        if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${(Object.getPrototypeOf(value) ).constructor.name}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nexport { normalize, normalizeToSize, visit as walk };\n//# sourceMappingURL=normalize.js.map\n","/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  var hasWeakSet = typeof WeakSet === 'function';\n  var inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n        for (let i = 0; i < inner.length; i++) {\n      var value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { urlEncode, makeDsn, dsnToString } from '@sentry/utils';\n\nvar SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  var protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  var port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(dsn, tunnel) {\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  var dsn = makeDsn(dsnLike);\n  var endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (var key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      var user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { dsnToString, createEnvelope, dropUndefinedKeys } from '@sentry/utils';\n\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(metadata) {\n  if (!metadata || !metadata.sdk) {\n    return;\n  }\n  const { name, version } = metadata.sdk;\n  return { name, version };\n}\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  var sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  var envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n  };\n\n  var envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  var sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  var eventType = event.type || 'event';\n\n  const { transactionSampling } = event.sdkProcessingMetadata || {};\n  const { method: samplingMethod, rate: sampleRate } = transactionSampling || {};\n\n  // TODO: Below is a temporary hack in order to debug a serialization error - see\n  // https://github.com/getsentry/sentry-javascript/issues/2809,\n  // https://github.com/getsentry/sentry-javascript/pull/4425, and\n  // https://github.com/getsentry/sentry-javascript/pull/4574.\n  //\n  // TL; DR: even though we normalize all events (which should prevent this), something is causing `JSON.stringify` to\n  // throw a circular reference error.\n  //\n  // When it's time to remove it:\n  // 1. Delete everything between here and where the request object `req` is created, EXCEPT the line deleting\n  //    `sdkProcessingMetadata`\n  // 2. Restore the original version of the request body, which is commented out\n  // 3. Search for either of the PR URLs above and pull out the companion hacks in the browser playwright tests and the\n  //    baseClient tests in this package\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n  event.tags = event.tags || {};\n  event.extra = event.extra || {};\n\n  // In theory, all events should be marked as having gone through normalization and so\n  // we should never set this tag/extra data\n  if (!(event.sdkProcessingMetadata && event.sdkProcessingMetadata.baseClientNormalized)) {\n    event.tags.skippedNormalization = true;\n    event.extra.normalizeDepth = event.sdkProcessingMetadata ? event.sdkProcessingMetadata.normalizeDepth : 'unset';\n  }\n\n  // prevent this data from being sent to sentry\n  // TODO: This is NOT part of the hack - DO NOT DELETE\n  delete event.sdkProcessingMetadata;\n\n  var envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  var eventItem = [\n    {\n      type: eventType,\n      sample_rates: [{ id: samplingMethod, rate: sampleRate }],\n    },\n    event,\n  ];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n    ...(event.type === 'transaction' &&\n      event.contexts &&\n      event.contexts.trace && {\n        // TODO: Grab this from baggage\n        trace: dropUndefinedKeys({\n          // Trace context must be defined for transactions\n                    trace_id: event.contexts.trace.trace_id ,\n          environment: event.environment,\n          release: event.release,\n          transaction: event.transaction,\n          user: event.user && {\n            id: event.user.id,\n            segment: event.user.segment,\n          },\n          public_key: dsn.publicKey,\n        }),\n      }),\n  };\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { updateSession, Scope } from '@sentry/hub';\nimport { makeDsn, logger, checkOrSetAlreadyCaught, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, uuid4, dateTimestampInSeconds, normalize, truncate, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegrations } from './integration.js';\n\nvar ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n  \n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  \n\n  /** Array of set up integrations. */\n   __init() {this._integrations = {};}\n\n  /** Indicates whether this client's integrations have been set up. */\n   __init2() {this._integrationsInitialized = false;}\n\n  /** Number of calls being processed */\n   __init3() {this._numProcessing = 0;}\n\n  /** Holds flushable  */\n   __init4() {this._outcomes = {};}\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {;BaseClient.prototype.__init.call(this);BaseClient.prototype.__init2.call(this);BaseClient.prototype.__init3.call(this);BaseClient.prototype.__init4.call(this);\n    this._options = options;\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n      var url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options.tunnel);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('No DSN provided, client will not do anything.');\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n     captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n        level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    var promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    var transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations() {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = setupIntegrations(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    if (this._dsn) {\n      let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (var attachment of hint.attachments || []) {\n        env = addItemToEnvelope(\n          env,\n          createAttachmentEnvelopeItem(attachment, _optionalChain([this, 'access', _ => _._options, 'access', _2 => _2.transportOptions, 'optionalAccess', _3 => _3.textEncoder])),\n        );\n      }\n\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    if (this._dsn) {\n      var env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category) {\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      var key = `${reason}:${category}`;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    var exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (var ex of exceptions) {\n        var mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    var sessionNonTerminal = session.status === 'ok';\n    var shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      var tick = 1;\n\n      var interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = this.getOptions();\n    var prepared = {\n      ...event,\n      event_id: event.event_id || hint.event_id || uuid4(),\n      timestamp: event.timestamp || dateTimestampInSeconds(),\n    };\n\n    this._applyClientOptions(prepared);\n    this._applyIntegrationsMetadata(prepared);\n\n    // If we have scope given to us, use it as the base for further modifications.\n    // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n    let finalScope = scope;\n    if (hint.captureContext) {\n      finalScope = Scope.clone(finalScope).update(hint.captureContext);\n    }\n\n    // We prepare the result here with a resolved Event.\n    let result = resolvedSyncPromise(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (finalScope) {\n      // Collect attachments from the hint and scope\n      var attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n\n      // In case we have a hub we reassign it.\n      result = finalScope.applyToEvent(prepared, hint);\n    }\n\n    return result.then(evt => {\n      if (evt) {\n        // TODO this is more of the hack trying to solve https://github.com/getsentry/sentry-javascript/issues/2809\n        // it is only attached as extra data to the event if the event somehow skips being normalized\n        evt.sdkProcessingMetadata = {\n          ...evt.sdkProcessingMetadata,\n          normalizeDepth: `${normalize(normalizeDepth)} (${typeof normalizeDepth})`,\n        };\n      }\n      if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n        return this._normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n   * Normalized keys:\n   * - `breadcrumbs.data`\n   * - `user`\n   * - `contexts`\n   * - `extra`\n   * @param event Event\n   * @returns Normalized event\n   */\n   _normalizeEvent(event, depth, maxBreadth) {\n    if (!event) {\n      return null;\n    }\n\n    var normalized = {\n      ...event,\n      ...(event.breadcrumbs && {\n        breadcrumbs: event.breadcrumbs.map(b => ({\n          ...b,\n          ...(b.data && {\n            data: normalize(b.data, depth, maxBreadth),\n          }),\n        })),\n      }),\n      ...(event.user && {\n        user: normalize(event.user, depth, maxBreadth),\n      }),\n      ...(event.contexts && {\n        contexts: normalize(event.contexts, depth, maxBreadth),\n      }),\n      ...(event.extra && {\n        extra: normalize(event.extra, depth, maxBreadth),\n      }),\n    };\n\n    // event.contexts.trace stores information about a Transaction. Similarly,\n    // event.spans[] stores information about child Spans. Given that a\n    // Transaction is conceptually a Span, normalization should apply to both\n    // Transactions and Spans consistently.\n    // For now the decision is to skip normalization of Transactions and Spans,\n    // so this block overwrites the normalized event to add back the original\n    // Transaction information prior to normalization.\n    if (event.contexts && event.contexts.trace) {\n      normalized.contexts = {};\n      normalized.contexts.trace = event.contexts.trace;\n\n      // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n      if (event.contexts.trace.data) {\n        normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n      }\n    }\n\n    // event.spans[].data may contain circular/dangerous data so we need to normalize it\n    if (event.spans) {\n      normalized.spans = event.spans.map(span => {\n        // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n        if (span.data) {\n          span.data = normalize(span.data, depth, maxBreadth);\n        }\n        return span;\n      });\n    }\n\n    normalized.sdkProcessingMetadata = { ...normalized.sdkProcessingMetadata, baseClientNormalized: true };\n\n    return normalized;\n  }\n\n  /**\n   *  Enhances event using the client configuration.\n   *  It takes care of all \"static\" values like environment, release and `dist`,\n   *  as well as truncating overly long values.\n   * @param event event instance to be enhanced\n   */\n   _applyClientOptions(event) {\n    var options = this.getOptions();\n    const { environment, release, dist, maxValueLength = 250 } = options;\n\n    if (!('environment' in event)) {\n      event.environment = 'environment' in options ? environment : 'production';\n    }\n\n    if (event.release === undefined && release !== undefined) {\n      event.release = release;\n    }\n\n    if (event.dist === undefined && dist !== undefined) {\n      event.dist = dist;\n    }\n\n    if (event.message) {\n      event.message = truncate(event.message, maxValueLength);\n    }\n\n    var exception = event.exception && event.exception.values && event.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    var request = event.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param event The event that will be filled with all integrations.\n   */\n   _applyIntegrationsMetadata(event) {\n    var integrationsArray = Object.keys(this._integrations);\n    if (integrationsArray.length > 0) {\n      event.sdk = event.sdk || {};\n      event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationsArray];\n    }\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(reason);\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return rejectedSyncPromise(new SentryError('SDK not enabled, will not capture event.'));\n    }\n\n    var isTransaction = event.type === 'transaction';\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (!isTransaction && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error');\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n        ),\n      );\n    }\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', event.type || 'error');\n          throw new SentryError('An event processor returned null, will not send event.');\n        }\n\n        var isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException || isTransaction || !beforeSend) {\n          return prepared;\n        }\n\n        var beforeSendResult = beforeSend(prepared, hint);\n        return _ensureBeforeSendRv(beforeSendResult);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', event.type || 'error');\n          throw new SentryError('`beforeSend` returned `null`, will not send event.');\n        }\n\n        var session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason ,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing += 1;\n    void promise.then(\n      value => {\n        this._numProcessing -= 1;\n        return value;\n      },\n      reason => {\n        this._numProcessing -= 1;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    if (this._transport && this._dsn) {\n      this._transport.send(envelope).then(null, reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    var outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n    \n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` is of expected type.\n */\nfunction _ensureBeforeSendRv(rv) {\n  var nullErr = '`beforeSend` method has to return `null` or a valid event.';\n  if (isThenable(rv)) {\n    return rv.then(\n      event => {\n        if (!(isPlainObject(event) || event === null)) {\n          throw new SentryError(nullErr);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`beforeSend rejected with ${e}`);\n      },\n    );\n  } else if (!(isPlainObject(rv) || rv === null)) {\n    throw new SentryError(nullErr);\n  }\n  return rv;\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","var SDK_VERSION = '7.1.1';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { isEvent, extractExceptionKeysForMessage, normalizeToSize, addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject } from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  var frames = parseStackFrames(stackParser, ex);\n\n  var exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  var event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            isUnhandledRejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception),\n    },\n  };\n\n  if (syntheticException) {\n    var frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  var stacktrace = ex.stacktrace || ex.stack || '';\n\n  var popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nvar reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  var message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  var syntheticException = (hint && hint.syntheticException) || undefined;\n  var event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n    level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  var syntheticException = (hint && hint.syntheticException) || undefined;\n  var event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    var errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception ) || isDOMException(exception )) {\n    var domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      var name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      var message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    var objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  input,\n  syntheticException,\n  attachStacktrace,\n) {\n  var event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    var frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n\nexport { eventFromError, eventFromException, eventFromMessage, eventFromPlainObject, eventFromString, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nvar validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, htmlTreeAsString, severityLevelFromString, safeJoin, getGlobalObject, parseUrl } from '@sentry/utils';\n\n/** JSDoc */\n\nvar BREADCRUMB_INTEGRATION_ID = 'Breadcrumbs';\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nclass Breadcrumbs  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = BREADCRUMB_INTEGRATION_ID;}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Breadcrumbs.id;}\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;Breadcrumbs.prototype.__init.call(this);\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n   setupOnce() {\n    if (this.options.console) {\n      addInstrumentationHandler('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      addInstrumentationHandler('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      addInstrumentationHandler('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      addInstrumentationHandler('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      addInstrumentationHandler('history', _historyBreadcrumb);\n    }\n  }\n} Breadcrumbs.__initStatic();\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _domBreadcrumb(dom) {\n    function _innerDomBreadcrumb(handlerData) {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      target = handlerData.event.target\n        ? htmlTreeAsString(handlerData.event.target , keyAttrs)\n        : htmlTreeAsString(handlerData.event , keyAttrs);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _consoleBreadcrumb(handlerData) {\n  var breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: severityLevelFromString(handlerData.level),\n    message: safeJoin(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  getCurrentHub().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _xhrBreadcrumb(handlerData) {\n  if (handlerData.endTimestamp) {\n    // We only capture complete, non-sentry requests\n    if (handlerData.xhr.__sentry_own_request__) {\n      return;\n    }\n\n    const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'xhr',\n        data: {\n          method,\n          url,\n          status_code,\n        },\n        type: 'http',\n      },\n      {\n        xhr: handlerData.xhr,\n        input: body,\n      },\n    );\n\n    return;\n  }\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _fetchBreadcrumb(handlerData) {\n  // We only capture complete fetch requests\n  if (!handlerData.endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: handlerData.fetchData,\n        level: 'error',\n        type: 'http',\n      },\n      {\n        data: handlerData.error,\n        input: handlerData.args,\n      },\n    );\n  } else {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: {\n          ...handlerData.fetchData,\n          status_code: handlerData.response.status,\n        },\n        type: 'http',\n      },\n      {\n        input: handlerData.args,\n        response: handlerData.response,\n      },\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _historyBreadcrumb(handlerData) {\n  var global = getGlobalObject();\n  let from = handlerData.from;\n  let to = handlerData.to;\n  var parsedLoc = parseUrl(global.location.href);\n  let parsedFrom = parseUrl(from);\n  var parsedTo = parseUrl(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  getCurrentHub().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\nexport { BREADCRUMB_INTEGRATION_ID, Breadcrumbs };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { getGlobalObject, isNativeFetch, logger, supportsFetch } from '@sentry/utils';\n\nvar global = getGlobalObject();\nlet cachedFetchImpl;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * var f = window.fetch;\n * window.fetch = function () {\n *   var p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(global.fetch)) {\n    return (cachedFetchImpl = global.fetch.bind(global));\n  }\n\n  var document = global.document;\n  let fetchImpl = global.fetch;\n    if (document && typeof document.createElement === 'function') {\n    try {\n      var sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      var contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(global));\n  }\n\n/**\n * Sends sdk client report using sendBeacon or fetch as a fallback if available\n *\n * @param url report endpoint\n * @param body report payload\n */\nfunction sendReport(url, body) {\n  var isRealNavigator = Object.prototype.toString.call(global && global.navigator) === '[object Navigator]';\n  var hasSendBeacon = isRealNavigator && typeof global.navigator.sendBeacon === 'function';\n\n  if (hasSendBeacon) {\n    // Prevent illegal invocations - https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n    var sendBeacon = global.navigator.sendBeacon.bind(global.navigator);\n    sendBeacon(url, body);\n  } else if (supportsFetch()) {\n    var fetch = getNativeFetchImplementation();\n    fetch(url, {\n      body,\n      method: 'POST',\n      credentials: 'omit',\n      keepalive: true,\n    }).then(null, error => {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(error);\n    });\n  }\n}\n\nexport { getNativeFetchImplementation, sendReport };\n//# sourceMappingURL=utils.js.map\n","import { BaseClient, SDK_VERSION, getCurrentHub, getEnvelopeEndpointWithUrlEncodedAuth } from '@sentry/core';\nimport { getGlobalObject, getEventDescription, logger, createClientReportEnvelope, dsnToString, serializeEnvelope } from '@sentry/utils';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { BREADCRUMB_INTEGRATION_ID } from './integrations/breadcrumbs.js';\nimport { sendReport } from './transports/utils.js';\n\nvar globalObject = getGlobalObject();\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && globalObject.document) {\n      globalObject.document.addEventListener('visibilitychange', () => {\n        if (globalObject.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n        level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint) {\n    // We only want to add the sentry event breadcrumb when the user has the breadcrumb integration installed and\n    // activated its `sentry` option.\n    // We also do not want to use the `Breadcrumbs` class here directly, because we do not want it to be included in\n    // bundles, if it is not used by the SDK.\n    // This all sadly is a bit ugly, but we currently don't have a \"pre-send\" hook on the integrations so we do it this\n    // way for now.\n    var breadcrumbIntegration = this.getIntegrationById(BREADCRUMB_INTEGRATION_ID) ;\n    if (\n      breadcrumbIntegration &&\n      // We check for definedness of `options`, even though it is not strictly necessary, because that access to\n      // `.sentry` below does not throw, in case users provided their own integration with id \"Breadcrumbs\" that does\n      // not have an`options` field\n      breadcrumbIntegration.options &&\n      breadcrumbIntegration.options.sentry\n    ) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n          event_id: event.event_id,\n          level: event.level,\n          message: getEventDescription(event),\n        },\n        {\n          event,\n        },\n      );\n    }\n\n    super.sendEvent(event, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    var outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Sending outcomes:', outcomes);\n\n    var url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, this._options.tunnel);\n    var envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    try {\n      sendReport(url, serializeEnvelope(envelope));\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(e);\n    }\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  var clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","import { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n\nvar OPERA10_PRIORITY = 10;\nvar OPERA11_PRIORITY = 20;\nvar CHROME_PRIORITY = 30;\nvar WINJS_PRIORITY = 40;\nvar GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  var frame = {\n    filename,\n    function: func,\n    // All browser frames are considered in_app\n    in_app: true,\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nvar chromeRegex =\n  /^\\s*at (?:(.*?) ?\\((?:address at )?)?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nvar chrome = line => {\n  var parts = chromeRegex.exec(line);\n\n  if (parts) {\n    var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      var subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nvar chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nvar geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nvar gecko = line => {\n  var parts = geckoREgex.exec(line);\n\n  if (parts) {\n    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      var subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nvar geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nvar winjsRegex =\n  /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nvar winjs = line => {\n  var parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nvar winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nvar opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nvar opera10 = line => {\n  var parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nvar opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nvar opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nvar opera11 = line => {\n  var parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nvar opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nvar defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nvar defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nvar extractSafariExtensionDetails = (func, filename) => {\n  var isSafariExtension = func.indexOf('safari-extension') !== -1;\n  var isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { getOriginalFunction, addExceptionTypeValue, addExceptionMechanism, markFunctionWrapped, addNonEnumerableProperty } from '@sentry/utils';\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  ) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    var wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n    // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  var sentryWrapped = function () {\n    var args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n            var wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope) => {\n        scope.addEventProcessor((event) => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  \n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (var property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} \n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n      } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\n\nexport { ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","import { getGlobalObject, fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\nimport { wrap } from '../helpers.js';\n\nvar DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nclass TryCatch  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'TryCatch';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = TryCatch.id;}\n\n  /** JSDoc */\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;TryCatch.prototype.__init.call(this);\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n   setupOnce() {\n    var global = getGlobalObject();\n\n    if (this._options.setTimeout) {\n      fill(global, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      fill(global, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(global, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in global) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    var eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      var eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n} TryCatch.__initStatic();\n\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n    return function ( ...args) {\n    var originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapRAF(original) {\n    return function ( callback) {\n        return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n    return function ( ...args) {\n        var xhr = this;\n    var xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n                fill(xhr, prop, function (original) {\n          var wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          var originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n    var global = getGlobalObject() ;\n    var proto = global[target] && global[target].prototype;\n\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original)\n\n {\n    return function (\n            \n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n                    fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n                wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n          ) {\n      return function (\n                \n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        var wrappedEventHandler = fn ;\n        try {\n          var originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, isString, isPrimitive, isErrorEvent, getLocationHref, logger, addExceptionMechanism } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\n/** Global handlers */\nclass GlobalHandlers  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GlobalHandlers';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = GlobalHandlers.id;}\n\n  /** JSDoc */\n  \n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n   __init2() {this._installFunc = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };}\n\n  /** JSDoc */\n   constructor(options) {;GlobalHandlers.prototype.__init.call(this);GlobalHandlers.prototype.__init2.call(this);\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    Error.stackTraceLimit = 50;\n    var options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n        for (var key in options) {\n      var installFunc = this._installFunc[key ];\n      if (installFunc && options[key ]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key ] = undefined;\n      }\n    }\n  }\n} GlobalHandlers.__initStatic();\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n  addInstrumentationHandler(\n    'error',\n        (data) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      var event =\n        error === undefined && isString(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n  addInstrumentationHandler(\n    'unhandledrejection',\n        (e) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      var event = isPrimitive(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  var ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  var groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  var event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  var e = (event.exception = event.exception || {});\n  // event.exception.values\n  var ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  var ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  var ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  var ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  var colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  var lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  var filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub, error, event, type) {\n  addExceptionMechanism(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions() {\n  var hub = getCurrentHub();\n  var client = hub.getClient();\n  var options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map\n","import { getCurrentHub, addGlobalEventProcessor } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n    __init() {this.name = LinkedErrors.id;}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {;LinkedErrors.prototype.__init.call(this);\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    var client = getCurrentHub().getClient();\n    if (!client) {\n      return;\n    }\n    addGlobalEventProcessor((event, hint) => {\n      var self = getCurrentHub().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n} LinkedErrors.__initStatic();\n\n/**\n * @inheritDoc\n */\nfunction _handler(\n  parser,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return event;\n  }\n  var linkedErrors = _walkErrorTree(parser, limit, hint.originalException , key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nfunction _walkErrorTree(\n  parser,\n  limit,\n  error,\n  key,\n  stack = [],\n) {\n  if (!isInstanceOf(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  var exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\n\nexport { LinkedErrors, _handler, _walkErrorTree };\n//# sourceMappingURL=linkederrors.js.map\n","import { logger } from '@sentry/utils';\n\n/** Deduplication filter */\nclass Dedupe  {constructor() { Dedupe.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Dedupe.id;}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    var eventProcessor = currentEvent => {\n      var self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  var currentMessage = currentEvent.message;\n  var previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  var previousException = _getExceptionFromEvent(previousEvent);\n  var currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    var frameA = previousFrames[i];\n    var frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  var exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { Dedupe };\n//# sourceMappingURL=dedupe.js.map\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nvar global = getGlobalObject();\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext  {constructor() { HttpContext.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpContext';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = HttpContext.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    addGlobalEventProcessor((event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        var url = (event.request && event.request.url) || (global.location && global.location.href);\n        const { referrer } = global.document || {};\n        const { userAgent } = global.navigator || {};\n\n        var headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        var request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n} HttpContext.__initStatic();\n\nexport { HttpContext };\n//# sourceMappingURL=httpcontext.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  var buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    var task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      var capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n                    if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nvar DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  var headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  var headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that given category is disabled until for rate limiting\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n * Returns true if headers contains a non-empty rate limiting header.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  var updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  var rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  var retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (var limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      var headerDelay = parseInt(retryAfter, 10);\n      var delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (var category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, serializeEnvelope, logger, updateRateLimits, SentryError } from '@sentry/utils';\n\nvar DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE),\n) {\n  let rateLimits = {};\n\n  var flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    var filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      var envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n        var filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    var recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (_, type) => {\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type));\n      });\n    };\n\n    var requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n        },\n        error => {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Failed while sending event:', error);\n          recordEnvelopeLoss('network_error');\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Skipped sending event due to full buffer');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","import { createTransport } from '@sentry/core';\nimport { getNativeFetchImplementation } from './utils.js';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeFetchImplementation(),\n) {\n  function makeRequest(request) {\n    var requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      ...options.fetchOptions,\n    };\n\n    return nativeFetch(options.url, requestOptions).then(response => ({\n      statusCode: response.status,\n      headers: {\n        'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n        'retry-after': response.headers.get('Retry-After'),\n      },\n    }));\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nvar XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      var xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (var header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeXHRTransport };\n//# sourceMappingURL=xhr.js.map\n","import { Integrations, getIntegrationsToSetup, initAndBind, getCurrentHub, getReportDialogEndpoint } from '@sentry/core';\nimport { getGlobalObject, stackParserFromStackParserOptions, supportsFetch, logger, resolvedSyncPromise, addInstrumentationHandler } from '@sentry/utils';\nimport { BrowserClient } from './client.js';\nimport { wrap as wrap$1 } from './helpers.js';\nimport './integrations/index.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport './transports/index.js';\nimport { TryCatch } from './integrations/trycatch.js';\nimport { Breadcrumbs } from './integrations/breadcrumbs.js';\nimport { GlobalHandlers } from './integrations/globalhandlers.js';\nimport { LinkedErrors } from './integrations/linkederrors.js';\nimport { Dedupe } from './integrations/dedupe.js';\nimport { HttpContext } from './integrations/httpcontext.js';\nimport { makeFetchTransport } from './transports/fetch.js';\nimport { makeXHRTransport } from './transports/xhr.js';\n\nvar defaultIntegrations = [\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new HttpContext(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    var window = getGlobalObject();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  var clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}, hub = getCurrentHub()) {\n  // doesn't work without a document (React Native)\n  var global = getGlobalObject();\n  if (!global.document) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  var dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  var script = global.document.createElement('script');\n  script.async = true;\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n        script.onload = options.onLoad;\n  }\n\n  var injectionPoint = global.document.head || global.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction flush(timeout) {\n  var client = getCurrentHub().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction close(timeout) {\n  var client = getCurrentHub().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nfunction wrap(fn) {\n  return wrap$1(fn)();\n}\n\nfunction startSessionOnHub(hub) {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  var window = getGlobalObject();\n  var document = window.document;\n\n  if (typeof document === 'undefined') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  var hub = getCurrentHub();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub(getCurrentHub());\n    }\n  });\n}\n\nexport { close, defaultIntegrations, flush, forceLoad, init, lastEventId, onLoad, showReportDialog, wrap };\n//# sourceMappingURL=sdk.js.map\n","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n            console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  var hub = getCurrentHub();\n  var scope = hub.getScope();\n  if (scope) {\n    scope.update(options.initialScope);\n  }\n\n  var client = new clientClass(options);\n  hub.bindClient(client);\n}\n\nexport { initAndBind };\n//# sourceMappingURL=sdk.js.map\n","import { getCurrentHub } from './hub.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\nfunction captureException(exception, captureContext) {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n    captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  var level = typeof captureContext === 'string' ? captureContext : undefined;\n  var context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\nexport { addBreadcrumb, captureEvent, captureException, captureMessage, configureScope, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope };\n//# sourceMappingURL=exports.js.map\n","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, getGlobalObject, getGlobalSingleton, isNodeEnv } from '@sentry/utils';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nvar API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n    __init() {this._stack = [{}];}\n\n  /** Contains the last event id of a captured event.  */\n  \n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {;this._version = _version;Hub.prototype.__init.call(this);\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    var top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    var scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    var scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n     captureException(exception, hint) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    var syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n        level,\n    hint,\n  ) {\n    var eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    var syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    var eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (event.type !== 'transaction') {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n        const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    var timestamp = dateTimestampInSeconds();\n    var mergedBreadcrumb = { timestamp, ...breadcrumb };\n    var finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    var scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    var scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    var scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    var scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    var scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n     setContext(name, context) {\n    var scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    var oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    var client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    var layer = this.getStackTop();\n    var scope = layer && layer.scope;\n    var session = scope && scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    var global = getGlobalObject();\n    const { userAgent } = global.navigator || {};\n\n    var session = makeSession({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      var currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        updateSession(currentSession, { status: 'exited' });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    var session = scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n     _callExtensionMethod(method, ...args) {\n    var carrier = getMainCarrier();\n    var sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  var carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  var registry = getMainCarrier();\n  var oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  var registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n  try {\n    var sentry = getMainCarrier().__SENTRY__;\n    var activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  var __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { isPlainObject, dateTimestampInSeconds, getGlobalSingleton, SyncPromise, logger, isThenable } from '@sentry/utils';\nimport { updateSession } from './session.js';\n\n/**\n * Absolute maximum number of breadcrumbs added to an event.\n * The `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {constructor() { Scope.prototype.__init.call(this);Scope.prototype.__init2.call(this);Scope.prototype.__init3.call(this);Scope.prototype.__init4.call(this);Scope.prototype.__init5.call(this);Scope.prototype.__init6.call(this);Scope.prototype.__init7.call(this);Scope.prototype.__init8.call(this);Scope.prototype.__init9.call(this);Scope.prototype.__init10.call(this); }\n  /** Flag if notifying is happening. */\n   __init() {this._notifyingListeners = false;}\n\n  /** Callback for client to receive scope changes. */\n   __init2() {this._scopeListeners = [];}\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n   __init3() {this._eventProcessors = [];}\n\n  /** Array of breadcrumbs. */\n   __init4() {this._breadcrumbs = [];}\n\n  /** User */\n   __init5() {this._user = {};}\n\n  /** Tags */\n   __init6() {this._tags = {};}\n\n  /** Extra */\n   __init7() {this._extra = {};}\n\n  /** Contexts */\n   __init8() {this._contexts = {};}\n\n  /** Fingerprint */\n  \n\n  /** Severity */\n    \n\n  /** Transaction Name */\n  \n\n  /** Span */\n  \n\n  /** Session */\n  \n\n  /** Request Mode Session Status */\n  \n\n  /** Attachments */\n   __init9() {this._attachments = [];}\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n   __init10() {this._sdkProcessingMetadata = {};}\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    var newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n        level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n            delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    var span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      var updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n            captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    var maxCrumbs = typeof maxBreadcrumbs === 'number' ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    var mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional information about the original exception.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      var transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = this._sdkProcessingMetadata;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      var processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        var result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nexport { Scope, addGlobalEventProcessor };\n//# sourceMappingURL=scope.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  var startingTime = timestampInSeconds();\n\n  var session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    var duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { addInstrumentationHandler, logger } from '@sentry/utils';\nimport { getActiveTransaction } from './utils.js';\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  addInstrumentationHandler('error', errorCallback);\n  addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  var activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    var status = 'internal_error';\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\nexport { registerErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n","import { getMainCarrier } from '@sentry/hub';\nimport { logger, isNaN, dynamicRequire, loadModule, isNodeEnv } from '@sentry/utils';\nimport { registerErrorInstrumentation } from './errors.js';\nimport { IdleTransaction } from './idletransaction.js';\nimport { Transaction } from './transaction.js';\nimport { hasTracingEnabled } from './utils.js';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  var scope = this.getScope();\n  if (scope) {\n    var span = scope.getSpan();\n    if (span) {\n      return {\n        'sentry-trace': span.toTraceparent(),\n      };\n    }\n  }\n  return {};\n}\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param transaction: The transaction needing a sampling decision\n * @param options: The current client's options, so we can access `tracesSampleRate` and/or `tracesSampler`\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      transactionSampling: { method: 'explicitly_set' },\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      transactionSampling: {\n        method: 'client_sampler',\n        // cast to number in case it's a boolean\n        rate: Number(sampleRate),\n      },\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n    transaction.setMetadata({\n      transactionSampling: { method: 'inheritance' },\n    });\n  } else {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      transactionSampling: {\n        method: 'client_rate',\n        // cast to number in case it's a boolean\n        rate: Number(sampleRate),\n      },\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n    if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n  \n  transactionContext,\n  customSamplingContext,\n) {\n  var client = this.getClient();\n  var options = (client && client.getOptions()) || {};\n\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n) {\n  var client = hub.getClient();\n  var options = (client && client.getOptions()) || {};\n\n  let transaction = new IdleTransaction(transactionContext, hub, idleTimeout, finalTimeout, onScope);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  return transaction;\n}\n\n/**\n * @private\n */\nfunction _addTracingExtensions() {\n  var carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n}\n\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations() {\n  var carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n\n  var packageToIntegrationMapping = {\n    mongodb() {\n      var integration = dynamicRequire(module, './integrations/node/mongo') \n\n;\n      return new integration.Mongo();\n    },\n    mongoose() {\n      var integration = dynamicRequire(module, './integrations/node/mongo') \n\n;\n      return new integration.Mongo({ mongoose: true });\n    },\n    mysql() {\n      var integration = dynamicRequire(module, './integrations/node/mysql') \n\n;\n      return new integration.Mysql();\n    },\n    pg() {\n      var integration = dynamicRequire(module, './integrations/node/postgres') \n\n;\n      return new integration.Postgres();\n    },\n  };\n\n  var mappedPackages = Object.keys(packageToIntegrationMapping)\n    .filter(moduleName => !!loadModule(moduleName))\n    .map(pkg => {\n      try {\n        return packageToIntegrationMapping[pkg]();\n      } catch (e) {\n        return undefined;\n      }\n    })\n    .filter(p => p) ;\n\n  if (mappedPackages.length > 0) {\n    carrier.__SENTRY__.integrations = [...(carrier.__SENTRY__.integrations || []), ...mappedPackages];\n  }\n}\n\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nfunction addExtensionMethods() {\n  _addTracingExtensions();\n\n  // Detect and automatically load specified integrations.\n  if (isNodeEnv()) {\n    _autoloadDatabaseIntegrations();\n  }\n\n  // If an error happens globally, we should make sure transaction status is set to error.\n  registerErrorInstrumentation();\n}\n\nexport { _addTracingExtensions, addExtensionMethods, startIdleTransaction };\n//# sourceMappingURL=hubextensions.js.map\n","import { timestampWithMs, logger } from '@sentry/utils';\nimport { SpanRecorder } from './span.js';\nimport { Transaction } from './transaction.js';\n\nvar DEFAULT_IDLE_TIMEOUT = 1000;\nvar DEFAULT_FINAL_TIMEOUT = 30000;\nvar HEARTBEAT_INTERVAL = 5000;\n\n/**\n * @inheritDoc\n */\nclass IdleTransactionSpanRecorder extends SpanRecorder {\n   constructor(\n      _pushActivity,\n      _popActivity,\n     transactionSpanId,\n    maxlen,\n  ) {\n    super(maxlen);this._pushActivity = _pushActivity;this._popActivity = _popActivity;this.transactionSpanId = transactionSpanId;;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   add(span) {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nclass IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n   __init() {this.activities = {};}\n\n  // Track state of activities in previous heartbeat\n  \n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n   __init2() {this._heartbeatCounter = 0;}\n\n  // We should not use heartbeat if we finished a transaction\n   __init3() {this._finished = false;}\n\n    __init4() {this._beforeFinishCallbacks = [];}\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n  \n\n   constructor(\n    transactionContext,\n      _idleHub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n      _idleTimeout = DEFAULT_IDLE_TIMEOUT,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n      _finalTimeout = DEFAULT_FINAL_TIMEOUT,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n      _onScope = false,\n  ) {\n    super(transactionContext, _idleHub);this._idleHub = _idleHub;this._idleTimeout = _idleTimeout;this._finalTimeout = _finalTimeout;this._onScope = _onScope;IdleTransaction.prototype.__init.call(this);IdleTransaction.prototype.__init2.call(this);IdleTransaction.prototype.__init3.call(this);IdleTransaction.prototype.__init4.call(this);;\n\n    if (_onScope) {\n      // There should only be one active transaction on the scope\n      clearActiveTransaction(_idleHub);\n\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n\n    this._startIdleTimeout();\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this.finish();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n   finish(endTimestamp = timestampWithMs()) {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.spanRecorder) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (var callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus('cancelled');\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        var keepSpan = span.startTimestamp < endTimestamp;\n        if (!keepSpan) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            logger.log(\n              '[Tracing] discarding Span since it happened after Transaction was finished',\n              JSON.stringify(span, undefined, 2),\n            );\n        }\n        return keepSpan;\n      });\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      clearActiveTransaction(this._idleHub);\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n   registerBeforeFinishCallback(callback) {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   initSpanRecorder(maxlen) {\n    if (!this.spanRecorder) {\n      var pushActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      var popActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idletimeout, if there is one\n   */\n   _cancelIdleTimeout() {\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n    }\n  }\n\n  /**\n   * Creates an idletimeout\n   */\n   _startIdleTimeout(endTimestamp) {\n    this._cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this.finish(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n   _pushActivity(spanId) {\n    this._cancelIdleTimeout();\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n   _popActivity(spanId) {\n    if (this.activities[spanId]) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] popActivity ${spanId}`);\n            delete this.activities[spanId];\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      // We need to add the timeout here to have the real endtimestamp of the transaction\n      // Remember timestampWithMs is in seconds, timeout is in ms\n      var endTimestamp = timestampWithMs() + this._idleTimeout / 1000;\n      this._startIdleTimeout(endTimestamp);\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n   _beat() {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    var heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter += 1;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n      this.setStatus('deadline_exceeded');\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n   _pingHeartbeat() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, HEARTBEAT_INTERVAL);\n  }\n}\n\n/**\n * Reset transaction on scope to `undefined`\n */\nfunction clearActiveTransaction(hub) {\n  var scope = hub.getScope();\n  if (scope) {\n    var transaction = scope.getTransaction();\n    if (transaction) {\n      scope.setSpan(undefined);\n    }\n  }\n}\n\nexport { DEFAULT_FINAL_TIMEOUT, DEFAULT_IDLE_TIMEOUT, HEARTBEAT_INTERVAL, IdleTransaction, IdleTransactionSpanRecorder };\n//# sourceMappingURL=idletransaction.js.map\n","var TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  var matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (matches) {\n    let parentSampled;\n    if (matches[3] === '1') {\n      parentSampled = true;\n    } else if (matches[3] === '0') {\n      parentSampled = false;\n    }\n    return {\n      traceId: matches[1],\n      parentSampled,\n      parentSpanId: matches[2],\n    };\n  }\n  return undefined;\n}\n\nexport { TRACEPARENT_REGEXP, extractTraceparentData };\n//# sourceMappingURL=tracing.js.map\n","import { getGlobalObject, logger } from '@sentry/utils';\nimport { getActiveTransaction } from '../utils.js';\n\nvar global = getGlobalObject();\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (global && global.document) {\n    global.document.addEventListener('visibilitychange', () => {\n      var activeTransaction = getActiveTransaction() ;\n      if (global.document.hidden && activeTransaction) {\n        var statusType = 'cancelled';\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\nexport { registerBackgroundTabDetection };\n//# sourceMappingURL=backgroundtab.js.map\n","var bindReporter = (\n  callback,\n  metric,\n  reportAllChanges,\n) => {\n  let prevValue;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        metric.delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (metric.delta || prevValue === undefined) {\n          prevValue = metric.value;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\nexport { bindReporter };\n//# sourceMappingURL=bindReporter.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { generateUniqueID } from './generateUniqueID.js';\n\nvar initMetric = (name, value) => {\n  return {\n    name,\n    value: _nullishCoalesce(value, () => ( -1)),\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n  };\n};\n\nexport { initMetric };\n//# sourceMappingURL=initMetric.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nvar generateUniqueID = () => {\n  return `v2-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\nexport { generateUniqueID };\n//# sourceMappingURL=generateUniqueID.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nvar observe = (type, callback) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      // More extensive feature detect needed for Firefox due to:\n      // https://github.com/GoogleChrome/web-vitals/issues/142\n      if (type === 'first-input' && !('PerformanceEventTiming' in self)) {\n        return;\n      }\n\n      var po = new PerformanceObserver(l => l.getEntries().map(callback));\n\n      po.observe({ type, buffered: true });\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\nexport { observe };\n//# sourceMappingURL=observe.js.map\n","import { getGlobalObject } from '@sentry/utils';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar onHidden = (cb, once) => {\n  var onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || getGlobalObject().document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n\nexport { onHidden };\n//# sourceMappingURL=onHidden.js.map\n","import { getGlobalObject } from '@sentry/utils';\nimport { onHidden } from './onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet firstHiddenTime = -1;\n\nvar initHiddenTime = () => {\n  return getGlobalObject().document.visibilityState === 'hidden' ? 0 : Infinity;\n};\n\nvar trackChanges = () => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nvar getVisibilityWatcher = (\n\n) => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\nexport { getVisibilityWatcher };\n//# sourceMappingURL=getVisibilityWatcher.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// https://wicg.github.io/largest-contentful-paint/#sec-largest-contentful-paint-interface\n\nvar reportedMetricIDs = {};\n\nvar getLCP = (onReport, reportAllChanges) => {\n  var visibilityWatcher = getVisibilityWatcher();\n  var metric = initMetric('LCP');\n  let report;\n\n  var entryHandler = (entry) => {\n    // The startTime attribute returns the value of the renderTime if it is not 0,\n    // and the value of the loadTime otherwise.\n    var value = entry.startTime;\n\n    // If the page was hidden prior to paint time of the entry,\n    // ignore it and mark the metric as final, otherwise add the entry.\n    if (value < visibilityWatcher.firstHiddenTime) {\n      metric.value = value;\n      metric.entries.push(entry);\n    }\n\n    if (report) {\n      report();\n    }\n  };\n\n  var po = observe('largest-contentful-paint', entryHandler);\n\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n\n    var stopListening = () => {\n      if (!reportedMetricIDs[metric.id]) {\n        po.takeRecords().map(entryHandler );\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      addEventListener(type, stopListening, { once: true, capture: true });\n    });\n\n    onHidden(stopListening, true);\n  }\n};\n\nexport { getLCP };\n//# sourceMappingURL=getLCP.js.map\n","/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction _startChild(transaction, { startTimestamp, ...ctx }) {\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n\nexport { _startChild, isMeasurementValue };\n//# sourceMappingURL=utils.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { getGlobalObject, browserPerformanceTimeOrigin, logger, htmlTreeAsString } from '@sentry/utils';\nimport { msToSec } from '../../utils.js';\nimport { getCLS } from '../web-vitals/getCLS.js';\nimport { getFID } from '../web-vitals/getFID.js';\nimport { getLCP } from '../web-vitals/getLCP.js';\nimport { getVisibilityWatcher } from '../web-vitals/lib/getVisibilityWatcher.js';\nimport { _startChild, isMeasurementValue } from './utils.js';\n\nvar global = getGlobalObject();\n\nfunction getBrowserPerformanceAPI() {\n  return global && global.addEventListener && global.performance;\n}\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals\n */\nfunction startTrackingWebVitals(reportAllChanges = false) {\n  var performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    if (performance.mark) {\n      global.performance.mark('sentry-tracing-init');\n    }\n    _trackCLS();\n    _trackLCP(reportAllChanges);\n    _trackFID();\n  }\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  // See:\n  // https://web.dev/evolving-cls/\n  // https://web.dev/cls-web-tooling/\n  getCLS(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: 'millisecond' };\n    _clsEntry = entry ;\n  });\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP(reportAllChanges) {\n  getLCP(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    var timeOrigin = msToSec(browserPerformanceTimeOrigin );\n    var startTime = msToSec(entry.startTime);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.lcp'] = { value: timeOrigin + startTime, unit: 'second' };\n    _lcpEntry = entry ;\n  }, reportAllChanges);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  getFID(metric => {\n    var entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    var timeOrigin = msToSec(browserPerformanceTimeOrigin );\n    var startTime = msToSec(entry.startTime);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(transaction) {\n  var performance = getBrowserPerformanceAPI();\n  if (!performance || !global.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  var timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  var performanceEntries = performance.getEntries();\n\n  let responseStartTimestamp;\n  let requestStartTimestamp;\n\n    performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    var startTime = msToSec(entry.startTime);\n    var duration = msToSec(entry.duration);\n\n    if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n        requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        var startTimestamp = _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        var firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        var shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n          _measurements['mark.fp'] = { value: startTimestamp, unit: 'second' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n          _measurements['mark.fcp'] = { value: startTimestamp, unit: 'second' };\n        }\n        break;\n      }\n      case 'resource': {\n        var resourceName = (entry.name ).replace(global.location.origin, '');\n        _addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n        break;\n      }\n      default:\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (transaction.op === 'pageload') {\n    // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n    // start of the response in milliseconds\n    if (typeof responseStartTimestamp === 'number') {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding TTFB');\n      _measurements['ttfb'] = {\n        value: (responseStartTimestamp - transaction.startTimestamp) * 1000,\n        unit: 'millisecond',\n      };\n\n      if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n        // Capture the time spent making the request and receiving the first byte of the response.\n        // This is the time between the start of the request and the start of the response in milliseconds.\n        _measurements['ttfb.requestTime'] = {\n          value: (responseStartTimestamp - requestStartTimestamp) * 1000,\n          unit: 'second',\n        };\n      }\n    }\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || timeOrigin >= transaction.startTimestamp) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      var oldValue = _measurements[name].value;\n      var measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      var normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n      var delta = normalizedValue - oldValue;\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    if (_measurements['mark.fid'] && _measurements['fid']) {\n      // create span for FID\n      _startChild(transaction, {\n        description: 'first input delay',\n        endTimestamp: _measurements['mark.fid'].value + msToSec(_measurements['fid'].value),\n        op: 'web.vitals',\n        startTimestamp: _measurements['mark.fid'].value,\n      });\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      transaction.setMeasurement(\n        measurementName,\n        _measurements[measurementName].value,\n        _measurements[measurementName].unit,\n      );\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  transaction,\n    entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  var measureStartTimestamp = timeOrigin + startTime;\n  var measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name ,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType ,\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\nfunction _addNavigationSpans(transaction, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction,\n    entry,\n  event,\n  timeOrigin,\n  description,\n  eventEnd,\n) {\n  var end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  var start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    description: _nullishCoalesce(description, () => ( event)),\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\nfunction _addRequest(transaction, entry, timeOrigin) {\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'request',\n    startTimestamp: timeOrigin + msToSec(entry.requestStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'response',\n    startTimestamp: timeOrigin + msToSec(entry.responseStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  transaction,\n  entry,\n  resourceName,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n    var data = {};\n  if ('transferSize' in entry) {\n    data['Transfer Size'] = entry.transferSize;\n  }\n  if ('encodedBodySize' in entry) {\n    data['Encoded Body Size'] = entry.encodedBodySize;\n  }\n  if ('decodedBodySize' in entry) {\n    data['Decoded Body Size'] = entry.decodedBodySize;\n  }\n\n  var startTimestamp = timeOrigin + startTime;\n  var endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceName,\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction) {\n  var navigator = global.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  var connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n\n    if (isMeasurementValue(connection.downlink)) {\n      _measurements['connection.downlink'] = { value: connection.downlink, unit: '' }; // unit is empty string for now, while relay doesn't support download speed units\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction) {\n  if (_lcpEntry) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      transaction.setTag('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nexport { _addMeasureSpans, _addResourceSpans, addPerformanceEntries, startTrackingWebVitals };\n//# sourceMappingURL=index.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// https://wicg.github.io/layout-instability/#sec-layout-shift\n\nvar getCLS = (onReport, reportAllChanges) => {\n  var metric = initMetric('CLS', 0);\n  let report;\n\n  let sessionValue = 0;\n  let sessionEntries = [];\n\n  var entryHandler = (entry) => {\n    // Only count layout shifts without recent user input.\n    // TODO: Figure out why entry can be undefined\n    if (entry && !entry.hadRecentInput) {\n      var firstSessionEntry = sessionEntries[0];\n      var lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n      // If the entry occurred less than 1 second after the previous entry and\n      // less than 5 seconds after the first entry in the session, include the\n      // entry in the current session. Otherwise, start a new session.\n      if (\n        sessionValue &&\n        sessionEntries.length !== 0 &&\n        entry.startTime - lastSessionEntry.startTime < 1000 &&\n        entry.startTime - firstSessionEntry.startTime < 5000\n      ) {\n        sessionValue += entry.value;\n        sessionEntries.push(entry);\n      } else {\n        sessionValue = entry.value;\n        sessionEntries = [entry];\n      }\n\n      // If the current session value is larger than the current CLS value,\n      // update CLS and the entries contributing to it.\n      if (sessionValue > metric.value) {\n        metric.value = sessionValue;\n        metric.entries = sessionEntries;\n        if (report) {\n          report();\n        }\n      }\n    }\n  };\n\n  var po = observe('layout-shift', entryHandler );\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n\n    onHidden(() => {\n      po.takeRecords().map(entryHandler );\n      report(true);\n    });\n  }\n};\n\nexport { getCLS };\n//# sourceMappingURL=getCLS.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar getFID = (onReport, reportAllChanges) => {\n  var visibilityWatcher = getVisibilityWatcher();\n  var metric = initMetric('FID');\n  let report;\n\n  var entryHandler = (entry) => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (report && entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  var po = observe('first-input', entryHandler );\n  if (po) {\n    report = bindReporter(onReport, metric, reportAllChanges);\n    onHidden(() => {\n      po.takeRecords().map(entryHandler );\n      po.disconnect();\n    }, true);\n  }\n};\n\nexport { getFID };\n//# sourceMappingURL=getFID.js.map\n","import { isMatchingPattern, addInstrumentationHandler, isInstanceOf, BAGGAGE_HEADER_NAME, mergeAndSerializeBaggage } from '@sentry/utils';\nimport { hasTracingEnabled, getActiveTransaction } from '../utils.js';\n\nvar DEFAULT_TRACING_ORIGINS = ['localhost', /^\\//];\n\n/** Options for Request Instrumentation */\n\nvar defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  tracingOrigins: DEFAULT_TRACING_ORIGINS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n    const { traceFetch, traceXHR, tracingOrigins, shouldCreateSpanForRequest } = {\n    ...defaultRequestInstrumentationOptions,\n    ..._options,\n  };\n\n  // We should cache url -> decision so that we don't have to compute\n  // regexp everytime we create a request.\n  var urlMap = {};\n\n  var defaultShouldCreateSpan = (url) => {\n    if (urlMap[url]) {\n      return urlMap[url];\n    }\n    var origins = tracingOrigins;\n    urlMap[url] =\n      origins.some((origin) => isMatchingPattern(url, origin)) &&\n      !isMatchingPattern(url, 'sentry_key');\n    return urlMap[url];\n  };\n\n  // We want that our users don't have to re-implement shouldCreateSpanForRequest themselves\n  // That's why we filter out already unwanted Spans from tracingOrigins\n  let shouldCreateSpan = defaultShouldCreateSpan;\n  if (typeof shouldCreateSpanForRequest === 'function') {\n    shouldCreateSpan = (url) => {\n      return defaultShouldCreateSpan(url) && shouldCreateSpanForRequest(url);\n    };\n  }\n\n  var spans = {};\n\n  if (traceFetch) {\n    addInstrumentationHandler('fetch', (handlerData) => {\n      fetchCallback(handlerData, shouldCreateSpan, spans);\n    });\n  }\n\n  if (traceXHR) {\n    addInstrumentationHandler('xhr', (handlerData) => {\n      xhrCallback(handlerData, shouldCreateSpan, spans);\n    });\n  }\n}\n\n/**\n * Create and track fetch request spans\n */\nfunction fetchCallback(\n  handlerData,\n  shouldCreateSpan,\n  spans,\n) {\n  if (!hasTracingEnabled() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n    return;\n  }\n\n  if (handlerData.endTimestamp) {\n    var spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    var span = spans[spanId];\n    if (span) {\n      if (handlerData.response) {\n        // TODO (kmclb) remove this once types PR goes through\n                span.setHttpStatus(handlerData.response.status);\n      } else if (handlerData.error) {\n        span.setStatus('internal_error');\n      }\n      span.finish();\n\n            delete spans[spanId];\n    }\n    return;\n  }\n\n  var activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    var span = activeTransaction.startChild({\n      data: {\n        ...handlerData.fetchData,\n        type: 'fetch',\n      },\n      description: `${handlerData.fetchData.method} ${handlerData.fetchData.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.fetchData.__span = span.spanId;\n    spans[span.spanId] = span;\n\n    var request = (handlerData.args[0] = handlerData.args[0] );\n        var options = (handlerData.args[1] = (handlerData.args[1] ) || {});\n    options.headers = addTracingHeaders(request, span, options);\n  }\n}\n\nfunction addTracingHeaders(\n  request,\n  span,\n  options,\n) {\n  let headers = options.headers;\n\n  if (isInstanceOf(request, Request)) {\n    headers = (request ).headers;\n  }\n  var incomingBaggage = span.getBaggage();\n\n  if (headers) {\n        if (typeof headers.append === 'function') {\n            headers.append('sentry-trace', span.toTraceparent());\n            headers.append(BAGGAGE_HEADER_NAME, mergeAndSerializeBaggage(incomingBaggage, headers.get(BAGGAGE_HEADER_NAME)));\n    } else if (Array.isArray(headers)) {\n      const [, headerBaggageString] = headers.find(([key, _]) => key === BAGGAGE_HEADER_NAME);\n      headers = [\n        ...headers,\n        ['sentry-trace', span.toTraceparent()],\n        [BAGGAGE_HEADER_NAME, mergeAndSerializeBaggage(incomingBaggage, headerBaggageString)],\n      ];\n    } else {\n      headers = {\n        ...headers,\n        'sentry-trace': span.toTraceparent(),\n                baggage: mergeAndSerializeBaggage(incomingBaggage, headers.baggage),\n      };\n    }\n  } else {\n    headers = { 'sentry-trace': span.toTraceparent(), baggage: mergeAndSerializeBaggage(incomingBaggage) };\n  }\n  return headers;\n}\n\n/**\n * Create and track xhr request spans\n */\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  spans,\n) {\n  if (\n    !hasTracingEnabled() ||\n    (handlerData.xhr && handlerData.xhr.__sentry_own_request__) ||\n    !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))\n  ) {\n    return;\n  }\n\n  var xhr = handlerData.xhr.__sentry_xhr__;\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp) {\n    var spanId = handlerData.xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    var span = spans[spanId];\n    if (span) {\n      span.setHttpStatus(xhr.status_code);\n      span.finish();\n\n            delete spans[spanId];\n    }\n    return;\n  }\n\n  // if not, create a new span to track it\n  var activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    var span = activeTransaction.startChild({\n      data: {\n        ...xhr.data,\n        type: 'xhr',\n        method: xhr.method,\n        url: xhr.url,\n      },\n      description: `${xhr.method} ${xhr.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n    spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n\n    if (handlerData.xhr.setRequestHeader) {\n      try {\n        handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n\n        var headerBaggageString =\n          handlerData.xhr.getRequestHeader && handlerData.xhr.getRequestHeader(BAGGAGE_HEADER_NAME);\n\n        handlerData.xhr.setRequestHeader(\n          BAGGAGE_HEADER_NAME,\n          mergeAndSerializeBaggage(span.getBaggage(), headerBaggageString),\n        );\n      } catch (_) {\n        // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n      }\n    }\n  }\n}\n\nexport { DEFAULT_TRACING_ORIGINS, defaultRequestInstrumentationOptions, fetchCallback, instrumentOutgoingRequests, xhrCallback };\n//# sourceMappingURL=request.js.map\n","import { getGlobalObject, logger, addInstrumentationHandler } from '@sentry/utils';\n\nvar global = getGlobalObject();\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nfunction instrumentRoutingWithDefaults(\n  customStartTransaction,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  if (!global || !global.location) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl = global.location.href;\n\n  let activeTransaction;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'pageload' });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addInstrumentationHandler('history', ({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.finish();\n        }\n        activeTransaction = customStartTransaction({ name: global.location.pathname, op: 'navigation' });\n      }\n    });\n  }\n}\n\nexport { instrumentRoutingWithDefaults };\n//# sourceMappingURL=router.js.map\n","import { logger, getGlobalObject, extractTraceparentData, parseBaggageString } from '@sentry/utils';\nimport { startIdleTransaction } from '../hubextensions.js';\nimport { DEFAULT_IDLE_TIMEOUT, DEFAULT_FINAL_TIMEOUT } from '../idletransaction.js';\nimport '../utils.js';\nimport { registerBackgroundTabDetection } from './backgroundtab.js';\nimport { startTrackingWebVitals, addPerformanceEntries } from './metrics/index.js';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request.js';\nimport { instrumentRoutingWithDefaults } from './router.js';\n\nvar BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nvar DEFAULT_BROWSER_TRACING_OPTIONS = {\n  idleTimeout: DEFAULT_IDLE_TIMEOUT,\n  finalTimeout: DEFAULT_FINAL_TIMEOUT,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nclass BrowserTracing  {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n  \n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = BROWSER_TRACING_INTEGRATION_ID;}\n\n   constructor(_options) {;BrowserTracing.prototype.__init.call(this);\n    let tracingOrigins = defaultRequestInstrumentationOptions.tracingOrigins;\n    // NOTE: Logger doesn't work in constructors, as it's initialized after integrations instances\n    if (_options) {\n      if (_options.tracingOrigins && Array.isArray(_options.tracingOrigins) && _options.tracingOrigins.length !== 0) {\n        tracingOrigins = _options.tracingOrigins;\n      } else {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && (this._emitOptionsWarning = true);\n      }\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n      tracingOrigins,\n    };\n\n    const { _metricOptions } = this.options;\n    startTrackingWebVitals(_metricOptions && _metricOptions._reportAllChanges);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    this._getCurrentHub = getCurrentHub;\n\n    if (this._emitOptionsWarning) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          '[Tracing] You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.',\n        );\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          `[Tracing] We added a reasonable default for you: ${defaultRequestInstrumentationOptions.tracingOrigins}`,\n        );\n    }\n\n        const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      tracingOrigins,\n      shouldCreateSpanForRequest,\n    } = this.options;\n\n    instrumentRouting(\n      (context) => this._createRouteTransaction(context),\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    instrumentOutgoingRequests({ traceFetch, traceXHR, tracingOrigins, shouldCreateSpanForRequest });\n  }\n\n  /** Create routing idle transaction. */\n   _createRouteTransaction(context) {\n    if (!this._getCurrentHub) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n        const { beforeNavigate, idleTimeout, finalTimeout } = this.options;\n\n    var parentContextFromHeader = context.op === 'pageload' ? extractTraceDataFromMetaTags() : undefined;\n\n    var expandedContext = {\n      ...context,\n      ...parentContextFromHeader,\n      trimEnd: true,\n    };\n    var modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    var finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    if (finalContext.sampled === false) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    var hub = this._getCurrentHub();\n    const { location } = getGlobalObject() ;\n\n    var idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n    );\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      addPerformanceEntries(transaction);\n      transaction.setTag(\n        'sentry_reportAllChanges',\n        Boolean(this.options._metricOptions && this.options._metricOptions._reportAllChanges),\n      );\n    });\n\n    return idleTransaction ;\n  }\n}\n\n/**\n * Gets transaction context data from `sentry-trace` and `baggage` <meta> tags.\n * @returns Transaction context data or undefined neither tag exists or has valid data\n */\nfunction extractTraceDataFromMetaTags() {\n  var sentrytraceValue = getMetaContent('sentry-trace');\n  var baggageValue = getMetaContent('baggage');\n\n  var sentrytraceData = sentrytraceValue ? extractTraceparentData(sentrytraceValue) : undefined;\n  var baggage = baggageValue ? parseBaggageString(baggageValue) : undefined;\n\n  // TODO more extensive checks for baggage validity/emptyness?\n  if (sentrytraceData || baggage) {\n    return {\n      ...(sentrytraceData && sentrytraceData),\n      ...(baggage && { metadata: { baggage } }),\n    };\n  }\n\n  return undefined;\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  var globalObject = getGlobalObject();\n\n  // DOM/querySelector is not available in all environments\n  if (globalObject.document && globalObject.document.querySelector) {\n    var el = globalObject.document.querySelector(`meta[name=${metaName}]`);\n    return el ? el.getAttribute('content') : null;\n  } else {\n    return null;\n  }\n}\n\nexport { BROWSER_TRACING_INTEGRATION_ID, BrowserTracing, extractTraceDataFromMetaTags, getMetaContent };\n//# sourceMappingURL=browsertracing.js.map\n","import { addExtensionMethods } from './hubextensions.js';\nexport { addExtensionMethods, startIdleTransaction } from './hubextensions.js';\nimport * as index from './integrations/index.js';\nexport { index as Integrations };\nimport './browser/index.js';\nexport { Span, spanStatusfromHttpCode } from './span.js';\nexport { SpanStatus } from './spanstatus.js';\nexport { Transaction } from './transaction.js';\nexport { IdleTransaction } from './idletransaction.js';\nexport { getActiveTransaction, hasTracingEnabled } from './utils.js';\nexport { BROWSER_TRACING_INTEGRATION_ID, BrowserTracing } from './browser/browsertracing.js';\nexport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './browser/request.js';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, stripUrlQueryAndFragment } from '@sentry/utils';\n\n;\n;\n\n// Treeshakable guard to remove all code related to tracing\n\n// Guard for tree\nif (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n  // We are patching the global object with our hub extension methods\n  addExtensionMethods();\n}\n//# sourceMappingURL=index.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { getCurrentHub } from '@sentry/hub';\nimport { uuid4, timestampWithMs, dropUndefinedKeys, isSentryBaggageEmpty, isBaggageEmpty, createBaggage, setBaggageValue } from '@sentry/utils';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n   __init() {this.spans = [];}\n\n   constructor(maxlen = 1000) {;SpanRecorder.prototype.__init.call(this);\n    this._maxlen = maxlen;\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * @inheritDoc\n   */\n   __init2() {this.traceId = uuid4();}\n\n  /**\n   * @inheritDoc\n   */\n   __init3() {this.spanId = uuid4().substring(16);}\n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * Internal keeper of the status\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n   __init4() {this.startTimestamp = timestampWithMs();}\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n   __init5() {this.tags = {};}\n\n  /**\n   * @inheritDoc\n   */\n     __init6() {this.data = {};}\n\n  /**\n   * List of spans that were finalized\n   */\n  \n\n  /**\n   * @inheritDoc\n   */\n  \n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext) {;Span.prototype.__init2.call(this);Span.prototype.__init3.call(this);Span.prototype.__init4.call(this);Span.prototype.__init5.call(this);Span.prototype.__init6.call(this);\n    if (!spanContext) {\n      return this;\n    }\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startChild(\n    spanContext,\n  ) {\n    var childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n     setData(key, value) {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setHttpStatus(httpStatus) {\n    this.setTag('http.status_code', String(httpStatus));\n    var spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isSuccess() {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toTraceparent() {\n    let sampledString = '';\n    if (this.sampled !== undefined) {\n      sampledString = this.sampled ? '-1' : '-0';\n    }\n    return `${this.traceId}-${this.spanId}${sampledString}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    return dropUndefinedKeys({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(spanContext) {\n    this.data = _nullishCoalesce(spanContext.data, () => ( {}));\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = _nullishCoalesce(spanContext.spanId, () => ( this.spanId));\n    this.startTimestamp = _nullishCoalesce(spanContext.startTimestamp, () => ( this.startTimestamp));\n    this.status = spanContext.status;\n    this.tags = _nullishCoalesce(spanContext.tags, () => ( {}));\n    this.traceId = _nullishCoalesce(spanContext.traceId, () => ( this.traceId));\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTraceContext()\n\n {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n   getBaggage() {\n    var existingBaggage = this.transaction && this.transaction.metadata.baggage;\n\n    var finalBaggage =\n      !existingBaggage || isSentryBaggageEmpty(existingBaggage)\n        ? this._getBaggageWithSentryValues(existingBaggage)\n        : existingBaggage;\n\n    return isBaggageEmpty(finalBaggage) ? undefined : finalBaggage;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toJSON()\n\n {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   *\n   * @param baggage\n   * @returns\n   */\n   _getBaggageWithSentryValues(baggage = createBaggage({})) {\n        var hub = ((this.transaction ) && (this.transaction )._hub) || getCurrentHub();\n    var client = hub.getClient();\n\n    const { environment, release } = (client && client.getOptions()) || {};\n\n    environment && setBaggageValue(baggage, 'environment', environment);\n    release && setBaggageValue(baggage, 'release', release);\n\n    return baggage;\n  }\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction spanStatusfromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\nexport { Span, SpanRecorder, spanStatusfromHttpCode };\n//# sourceMappingURL=span.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { getCurrentHub } from '@sentry/hub';\nimport { logger, dropUndefinedKeys } from '@sentry/utils';\nimport { Span, SpanRecorder } from './span.js';\n\n/** JSDoc */\nclass Transaction extends Span  {\n  \n\n  /**\n   * The reference to the current hub.\n   */\n  \n\n   __init() {this._measurements = {};}\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(transactionContext, hub) {\n    super(transactionContext);Transaction.prototype.__init.call(this);;\n\n    this._hub = hub || getCurrentHub();\n\n    this.name = transactionContext.name || '';\n\n    this.metadata = transactionContext.metadata || {};\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n  }\n\n  /**\n   * JSDoc\n   */\n   setName(name) {\n    this.name = name;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * Set metadata for this transaction.\n   * @hidden\n   */\n   setMetadata(newMetadata) {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      var client = this._hub.getClient();\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    var finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev, current) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    var transaction = {\n      contexts: {\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      sdkProcessingMetadata: this.metadata,\n    };\n\n    var hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    var spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    super.updateWithContext(transactionContext);\n\n    this.name = _nullishCoalesce(transactionContext.name, () => ( ''));\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n}\n\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map\n","import { getCurrentHub } from '@sentry/hub';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, stripUrlQueryAndFragment } from '@sentry/utils';\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  var client = getCurrentHub().getClient();\n  var options = maybeOptions || (client && client.getOptions());\n  return !!options && ('tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(maybeHub) {\n  var hub = maybeHub || getCurrentHub();\n  var scope = hub.getScope();\n  return scope && (scope.getTransaction() );\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nfunction secToMs(time) {\n  return time * 1000;\n}\n\nexport { getActiveTransaction, hasTracingEnabled, msToSec, secToMs };\n//# sourceMappingURL=utils.js.map\n","import { logger } from './logger.js';\n\nvar BAGGAGE_HEADER_NAME = 'baggage';\n\nvar SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nvar SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nvar MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/** Create an instance of Baggage */\nfunction createBaggage(initItems, baggageString = '') {\n  return [{ ...initItems }, baggageString];\n}\n\n/** Get a value from baggage */\nfunction getBaggageValue(baggage, key) {\n  return baggage[0][key];\n}\n\n/** Add a value to baggage */\nfunction setBaggageValue(baggage, key, value) {\n  baggage[0][key] = value;\n}\n\n/** Check if the Sentry part of the passed baggage (i.e. the first element in the tuple) is empty */\nfunction isSentryBaggageEmpty(baggage) {\n  return Object.keys(baggage[0]).length === 0;\n}\n\n/** Check if the Sentry part of the passed baggage (i.e. the first element in the tuple) is empty */\nfunction isBaggageEmpty(baggage) {\n  var thirdPartyBaggage = getThirdPartyBaggage(baggage);\n  return isSentryBaggageEmpty(baggage) && (thirdPartyBaggage == undefined || thirdPartyBaggage.length === 0);\n}\n\n/** Returns Sentry specific baggage values */\nfunction getSentryBaggageItems(baggage) {\n  return baggage[0];\n}\n\n/**\n * Returns 3rd party baggage string of @param baggage\n * @param baggage\n */\nfunction getThirdPartyBaggage(baggage) {\n  return baggage[1];\n}\n\n/** Serialize a baggage object */\nfunction serializeBaggage(baggage) {\n  return Object.keys(baggage[0]).reduce((prev, key) => {\n    var val = baggage[0][key] ;\n    var baggageEntry = `${SENTRY_BAGGAGE_KEY_PREFIX}${encodeURIComponent(key)}=${encodeURIComponent(val)}`;\n    var newVal = prev === '' ? baggageEntry : `${prev},${baggageEntry}`;\n    if (newVal.length > MAX_BAGGAGE_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(`Not adding key: ${key} with val: ${val} to baggage due to exceeding baggage size limits.`);\n      return prev;\n    } else {\n      return newVal;\n    }\n  }, baggage[1]);\n}\n\n/** Parse a baggage header to a string */\nfunction parseBaggageString(inputBaggageString) {\n  return inputBaggageString.split(',').reduce(\n    ([baggageObj, baggageString], curr) => {\n      const [key, val] = curr.split('=');\n      if (SENTRY_BAGGAGE_KEY_PREFIX_REGEX.test(key)) {\n        var baggageKey = decodeURIComponent(key.split('-')[1]);\n        return [\n          {\n            ...baggageObj,\n            [baggageKey]: decodeURIComponent(val),\n          },\n          baggageString,\n        ];\n      } else {\n        return [baggageObj, baggageString === '' ? curr : `${baggageString},${curr}`];\n      }\n    },\n    [{}, ''],\n  );\n}\n\n/**\n * Merges the baggage header we saved from the incoming request (or meta tag) with\n * a possibly created or modified baggage header by a third party that's been added\n * to the outgoing request header.\n *\n * In case @param headerBaggageString exists, we can safely add the the 3rd party part of @param headerBaggage\n * with our @param incomingBaggage. This is possible because if we modified anything beforehand,\n * it would only affect parts of the sentry baggage (@see Baggage interface).\n *\n * @param incomingBaggage the baggage header of the incoming request that might contain sentry entries\n * @param headerBaggageString possibly existing baggage header string added from a third party to request headers\n *\n * @return a merged and serialized baggage string to be propagated with the outgoing request\n */\nfunction mergeAndSerializeBaggage(incomingBaggage, headerBaggageString) {\n  if (!incomingBaggage && !headerBaggageString) {\n    return '';\n  }\n\n  var headerBaggage = (headerBaggageString && parseBaggageString(headerBaggageString)) || undefined;\n  var thirdPartyHeaderBaggage = headerBaggage && getThirdPartyBaggage(headerBaggage);\n\n  var finalBaggage = createBaggage(\n    (incomingBaggage && incomingBaggage[0]) || {},\n    thirdPartyHeaderBaggage || (incomingBaggage && incomingBaggage[1]) || '',\n  );\n  return serializeBaggage(finalBaggage);\n}\n\nexport { BAGGAGE_HEADER_NAME, MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, createBaggage, getBaggageValue, getSentryBaggageItems, getThirdPartyBaggage, isBaggageEmpty, isSentryBaggageEmpty, mergeAndSerializeBaggage, parseBaggageString, serializeBaggage, setBaggageValue };\n//# sourceMappingURL=baggage.js.map\n","import { getGlobalObject } from './global.js';\nimport { isString } from './is.js';\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(elem, keyAttrs) {\n  \n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    let height = 0;\n    let len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    let nextStr;\n\n        while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  var elem = el \n\n;\n\n  var out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  var keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n        className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  var allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  var global = getGlobalObject();\n  try {\n    return global.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\nexport { getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexport { _nullishCoalesce };\n//# sourceMappingURL=_nullishCoalesce.js.map\n","import { isNodeEnv } from './node.js';\n\n/** Internal */\n\nvar fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nfunction getGlobalObject() {\n  return (\n    isNodeEnv()\n      ? global\n      : typeof window !== 'undefined'       ? window       : typeof self !== 'undefined'\n      ? self\n      : fallbackGlobalObject\n  ) ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `getGlobalObject`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  var global = (obj || getGlobalObject()) ;\n  var __SENTRY__ = (global.__SENTRY__ = global.__SENTRY__ || {});\n  var singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=global.js.map\n","import { getGlobalObject } from './global.js';\nimport { isInstanceOf, isString } from './is.js';\nimport { logger, CONSOLE_LEVELS } from './logger.js';\nimport { fill } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\nimport { supportsNativeFetch, supportsHistory } from './supports.js';\n\nvar global = getGlobalObject();\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nvar handlers = {};\nvar instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (var handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in global)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in global.console)) {\n      return;\n    }\n\n    fill(global.console, level, function (originalConsoleMethod) {\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(global.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(global, 'fetch', function (originalFetch) {\n    return function (...args) {\n      var handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n            return originalFetch.apply(global, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs = []) {\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs = []) {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in global && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n\n/** JSDoc */\nfunction instrumentXHR() {\n  if (!('XMLHttpRequest' in global)) {\n    return;\n  }\n\n  var xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n            var xhr = this;\n      var url = args[1];\n      var xhrInfo = (xhr.__sentry_xhr__ = {\n                method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n            if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      var onreadystatechangeHandler = function () {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhr.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function (original) {\n          return function (...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      if (this.__sentry_xhr__ && args[0] !== undefined) {\n        this.__sentry_xhr__.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  var oldOnPopState = global.onpopstate;\n  global.onpopstate = function ( ...args) {\n    var to = global.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    var from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      var url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        var from = lastHref;\n        var to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(global.history, 'pushState', historyReplacementFunction);\n  fill(global.history, 'replaceState', historyReplacementFunction);\n}\n\nvar debounceDuration = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    var target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    var name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = global.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!('document' in global)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  var triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  var globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  global.document.addEventListener('click', globalDOMEventHandler, false);\n  global.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n        var proto = (global )[target] && (global )[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n        \n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            var el = this ;\n            var handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            var handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              var handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount += 1;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n          \n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              var el = this ;\n              var handlers = el.__sentry_instrumentation_handlers__ || {};\n              var handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount -= 1;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type];                 }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = global.onerror;\n\n  global.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n            return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = global.onunhandledrejection;\n\n  global.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n            return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n\nexport { addInstrumentationHandler };\n//# sourceMappingURL=instrument.js.map\n","var objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\nfunction isBuiltin(wat, ty) {\n  return objectToString.call(wat) === `[object ${ty}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };\n//# sourceMappingURL=is.js.map\n","import { getGlobalObject, getGlobalSingleton } from './global.js';\n\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n\nvar CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  var global = getGlobalObject();\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  var originalConsole = global.console ;\n  var wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    var originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in global.console && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  var logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n            logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            global.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","import { getGlobalObject } from './global.js';\nimport { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  var global = getGlobalObject() ;\n  var crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    var pad = (num) => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        var r = (Math.random() * 16) | 0;\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url)\n\n {\n  if (!url) {\n    return {};\n  }\n\n  var match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  var firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  var exception = (event.exception = event.exception || {});\n  var values = (exception.values = exception.values || []);\n  var firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  var firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  var defaultMechanism = { type: 'generic', handled: true };\n  var currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    var mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nvar SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  var match = input.match(SEMVER_REGEXP) || [];\n  var major = parseInt(match[1], 10);\n  var minor = parseInt(match[2], 10);\n  var patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  var lineno = frame.lineno || 0;\n  var maxLines = lines.length;\n  var sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n    return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n    if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, checkOrSetAlreadyCaught, getEventDescription, parseSemver, parseUrl, stripUrlQueryAndFragment, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\nfunction dynamicRequire(mod, request) {\n    return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These fags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\nexport { isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  var original = source[name] ;\n  var wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  var proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    var newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    var extractedProps = {};\n    for (var property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  var keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    var serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  var memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    var memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    var returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (var key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    var memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    var returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n            objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","var STACKTRACE_LIMIT = 50;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  var sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    var frames = [];\n\n    for (var line of stack.split('\\n').slice(skipFirst)) {\n      for (var parser of sortedParsers) {\n        var frame = parser(line);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  var firstFrameFunction = localStack[0].function || '';\n  var lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nvar defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\nexport { createStackParser, getFunctionName, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  var lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n        colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  var output = [];\n    for (let i = 0; i < input.length; i++) {\n    var value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nfunction isMatchingPattern(value, pattern) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * Based on https://github.com/sindresorhus/escape-string-regexp. Vendored to a) reduce the size by skipping the runtime\n * type-checking, and b) ensure it gets down-compiled for old versions of Node (the published package only supports Node\n * 12+).\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\nexport { escapeStringForRegex, isMatchingPattern, safeJoin, snipLine, truncate };\n//# sourceMappingURL=string.js.map\n","import { getGlobalObject } from './global.js';\nimport { logger } from './logger.js';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in getGlobalObject())) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  var global = getGlobalObject();\n\n  // Fast path to avoid DOM I/O\n    if (isNativeFetch(global.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  var doc = global.document;\n    if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      var sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n                result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  var global = getGlobalObject();\n      var chrome = (global ).chrome;\n  var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { isNativeFetch, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsHistory, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { isThenable } from './is.js';\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  var PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  var RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  var REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n  \n\n   constructor(\n    executor,\n  ) {;SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    var cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n                handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { getGlobalObject } from './global.js';\nimport { dynamicRequire, isNodeEnv } from './node.js';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nvar dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = getGlobalObject();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  var timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    var perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nvar platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nvar timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nvar dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nvar timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nvar timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nvar usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nvar browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = getGlobalObject();\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  var threshold = 3600 * 1000;\n  var performanceNow = performance.now();\n  var dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  var timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  var timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n    var navigationStart = performance.timing && performance.timing.navigationStart;\n  var hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  var navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  var navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n"],"sourceRoot":""}