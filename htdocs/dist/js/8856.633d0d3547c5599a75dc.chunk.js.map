{"version":3,"file":"js/8856.633d0d3547c5599a75dc.chunk.js","mappings":"6GA4BAA,OAAOC,cAAgB,IA5BvB,MACI,cACIC,KAAKC,SAAW,GAEpB,YAAYC,GACR,IAAK,MAAMC,KAAYC,OAAOC,KAAKH,GAC/BF,KAAKM,WAAWH,EAAUD,EAAUC,IAG5C,WAAWA,EAAUI,GACjBP,KAAKC,SAASO,KAAK,CAAEL,SAAAA,EAAUI,QAAAA,IAEnC,KAAKE,GACD,IAAKA,EAAOC,iBACR,MAAM,IAAIC,MAAM,kDAAoDF,GAExE,IAAK,MAAM,SAAEN,EAAQ,QAAEI,KAAaP,KAAKC,SACrC,GAAiB,KAAbE,EACAI,EAAQE,QAGR,IAAK,MAAMG,KAAMC,MAAMC,KAAKL,EAAOC,iBAAiBP,IAChDI,EAAQK,KAO5B,QAAed,OAAoB,cACtBiB,EAAQN,GAAWX,OAAOC,cAAcgB,KAAKN,I,uDC3BnD,MAsCMO,EAA2BC,UACpC,OAAO,WAAEC,EAAU,UAAEC,EAAS,WAAEC,EAAU,WAAEC,EAAU,iBAAEC,EAAgB,kBAAEC,EAAiB,sBAAEC,IAA0B,aAAEC,IAAgB,YAAEC,IAAiBC,QAASC,UAAcC,QAAQC,IAAI,CAC3L,6HACA,wDACA,+BACA,sCAEJ,gBAAgB,CACZ,oBAAsBlB,GAAOA,EAAGmB,iBAAiB,SAAUC,GAAUX,EAAWT,EAAIoB,KACpF,gBAAkBpB,GAAOA,EAAGmB,iBAAiB,SAAUX,GACvD,UAAYR,GAAOA,EAAGmB,iBAAiB,QAASb,GAChD,SAAWN,GAAOA,EAAGmB,iBAAiB,QAASZ,GAC/C,UAAYP,GAAOA,EAAGmB,iBAAiB,QAASX,GAChD,iBAAmBR,GAAOgB,EAAEhB,GAAIqB,GAAG,SAAUb,GAC7C,eAAgBM,EAChB,gBAAiBJ,EACjB,gBAAiBG,EACjB,kBAAmBF,EACnB,sBAAuBC,K,wBClD/B,EAAQ,MACR,MAAMU,EAAW,GACjBA,EAAS1B,KDQwBS,WAC7B,MAAM,YAAEkB,SAAsB,+BAC9B,gBAAgB,CACZ,kBAAmBA,KCXbC,KACd,QAAM,eAAe,IAAMF,EAAS1B,KAAKQ,QACzC,QAAM,UAAU,IAAMkB,EAAS1B,KAAKQ,OACpCa,QAAQC,IAAII,GAAUG,MAAK,KAAM,OAAKC,SAASC,SAC/C,QAAM,cAAc,IAAM,0DCLF,CAACpC,IACrB,MAAMqC,EAAWF,SAASG,cAAc,YAClCC,EAAO,KACT,IAAK,MAAMC,KAAW,QAAUxC,GAE5ByC,YAAW,KACP,MAAMC,EAAYF,EAAQE,UAAUC,OAEhCD,EAAUE,WAAW,SACrBP,EAASK,UAAYA,EACrBF,EAAQK,UAAYR,EAASS,OAG7BN,EAAQK,UAAYH,EAExB/C,OAAOoD,wBAInB,GAAuB,IAAnBpD,OAAOqD,QAAe,CACtB,MAAMC,EAAW,KACbV,IACAJ,SAASe,oBAAoB,SAAUD,IAE3Cd,SAASP,iBAAiB,SAAUqB,QAGpCV,KDrBRY,CAAS,cACT,IACI,MAAMC,GAAS,QAAO,WAChBC,GAAS,QAAO,WACtBlB,SAASP,iBAAiB,UAAU,KAC5ByB,EAAOC,wBAAwBC,OAAS,EACxCH,EAAOI,UAAUC,OAAO,OAGxBL,EAAOI,UAAUE,IAAI,UAIjC,MAAOC,IAGP,IACI,MAAMC,GAAc,QAAO,iBACrBC,GAAiB,QAAO,YACxBC,EAAeF,EAAYE,aACjCF,EAAYhC,iBAAiB,UAAUd,MAAOe,IAC1CA,EAAMkC,iBACNF,EAAenB,UAAY,GAC3BoB,EAAaE,UAAW,EACxB,MAAMC,EAAW,IAAIC,SAASN,GAC9B,IACI,MAAMO,QAAiB,SAAW,8BAA+BF,GACjEL,EAAYQ,QACZN,EAAaE,UAAW,EACxBH,EAAenB,UACX,mFAEIyB,EAASE,KACT,SAEZ,MAAOC,GACHR,EAAaE,UAAW,EACxBH,EAAenB,UACX,gFAEI4B,EAAMH,SAASE,KACf,SAEZ,OAAO,KAGf,MAAOV,IAGP,IACI,MAAMY,EAAkB,KAClBC,GAAkB,QAAO,sBACzBC,EAAe3D,UACjB,MAAMqD,QAAiBO,MAAM,uBAAwB,CAAEC,OAAQ,SACzDC,QAAqBT,EAASU,OAC9BC,EAAU,IAAIC,KAAKH,EAAYE,SAErC,GAA0B,YAAtBF,EAAYI,SAAyBF,GAAW,IAAIC,KAAS,IAAO,CACpEP,EAAgBhB,UAAUC,OAAO,UACjCe,EAAgBhB,UAAUE,IAAI,WAC9B,MAAMuB,QAAwBP,MAAM,wBAAyB,CACzDC,OAAQ,SAENO,QAAiBD,EAAgBJ,OACjCM,EAAUX,EAAgBY,cAAc,OAC9CD,EAAQE,OAAS,IAAMb,EAAgBhB,UAAUC,OAAO,WACxD0B,EAAQG,IAAM,yBAA2BJ,EAAQK,KAEjD,MAAMC,EAAOhB,EAAgBY,cAAc,KAI3C,OAHII,IACAA,EAAKC,KAAO,QAAUP,EAAQK,WAClC9C,WAAWgC,EAAcF,GAG7B,OAAQK,EAAYI,QAChB,IAAK,UACDR,EAAgBhB,UAAUC,OAAO,UACjChB,WAAWgC,EAAcF,GACzB,MACJ,IAAK,SACDC,EAAgBhB,UAAUE,IAAI,UAC9BjB,WAAWgC,EAAcF,GACzB,MACJ,IAAK,WACDC,EAAgBhB,UAAUC,OAAO,UACjCe,EAAgBhB,UAAUE,IAAI,YAE9Bc,EAAgBkB,WAI5BjB,IAEJ,MAAOd","sources":["webpack:///./js/ctx.ts","webpack:///./js/context.ts","webpack:///./js/entry/extern-defer.ts","webpack:///./js/lib/lazy-load.ts"],"sourcesContent":["class Context {\n    constructor() {\n        this.handlers = [];\n    }\n    addHandlers(selectors) {\n        for (const selector of Object.keys(selectors)) {\n            this.addHandler(selector, selectors[selector]);\n        }\n    }\n    addHandler(selector, handler) {\n        this.handlers.push({ selector, handler });\n    }\n    init(parent) {\n        if (!parent.querySelectorAll) {\n            throw new Error('Kan geen context initializeren op dit element: ' + parent);\n        }\n        for (const { selector, handler } of this.handlers) {\n            if (selector === '') {\n                handler(parent);\n            }\n            else {\n                for (const el of Array.from(parent.querySelectorAll(selector))) {\n                    handler(el);\n                }\n            }\n        }\n    }\n}\nwindow._stek_context = new Context();\nexport default window._stek_context;\nexport const init = (parent) => window._stek_context.init(parent);\n","import ctx from './ctx';\nimport { select } from './lib/dom';\nimport { autosizeTextarea } from './lib/util';\nexport const registerClipboardContext = async () => {\n    const { copyTextToClipboard } = await import('./lib/clipboard');\n    ctx.addHandler('[data-copy]', (el) => {\n        el.addEventListener('click', () => copyTextToClipboard(el.dataset.copy));\n    });\n};\nexport const registerGrafiekContext = async () => {\n    const { initBar, initDeelnamegrafiek, initLine, initPie, initSaldoGrafiek } = await import('./lib/grafiek');\n    ctx.addHandlers({\n        '.ctx-deelnamegrafiek': initDeelnamegrafiek,\n        '.ctx-graph-bar': initBar,\n        '.ctx-graph-line': initLine,\n        '.ctx-graph-pie': initPie,\n        '.ctx-saldografiek': initSaldoGrafiek,\n    });\n};\nexport const registerBbContext = async () => {\n    const { loadBbImage } = await import('./lib/bbcode');\n    ctx.addHandlers({\n        '.bb-img-loading': loadBbImage,\n    });\n};\nexport const registerDataTableContext = async () => {\n    const { initDataTable, initOfflineDataTable } = await import('./datatable/api');\n    ctx.addHandlers({\n        '.ctx-datatable': initDataTable,\n        '.ctx-offline-datatable': initOfflineDataTable,\n    });\n};\nexport const registerKnopContext = async () => {\n    const { initKnopPost, initKnopGet, initKnopVergroot, initRadioButtons } = await import('./lib/knop');\n    ctx.addHandlers({\n        '.get': initKnopGet,\n        '.post': initKnopPost,\n        '.vergroot': initKnopVergroot,\n        '[data-buttons=radio]': initRadioButtons,\n    });\n};\nexport const registerFormulierContext = async () => {\n    const [{ formCancel, formReset, formSubmit, formToggle, initSterrenField, initDoctrineField, initAutocompleteField, }, { initDropzone }, { initTimeago }, { default: $ },] = await Promise.all([\n        import('./lib/formulier'),\n        import('./lib/dropzone'),\n        import('./lib/timeago'),\n        import('jquery'),\n    ]);\n    ctx.addHandlers({\n        '.InlineFormToggle': (el) => el.addEventListener('click', (event) => formToggle(el, event)),\n        '.SubmitChange': (el) => el.addEventListener('change', formSubmit),\n        '.cancel': (el) => el.addEventListener('click', formCancel),\n        '.reset': (el) => el.addEventListener('click', formReset),\n        '.submit': (el) => el.addEventListener('click', formSubmit),\n        'form.Formulier': (el) => $(el).on('submit', formSubmit),\n        'time.timeago': initTimeago,\n        '.SterrenField': initSterrenField,\n        'form.dropzone': initDropzone,\n        '.doctrine-field': initDoctrineField,\n        '.autocomplete-field': initAutocompleteField,\n    });\n};\nexport const registerGlobalContext = async () => {\n    const [{ default: hoverintent }, { initKaartjes }, { createDefaultApp, getVueComponent }, { default: $ },] = await Promise.all([\n        import('hoverintent'),\n        import('./lib/kaartje'),\n        import('./register-vue'),\n        import('jquery'),\n    ]);\n    ctx.addHandlers({\n        '.hoverIntent': (el) => hoverintent(el, () => $(select('.hoverIntentContent', el)).fadeIn(), () => $(select('.hoverIntentContent', el)).fadeOut()).options({ timeout: 250 }),\n        '.vue-component': (el) => createDefaultApp(getVueComponent(el.dataset.naam), JSON.parse(el.dataset.props)).mount(el),\n        '[data-visite]': initKaartjes,\n        '.AutoSize': autosizeTextarea,\n    });\n};\nexport const registerFlatpickrContext = async () => {\n    const { initDateTimePicker, initDatePicker } = await import('./lib/datepicker');\n    ctx.addHandlers({\n        '.DateTimeField': initDateTimePicker,\n        '.DateField': initDatePicker,\n    });\n};\nexport const registerLidInstellingenContext = async () => {\n    const { instellingOpslaan } = await import('./page/instellingen');\n    ctx.addHandler('.instellingKnop', (el) => el.addEventListener('click', instellingOpslaan));\n    ctx.addHandler('.change-opslaan', (el) => el.addEventListener('change', instellingOpslaan));\n};\n","/**\n * Wordt geladen als de pagina geladen is.\n */\nimport axios from 'axios';\nimport { registerBbContext, registerFormulierContext } from '../context';\nimport { init } from '../ctx';\nimport { route } from '../lib/util';\nimport { select } from '../lib/dom';\nimport { lazyLoad } from '../lib/lazy-load';\nrequire('fslightbox');\nconst contexts = [];\ncontexts.push(registerBbContext());\nroute('/wachtwoord', () => contexts.push(registerFormulierContext()));\nroute('/forum', () => contexts.push(registerFormulierContext()));\nPromise.all(contexts).then(() => init(document.body));\nroute('/fotoalbum', () => import('../page/fotoalbum'));\nlazyLoad('.lazy-load');\ntry {\n    const header = select('#header');\n    const banner = select('#banner');\n    document.addEventListener('scroll', () => {\n        if (banner.getBoundingClientRect().bottom < 0) {\n            header.classList.remove('alt');\n        }\n        else {\n            header.classList.add('alt');\n        }\n    });\n}\ncatch (e) {\n    // Geen banner of header\n}\ntry {\n    const contactForm = select('#contact-form');\n    const errorContainer = select('#melding');\n    const submitButton = contactForm.submitButton;\n    contactForm.addEventListener('submit', async (event) => {\n        event.preventDefault();\n        errorContainer.innerHTML = '';\n        submitButton.disabled = true;\n        const formData = new FormData(contactForm);\n        try {\n            const response = await axios.post('/contactformulier/interesse', formData);\n            contactForm.reset();\n            submitButton.disabled = false;\n            errorContainer.innerHTML =\n                '<div class=\"alert alert-success\">' +\n                    '<i class=\"fas fa-check\" aria-hidden=\"true\"></i>' +\n                    response.data +\n                    '</div>';\n        }\n        catch (error) {\n            submitButton.disabled = false;\n            errorContainer.innerHTML =\n                '<div class=\"alert alert-danger\">' +\n                    '<i class=\"fas fa-ban\" aria-hidden=\"true\"></i>' +\n                    error.response.data +\n                    '</div>';\n        }\n        return false;\n    });\n}\ncatch (e) {\n    // Geen contactform\n}\ntry {\n    const refreshInterval = 2500;\n    const remoteLoginCode = select('.remote-login-code');\n    const updateStatus = async () => {\n        const response = await fetch('/remote-login-status', { method: 'POST' });\n        const remoteLogin = (await response.json());\n        const expires = new Date(remoteLogin.expires);\n        // Ververs de qr code als rejected of verloop is bijna\n        if (remoteLogin.status == 'rejected' || +expires - +new Date() < 10000) {\n            remoteLoginCode.classList.remove('active');\n            remoteLoginCode.classList.add('loading');\n            const refreshResponse = await fetch('/remote-login-refresh', {\n                method: 'POST',\n            });\n            const refresh = (await refreshResponse.json());\n            const qrImage = remoteLoginCode.querySelector('img');\n            qrImage.onload = () => remoteLoginCode.classList.remove('loading');\n            qrImage.src = '/remote-login-qr?uuid=' + refresh.uuid;\n            // Link bestaat alleen in dev\n            const link = remoteLoginCode.querySelector('a');\n            if (link)\n                link.href = '/rla/' + refresh.uuid;\n            setTimeout(updateStatus, refreshInterval);\n            return;\n        }\n        switch (remoteLogin.status) {\n            case 'pending':\n                remoteLoginCode.classList.remove('active');\n                setTimeout(updateStatus, refreshInterval);\n                break;\n            case 'active':\n                remoteLoginCode.classList.add('active');\n                setTimeout(updateStatus, refreshInterval);\n                break;\n            case 'accepted':\n                remoteLoginCode.classList.remove('active');\n                remoteLoginCode.classList.add('accepted');\n                // navigeer\n                remoteLoginCode.submit();\n                break;\n        }\n    };\n    updateStatus();\n}\ncatch (e) {\n    // Geen remote login\n}\n","import { selectAll } from './dom';\n/**\n * Lazyload door <noscript> blokken van de noscript tag te ontdoen.\n *\n * Door een <noscript> tag te gebruiken wordt de inhoud geladen als js uitgeschakeld is, maar niet geladen als\n * javascript is ingeschakeld. In het laatste geval zorgen we ervoor, met javascript, dat de blokken alsnog geladen\n * worden. Dit laden gebeurt nadat de rest van de pagina geladen is en zorgt ervoor dat de gebruiker snel aan de\n * slag kan gaan op de pagina.\n * @param selector\n */\nexport const lazyLoad = (selector) => {\n    const textarea = document.createElement('textarea');\n    const load = () => {\n        for (const element of selectAll(selector)) {\n            // setTimeout om lazy-load blokken na elkaar te laden ipv allemaal tegelijk.\n            setTimeout(() => {\n                const innerHTML = element.innerHTML.trim();\n                // Sommige browsers encoden de inhoud van de noscript tag.\n                if (innerHTML.startsWith('&lt;')) {\n                    textarea.innerHTML = innerHTML;\n                    element.outerHTML = textarea.value;\n                }\n                else {\n                    element.outerHTML = innerHTML;\n                }\n                window.refreshFsLightbox();\n            });\n        }\n    };\n    if (window.scrollY === 0) {\n        const listener = () => {\n            load();\n            document.removeEventListener('scroll', listener);\n        };\n        document.addEventListener('scroll', listener);\n    }\n    else {\n        load();\n    }\n};\n"],"names":["window","_stek_context","this","handlers","selectors","selector","Object","keys","addHandler","handler","push","parent","querySelectorAll","Error","el","Array","from","init","registerFormulierContext","async","formCancel","formReset","formSubmit","formToggle","initSterrenField","initDoctrineField","initAutocompleteField","initDropzone","initTimeago","default","$","Promise","all","addEventListener","event","on","contexts","loadBbImage","registerBbContext","then","document","body","textarea","createElement","load","element","setTimeout","innerHTML","trim","startsWith","outerHTML","value","refreshFsLightbox","scrollY","listener","removeEventListener","lazyLoad","header","banner","getBoundingClientRect","bottom","classList","remove","add","e","contactForm","errorContainer","submitButton","preventDefault","disabled","formData","FormData","response","reset","data","error","refreshInterval","remoteLoginCode","updateStatus","fetch","method","remoteLogin","json","expires","Date","status","refreshResponse","refresh","qrImage","querySelector","onload","src","uuid","link","href","submit"],"sourceRoot":""}