{"version":3,"file":"js/3099.c8d88e7a13bcebacc841.chunk.js","mappings":"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","sources":["webpack:///./js/page/instellingen.ts"],"sourcesContent":["import axios from 'axios';\nimport { select } from '../lib/dom';\nimport { urlBase64ToUint8Array } from '../lib/util';\n/**\n * Code voor de /instellingen pagina\n */\nconst instellingVeranderd = () => {\n    document\n        .querySelectorAll('.instellingen-bericht')\n        .forEach((el) => el.classList.remove('d-none'));\n};\nconst meta = document.getElementsByTagName('meta');\nconst applicationServerKey = meta['vapid-public-key'].content;\nlet isPushAvailable = false;\nconst pushAbboneer = async () => {\n    if (!isPushAvailable)\n        return;\n    const result = await Notification.requestPermission();\n    if (result === 'denied') {\n        throw new Error('The user explicitly denied the permission request.');\n    }\n    if (result === 'granted') {\n        console.info('The user accepted the permission request.');\n    }\n    const registration = await navigator.serviceWorker.ready;\n    const existingSubscription = await (registration === null || registration === void 0 ? void 0 : registration.pushManager.getSubscription());\n    if (existingSubscription) {\n        console.info('User is already subscribed.');\n        return;\n    }\n    // Subscribe to push notifications\n    const subscribeOptions = {\n        userVisibleOnly: true,\n        applicationServerKey: urlBase64ToUint8Array(applicationServerKey),\n    };\n    const subscription = await registration.pushManager.subscribe(subscribeOptions);\n    if (subscription) {\n        try {\n            const response = await fetch('/push-abonnement', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(subscription),\n            });\n            if (!response.ok) {\n                throw new Error('Bad status code from server.');\n            }\n            const data = await response.json();\n            if (!(data && data.success)) {\n                throw new Error('Bad response from server.');\n            }\n            console.info('Successfully subscribed to push notifications.');\n        }\n        catch (error) {\n            await (subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe());\n            throw error;\n        }\n    }\n};\nconst pushDeabboneer = async () => {\n    var _a;\n    if (!isPushAvailable)\n        return;\n    const registration = await navigator.serviceWorker.ready;\n    const subscription = (_a = (await (registration === null || registration === void 0 ? void 0 : registration.pushManager.getSubscription()))) !== null && _a !== void 0 ? _a : null;\n    if (!subscription)\n        throw new Error('No existing subscription');\n    const response = await fetch('/push-abonnement', {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ endpoint: subscription.endpoint }),\n    });\n    if (!response.ok) {\n        throw new Error('Bad status code from server.');\n    }\n    const data = await response.json();\n    if (!(data && data.success)) {\n        throw new Error('Bad response from server.');\n    }\n    const existingSubscription = await (subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe());\n    if (existingSubscription) {\n        console.info('Successfully unsubscribed from push notifications.');\n    }\n};\nconst pushMeldingenVeranderd = async (ant) => {\n    switch (ant) {\n        case 'ja':\n            return pushAbboneer();\n        case 'nee':\n            return pushDeabboneer();\n    }\n};\nconst checkPushAvailability = async () => {\n    const registration = await navigator.serviceWorker.ready;\n    const hasPushManager = 'serviceWorker' in navigator &&\n        'PushManager' in window &&\n        registration !== undefined &&\n        'pushManager' in registration;\n    if (hasPushManager) {\n        const isIos = navigator.userAgent.includes('iPhone') ||\n            (navigator.userAgent.includes('Macintosh') && 'ontouchend' in document);\n        if (isIos) {\n            const isStandalone = window.matchMedia('(display-mode: fullscreen)').matches ||\n                window.matchMedia('(display-mode: standalone)').matches;\n            isPushAvailable = isStandalone;\n        }\n        else {\n            isPushAvailable = true;\n        }\n    }\n    if (!isPushAvailable) {\n        const instellingRow = select('#instelling-forum-meldingPush');\n        instellingRow.classList.add('d-none');\n    }\n};\ncheckPushAvailability();\nexport const instellingOpslaan = async (ev) => {\n    ev.preventDefault();\n    const input = ev.target;\n    let href = null;\n    let waarde = null;\n    input.classList.add('loading');\n    if (input instanceof HTMLInputElement || input instanceof HTMLSelectElement) {\n        if (!input.checkValidity()) {\n            return false;\n        }\n        href = input.dataset.href;\n        waarde = input.value;\n    }\n    else if (input instanceof HTMLAnchorElement) {\n        href = input.href;\n    }\n    if (!href) {\n        throw new Error('Geen url gevonden voor instelling');\n    }\n    try {\n        if (href.includes('meldingPush')) {\n            const antwoord = /meldingPush\\/(\\w+)/g.exec(href);\n            await pushMeldingenVeranderd(antwoord[1]);\n        }\n        await axios.post(href, { waarde });\n        instellingVeranderd();\n        input.classList.remove('loading');\n    }\n    catch (error) {\n        console.error(error);\n        alert('WP Error: ' + error.message);\n    }\n};\n"],"names":["applicationServerKey","document","getElementsByTagName","content","isPushAvailable","pushMeldingenVeranderd","async","ant","result","Notification","requestPermission","Error","console","info","registration","navigator","serviceWorker","ready","pushManager","getSubscription","subscribeOptions","userVisibleOnly","subscription","subscribe","response","fetch","method","headers","body","JSON","stringify","ok","data","json","success","error","unsubscribe","pushAbboneer","_a","endpoint","pushDeabboneer","window","undefined","userAgent","includes","isStandalone","matchMedia","matches","classList","add","checkPushAvailability","instellingOpslaan","ev","preventDefault","input","target","href","waarde","HTMLInputElement","HTMLSelectElement","checkValidity","dataset","value","HTMLAnchorElement","antwoord","exec","querySelectorAll","forEach","el","remove","alert","message"],"sourceRoot":""}