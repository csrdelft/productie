{"version":3,"sources":["webpack:///./js/lib/fotoalbum/with-download-button.ts","webpack:///./js/lib/fotoalbum/with-full-size-preview.ts","webpack:///./js/lib/fotoalbum/with-fullscreen-button.ts","webpack:///./js/lib/fotoalbum/with-hotkeys.ts","webpack:///./js/lib/fotoalbum/with-preload.ts","webpack:///./js/lib/fotoalbum/main.ts","webpack:///./js/page/fotoalbum.ts"],"names":["constructor","albums","params","super","downloadIcon","style","color","backgroundColor","background","textColor","transform","content","addEventListener","window","location","href","this","getFullUrl","appendControlsElements","item","currentItem","goToItem","fullUrl","setSize","preview","bind","size","updateImage","getElement","querySelector","auto","load","img","Image","src","backgroundImage","backgroundSize","Math","min","width","url","fullscreenIcon","fullscreenButton","children","toggleFullscreen","document","fullscreenElement","classList","replace","exitFullscreen","previewElement","requestFullscreen","e","key","prev","next","items","album","indexOf","length","async","querySelectorAll","isLoggedIn","magAanpassen","root","fotos","dataset","decorators","withTags","push","default","withAdminButtons","appendChild","create","JSON","parse","previewSize","contain","tooltipThumbnailsToggle","tooltipChangeSize","tooltipSeeAllItems","tooltipSeeOtherAlbums","tooltipSlideShowPause","tooltipSlideShowStart","loadFotoAlbum"],"mappings":"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","file":"js/fotoalbum.5c84cf924c77b1918654.chunk.js","sourcesContent":["import createElement from 'jgallery/src/utils/create-element';\nimport withTooltip from 'jgallery/src/utils/with-tooltip';\nconst withDownloadButton = (constructor) => class extends constructor {\n    constructor(albums, params) {\n        super(albums, params);\n        const downloadIcon = withTooltip(createElement(`<span class=\"j-gallery-icon\"><i class=\"fa fa-download\"></i></span>`), {\n            style: {\n                color: params.backgroundColor,\n                background: params.textColor,\n                transform: 'translateY(-8px)',\n            },\n            content: 'Downloaden',\n        });\n        downloadIcon.addEventListener('click', () => window.location.href = `${this.getFullUrl()}?download`);\n        this.appendControlsElements([downloadIcon]);\n    }\n    goToItem(item) {\n        this.currentItem = item;\n        return super.goToItem(item);\n    }\n    getFullUrl() {\n        return this.currentItem.fullUrl;\n    }\n};\nexport default withDownloadButton;\n","import { Size } from 'jgallery/src/preview';\nimport load from 'jgallery/src/utils/load';\nconst withFullSizePreview = (constructor) => class extends constructor {\n    constructor(albums, params) {\n        super(albums, params);\n        const setSize = this.preview.setSize.bind(this.preview);\n        this.preview.setSize = (size) => {\n            this.updateImage(size);\n            return setSize(size);\n        };\n    }\n    async updateImage(size) {\n        const content = this.preview.getElement().querySelector('.j-gallery-preview-content');\n        if (size === Size.auto) {\n            await load(this.currentItem.fullUrl);\n            const img = new Image();\n            img.src = this.currentItem.fullUrl;\n            content.style.backgroundImage = `url(${this.currentItem.fullUrl})`;\n            content.style.backgroundSize = `${Math.min(3000, img.width)}px`;\n        }\n        else {\n            content.style.backgroundImage = `url(${this.currentItem.url})`;\n        }\n    }\n};\nexport default withFullSizePreview;\n","import createElement from 'jgallery/src/utils/create-element';\nimport withTooltip from 'jgallery/src/utils/with-tooltip';\nconst withFullscreenButton = (constructor) => class extends constructor {\n    constructor(albums, params) {\n        super(albums, params);\n        const fullscreenIcon = createElement(`<i class=\"fa fa-expand\"></i>`);\n        const fullscreenButton = withTooltip(createElement(`<span class=\"j-gallery-icon change-mode\"></span>`, {\n            children: [fullscreenIcon],\n        }), {\n            style: {\n                color: params.backgroundColor,\n                background: params.textColor,\n                transform: 'translateY(-8px)',\n            },\n            content: 'Volledig scherm',\n        });\n        fullscreenButton.addEventListener('click', () => this.toggleFullscreen());\n        this.appendControlsElements([fullscreenButton]);\n        document.addEventListener('fullscreenchange', () => {\n            if (document.fullscreenElement) {\n                fullscreenIcon.classList.replace('fa-expand', 'fa-compress');\n            }\n            else {\n                fullscreenIcon.classList.replace('fa-compress', 'fa-expand');\n            }\n        });\n    }\n    async toggleFullscreen() {\n        if (document.fullscreenElement) {\n            await document.exitFullscreen();\n        }\n        else {\n            await this.previewElement.requestFullscreen();\n        }\n    }\n};\nexport default withFullscreenButton;\n","const withHotkeys = (constructor) => class extends constructor {\n    constructor(albums, params) {\n        super(albums, params);\n        document.addEventListener('keydown', (e) => {\n            switch (e.key) {\n                case 'ArrowLeft':\n                    this.prev();\n                    break;\n                case 'ArrowRight':\n                    this.next();\n                    break;\n            }\n        });\n    }\n};\nexport default withHotkeys;\n","import load from 'jgallery/src/utils/load';\nconst withPreload = (constructor) => class extends constructor {\n    goToItem(item) {\n        const { items } = this.album;\n        const next = items[items.indexOf(item) + 1];\n        if (next) {\n            load(next.url);\n        }\n        else {\n            load(items[0].url);\n        }\n        const prev = items[items.indexOf(item) + 1];\n        if (prev) {\n            load(prev.url);\n        }\n        else {\n            load(items[items.length - 1].url);\n        }\n        return super.goToItem(item);\n    }\n};\nexport default withPreload;\n","import JGallery from 'jgallery';\nimport { Size } from 'jgallery/src/preview';\nimport withDownloadButton from './with-download-button';\nimport withFullSizePreview from './with-full-size-preview';\nimport withFullscreenButton from './with-fullscreen-button';\nimport withHotkeys from './with-hotkeys';\nimport withPreload from './with-preload';\nexport const loadFotoAlbum = async () => {\n    const albums = document.querySelectorAll('.fotoalbum');\n    for (const album of albums) {\n        const { isLoggedIn, magAanpassen, root, fotos } = album.dataset;\n        const decorators = [withFullscreenButton, withDownloadButton, withHotkeys, withPreload, withFullSizePreview];\n        if (isLoggedIn === 'true') {\n            const withTags = await import(/*webpackChunkName: \"fotoalbum-with-tags\"*/ './with-tags');\n            decorators.push(withTags.default);\n        }\n        if (magAanpassen === 'true') {\n            const withAdminButtons = await import(/*webpackChunkName: \"fotoalbum-with-admin-buttons\"*/ './with-admin-buttons');\n            decorators.push(withAdminButtons.default);\n        }\n        album.appendChild(JGallery.create(JSON.parse(fotos), {\n            decorators,\n            root,\n            previewSize: Size.contain,\n            tooltipThumbnailsToggle: 'Thumbnails weergeven',\n            tooltipChangeSize: 'Grootte veranderen',\n            tooltipSeeAllItems: 'Alle foto\\'s weergeven',\n            tooltipSeeOtherAlbums: 'Andere albums weergeven',\n            tooltipSlideShowPause: 'Voorstelling pauzeren',\n            tooltipSlideShowStart: 'Voorstelling starten',\n        }).getElement());\n    }\n};\n","import { loadFotoAlbum } from '../lib/fotoalbum/main';\n// loadFotoAlbum moet async zijn.\n// noinspection JSIgnoredPromiseFromCall\nloadFotoAlbum();\n"],"sourceRoot":""}