{"version":3,"sources":["webpack:///../.yarn/cache/@sentry-core-npm-7.29.0-acfa631d1a-d9330ed352.zip/node_modules/@sentry/core/esm/integration.js","webpack:///../.yarn/cache/@sentry-core-npm-7.29.0-acfa631d1a-d9330ed352.zip/node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack:///../.yarn/cache/@sentry-core-npm-7.29.0-acfa631d1a-d9330ed352.zip/node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/error.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/dsn.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/normalize.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/memo.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/envelope.js","webpack:///../.yarn/cache/@sentry-core-npm-7.29.0-acfa631d1a-d9330ed352.zip/node_modules/@sentry/core/esm/api.js","webpack:///../.yarn/cache/@sentry-core-npm-7.29.0-acfa631d1a-d9330ed352.zip/node_modules/@sentry/core/esm/envelope.js","webpack:///../.yarn/cache/@sentry-core-npm-7.29.0-acfa631d1a-d9330ed352.zip/node_modules/@sentry/core/esm/utils/prepareEvent.js","webpack:///../.yarn/cache/@sentry-core-npm-7.29.0-acfa631d1a-d9330ed352.zip/node_modules/@sentry/core/esm/baseclient.js","webpack:///../.yarn/cache/@sentry-core-npm-7.29.0-acfa631d1a-d9330ed352.zip/node_modules/@sentry/core/esm/version.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.29.0-93fbe26bf6-136b9d03a9.zip/node_modules/@sentry/browser/esm/eventbuilder.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.29.0-93fbe26bf6-136b9d03a9.zip/node_modules/@sentry/browser/esm/helpers.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/severity.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/url.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.29.0-93fbe26bf6-136b9d03a9.zip/node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.29.0-93fbe26bf6-136b9d03a9.zip/node_modules/@sentry/browser/esm/client.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/clientreport.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.29.0-93fbe26bf6-136b9d03a9.zip/node_modules/@sentry/browser/esm/stack-parsers.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.29.0-93fbe26bf6-136b9d03a9.zip/node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.29.0-93fbe26bf6-136b9d03a9.zip/node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.29.0-93fbe26bf6-136b9d03a9.zip/node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.29.0-93fbe26bf6-136b9d03a9.zip/node_modules/@sentry/browser/esm/integrations/dedupe.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.29.0-93fbe26bf6-136b9d03a9.zip/node_modules/@sentry/browser/esm/integrations/httpcontext.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/promisebuffer.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/ratelimit.js","webpack:///../.yarn/cache/@sentry-core-npm-7.29.0-acfa631d1a-d9330ed352.zip/node_modules/@sentry/core/esm/transports/base.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.29.0-93fbe26bf6-136b9d03a9.zip/node_modules/@sentry/browser/esm/transports/utils.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.29.0-93fbe26bf6-136b9d03a9.zip/node_modules/@sentry/browser/esm/transports/fetch.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.29.0-93fbe26bf6-136b9d03a9.zip/node_modules/@sentry/browser/esm/transports/xhr.js","webpack:///../.yarn/cache/@sentry-browser-npm-7.29.0-93fbe26bf6-136b9d03a9.zip/node_modules/@sentry/browser/esm/sdk.js","webpack:///../.yarn/cache/@sentry-core-npm-7.29.0-acfa631d1a-d9330ed352.zip/node_modules/@sentry/core/esm/sdk.js","webpack:///../.yarn/cache/@sentry-core-npm-7.29.0-acfa631d1a-d9330ed352.zip/node_modules/@sentry/core/esm/exports.js","webpack:///../.yarn/cache/@sentry-core-npm-7.29.0-acfa631d1a-d9330ed352.zip/node_modules/@sentry/core/esm/hub.js","webpack:///../.yarn/cache/@sentry-core-npm-7.29.0-acfa631d1a-d9330ed352.zip/node_modules/@sentry/core/esm/scope.js","webpack:///../.yarn/cache/@sentry-core-npm-7.29.0-acfa631d1a-d9330ed352.zip/node_modules/@sentry/core/esm/session.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/errors.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/hubextensions.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/idletransaction.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/tracing.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/baggage.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/types.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getActivationStart.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/generateUniqueID.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/getLCP.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/metrics/utils.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/metrics/index.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/getCLS.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/web-vitals/getFID.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/request.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/browsertracing.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/router.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/browser/backgroundtab.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/index.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/span.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/transaction.js","webpack:///../.yarn/cache/@sentry-tracing-npm-7.29.0-16e145a1cc-7ad9040664.zip/node_modules/@sentry/tracing/esm/utils.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/browser.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/instrument.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/is.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/logger.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/misc.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/node.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/env.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/object.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/stacktrace.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/string.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/supports.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/syncpromise.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/time.js","webpack:///../.yarn/cache/@sentry-utils-npm-7.29.0-5dbf6566da-9914a21296.zip/node_modules/@sentry/utils/esm/worldwide.js"],"names":["installedIntegrations","getIntegrationsToSetup","options","defaultIntegrations","userIntegrations","integrations","forEach","integration","isDefaultInstance","Array","isArray","finalIntegrations","integrationsByName","currentInstance","name","existingInstance","Object","values","filterDuplicates","debugIndex","findIndex","debugInstance","splice","push","DEFAULT_IGNORE_ERRORS","InboundFilters","this","id","_options","prototype","__init","call","addGlobalEventProcessor","getCurrentHub","eventProcess","event","hub","self","getIntegration","client","getClient","clientOptions","getOptions","ignoreInternal","exception","type","e","_isSentryError","__SENTRY_DEBUG__","ignoreErrors","length","message","value","oO","_getPossibleEventMessages","some","string","_isIgnoredError","denyUrls","url","_getEventFilterUrl","_isDeniedUrl","allowUrls","_isAllowedUrl","_shouldDropEvent","internalOptions","undefined","_mergeOptions","frames","stacktrace","i","frame","filename","_getLastValidUrl","__initStatic","originalFunctionToString","FunctionToString","Function","toString","args","context","apply","SentryError","Error","logLevel","super","constructor","setPrototypeOf","DSN_REGEX","dsn","withPassword","host","path","pass","port","projectId","protocol","publicKey","dsnFromComponents","components","from","str","match","exec","lastPath","slice","split","join","pop","projectMatch","dsnFromString","component","isValidProtocol","isNaN","parseInt","validateDsn","normalize","input","depth","Infinity","maxProperties","visit","err","ERROR","normalizeToSize","object","maxSize","normalized","encodeURI","utf8Length","JSON","stringify","key","memo","hasWeakSet","WeakSet","inner","obj","has","add","delete","memoBuilder","memoize","unmemoize","includes","is","stringified","_events","g","window","document","String","getPrototypeOf","stringifyValue","startsWith","replace","valueWithToJSON","toJSON","numAdded","visitable","visitKey","hasOwnProperty","visitValue","createEnvelope","headers","items","addItemToEnvelope","envelope","newItem","forEachEnvelopeItem","callback","envelopeItem","envelopeItemType","encodeUTF8","textEncoder","TextEncoder","encode","serializeEnvelope","envHeaders","parts","append","next","item","itemHeaders","payload","Uint8Array","stringifiedPayload","buffers","totalLength","reduce","acc","buf","merged","offset","buffer","set","concatBuffers","createAttachmentEnvelopeItem","attachment","data","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","session","sessions","transaction","client_report","user_report","profile","replay_event","replay_recording","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","sdk","version","getBaseApiEndpoint","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","tunnel","sdkInfo","_metadata","_getIngestEndpoint","sentry_key","sentry_version","sentry_client","_encodedAuth","createEventEnvelope","metadata","eventType","packages","enhanceEventWithSdkInfo","envelopeHeaders","dynamicSamplingContext","sdkProcessingMetadata","event_id","sent_at","Date","toISOString","trace","createEventEnvelopeHeaders","prepareEvent","hint","scope","normalizeDepth","normalizeMaxBreadth","prepared","timestamp","environment","release","dist","maxValueLength","request","applyClientOptions","integrationNames","applyIntegrationsMetadata","map","finalScope","captureContext","update","result","getAttachments","attachments","applyToEvent","then","evt","maxBreadth","breadcrumbs","b","user","contexts","extra","spans","span","normalizeEvent","ALREADY_SEEN_ERROR","BaseClient","_integrations","_integrationsInitialized","_numProcessing","_outcomes","__init2","__init3","__init4","_dsn","_transport","transport","recordDroppedEvent","bind","transportOptions","log","eventId","_process","eventFromException","_captureEvent","level","promisedEvent","eventFromMessage","originalException","_isEnabled","sendSession","init","timeout","_isClientDoneProcessing","clientFinished","flush","transportFlushed","enabled","integrationIndex","indexOf","setupOnce","setupIntegrations","integrationId","_oO","env","_sendEnvelope","createSessionEnvelope","reason","category","_event","sendClientReports","crashed","errored","exceptions","ex","mechanism","handled","sessionNonTerminal","status","errors","Number","captureSession","resolve","ticked","interval","setInterval","clearInterval","_processEvent","finalEvent","sentryError","sampleRate","isTransaction","isTransactionEvent","isError","isErrorEvent","beforeSendLabel","Math","random","_prepareEvent","__sentry__","beforeSendResult","invalidValueError","_validateBeforeSendResult","beforeSend","beforeSendTransaction","processBeforeSend","processedEvent","getSession","_updateSessionFromEvent","transactionInfo","transaction_info","source","changes","propagations","sendEvent","captureException","promise","send","outcomes","keys","quantity","SDK_VERSION","exceptionFromError","stackParser","parseStackFrames","extractMessage","eventFromError","stack","popSize","framesToPop","reactMinifiedRegexp","test","getPopSize","error","eventFromUnknownInput","syntheticException","attachStacktrace","isUnhandledRejection","domException","eventFromString","tags","code","__serialized__","eventFromPlainObject","synthetic","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","setTimeout","wrap","fn","before","wrapper","__sentry_wrapped__","sentryWrapped","arguments","wrappedArguments","arg","addEventProcessor","property","getOwnPropertyDescriptor","configurable","defineProperty","get","validSeverityLevels","severityLevelFromString","parseUrl","query","fragment","relative","MAX_ALLOWED_STRING_LENGTH","BREADCRUMB_INTEGRATION_ID","Breadcrumbs","console","dom","fetch","history","sentry","xhr","_consoleBreadcrumb","_innerDomBreadcrumb","handlerData","target","keyAttrs","serializeAttribute","maxStringLength","addBreadcrumb","global","_domBreadcrumb","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","breadcrumb","logger","endTimestamp","__sentry_own_request__","method","status_code","body","__sentry_xhr__","fetchData","response","to","parsedLoc","parsedFrom","parsedTo","BrowserClient","_flushOutcomes","breadcrumbIntegration","getIntegrationById","_optionalChain","_","addSentryBreadcrumb","_2","platform","_clearOutcomes","discarded_events","isRealNavigator","sendBeacon","UNKNOWN_FUNCTION","createFrame","func","lineno","colno","function","in_app","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackLineParsers","line","subMatch","extractSafariExtensionDetails","defaultStackParser","isSafariExtension","isSafariWebExtension","DEFAULT_EVENT_TARGET","TryCatch","XMLHttpRequest","eventTarget","requestAnimationFrame","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","original","originalCallback","handler","originalSend","prop","wrapOptions","originalFunction","globalObject","proto","eventName","handleEvent","originalRemoveEventListener","wrappedEventHandler","originalEventHandler","GlobalHandlers","_installFunc","onerror","_installGlobalOnErrorHandler","onunhandledrejection","_installGlobalOnUnhandledRejectionHandler","stackTraceLimit","installFunc","getHubAndOptions","msg","column","ERROR_TYPES_RE","groups","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","addMechanismAndCapture","detail","ev","ev0","ev0s","ev0sf","captureEvent","LinkedErrors","_key","_limit","limit","parser","linkedErrors","_walkErrorTree","_handler","Dedupe","eventProcessor","currentEvent","previousEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","_previousEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","fingerprint","previousFingerprint","HttpContext","referrer","userAgent","Referer","makePromiseBuffer","remove","task","$","taskProducer","drain","reject","counter","capturedSetTimeout","clearTimeout","updateRateLimits","limits","statusCode","now","updatedRateLimits","rateLimitHeader","retryAfterHeader","trim","retryAfter","categories","headerDelay","delay","all","header","headerDate","parse","parseRetryAfterHeader","createTransport","makeRequest","bufferSize","rateLimits","filteredEnvelopeItems","envelopeItemDataCategory","disabledUntil","isRateLimited","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","cachedFetchImpl","makeFetchTransport","nativeFetch","fetchImpl","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","getNativeFetchImplementation","requestOptions","referrerPolicy","keepalive","fetchOptions","makeXHRTransport","onreadystatechange","readyState","getResponseHeader","open","setRequestHeader","__SENTRY_RELEASE__","autoSessionTracking","supports","clientClass","debug","warn","getScope","initialScope","bindClient","initAndBind","startSessionOnHub","startSessionTracking","startSession","ignoreDuration","setUser","withScope","DEFAULT_BREADCRUMBS","Hub","_stack","_version","getStackTop","getStack","pushScope","popScope","_lastEventId","_withClient","captureMessage","beforeBreadcrumb","maxBreadcrumbs","mergedBreadcrumb","finalBreadcrumb","setTags","extras","setExtras","setTag","setExtra","setContext","oldHub","makeMain","customSamplingContext","_callExtensionMethod","endSession","_sendSessionUpdate","layer","setSession","getUser","currentSession","Boolean","sendDefaultPii","getMainCarrier","__SENTRY__","extensions","registry","getHubFromCarrier","setHubOnCarrier","hasHubOnCarrier","isOlderThan","activeDomain","domain","active","registryHubTopStack","_Oo","getHubFromActiveDomain","carrier","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","_notifyScopeListeners","requestSession","getSpan","updatedScope","maxCrumbs","getTraceContext","transactionName","_applyFingerprint","_notifyEventProcessors","getGlobalEventProcessors","newData","processors","index","processor","final","concat","makeSession","startingTime","sid","started","duration","did","attrs","ip_address","ipAddress","user_agent","sessionToJSON","updateSession","email","username","closeSession","errorCallback","activeTransaction","setStatus","traceHeaders","toTraceparent","sample","samplingContext","sampled","setMetadata","tracesSampler","parentSampled","tracesSampleRate","rate","isValidSampleRate","op","_startTransaction","transactionContext","configInstrumenter","instrumenter","transactionInstrumenter","initSpanRecorder","_experiments","startIdleTransaction","idleTimeout","finalTimeout","onScope","heartbeatInterval","addExtensionMethods","startTransaction","_addTracingExtensions","packageToIntegrationMapping","mongodb","module","Mongo","mongoose","mysql","Mysql","pg","Postgres","mappedPackages","filter","moduleName","pkg","p","_autoloadDatabaseIntegrations","DEFAULT_IDLE_TIMEOUT","DEFAULT_FINAL_TIMEOUT","DEFAULT_HEARTBEAT_INTERVAL","IdleTransactionSpanRecorder","_pushActivity","_popActivity","transactionSpanId","maxlen","spanId","finish","IdleTransaction","activities","_heartbeatCounter","_finished","_beforeFinishCallbacks","_idleHub","_idleTimeout","_finalTimeout","_heartbeatInterval","_onScope","clearActiveTransaction","configureScope","setSpan","_startIdleTimeout","spanRecorder","keepSpan","startTimestamp","pushActivity","popActivity","_pingHeartbeat","_idleTimeoutID","_cancelIdleTimeout","heartbeatString","_prevHeartbeatString","_beat","getTransaction","TRACEPARENT_REGEXP","RegExp","BAGGAGE_HEADER_NAME","SENTRY_BAGGAGE_KEY_PREFIX","SENTRY_BAGGAGE_KEY_PREFIX_REGEX","dynamicSamplingContextToSentryBaggageHeader","entries","baggageHeader","objectKey","objectValue","currentIndex","baggageEntry","encodeURIComponent","newBaggageHeader","objectToBaggageHeader","dscKey","dscValue","baggageHeaderToObject","keyOrValue","decodeURIComponent","WINDOW","bindReporter","metric","reportAllChanges","prevValue","delta","forceReport","getNavigationEntry","__WEB_VITALS_POLYFILL__","performance","getEntriesByType","timing","navigation","navigationEntry","entryType","startTime","max","navigationStart","getNavigationEntryFromPerformanceTiming","getActivationStart","navEntry","activationStart","initMetric","navigationType","prerendering","rating","floor","observe","opts","PerformanceObserver","supportedEntryTypes","po","list","getEntries","assign","buffered","onHidden","cb","once","onHiddenOrPageHide","visibilityState","removeEventListener","addEventListener","firstHiddenTime","getVisibilityWatcher","timeStamp","reportedMetricIDs","isMeasurementValue","isFinite","_startChild","ctx","startChild","getBrowserPerformanceAPI","_lcpEntry","_clsEntry","_performanceCursor","_measurements","startTrackingWebVitals","mark","onReport","report","sessionValue","sessionEntries","handleEntries","entry","hadRecentInput","firstSessionEntry","lastSessionEntry","takeRecords","onCLS","unit","visibilityWatcher","lastEntry","stopListening","disconnect","capture","onLCP","handleEntry","processingStart","onFID","timeOrigin","addPerformanceEntries","performanceEntries","responseStartTimestamp","requestStartTimestamp","_addPerformanceNavigationTiming","description","requestStart","responseEnd","responseStart","_addRequest","_addNavigationSpans","measureStartTimestamp","measureEndTimestamp","_addMeasureSpans","firstHidden","shouldRecord","resourceName","location","origin","initiatorType","transferSize","encodedBodySize","decodedBodySize","_addResourceSpans","navigator","connection","effectiveType","rtt","deviceMemory","hardwareConcurrency","_trackNavigator","oldValue","measurementTimestamp","normalizedValue","abs","fidMark","cls","measurementName","setMeasurement","element","size","sources","node","_tagMetricInfo","eventEnd","end","start","_nullishCoalesce","DEFAULT_TRACE_PROPAGATION_TARGETS","defaultRequestInstrumentationOptions","traceFetch","traceXHR","tracingOrigins","tracePropagationTargets","instrumentOutgoingRequests","shouldCreateSpanForRequest","shouldCreateSpan","shouldAttachHeadersWithTargets","shouldAttachHeaders","__span","setHttpStatus","sentryBaggageHeader","sentryTraceHeader","Request","Headers","newHeaders","existingBaggageHeader","baggage","newBaggageHeaders","addTracingHeadersToFetchRequest","getDynamicSamplingContext","fetchCallback","__sentry_xhr_span_id__","xhrCallback","DEFAULT_BROWSER_TRACING_OPTIONS","markBackgroundTransactions","routingInstrumentation","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","href","pathname","enableLongTask","enableInteractions","BrowserTracing","_3","_4","_getCurrentHub","instrumentRouting","_createRouteTransaction","statusType","_5","_registerInteractionListener","beforeNavigate","isPageloadTransaction","sentryTraceMetaTagValue","getMetaContent","baggageMetaTagValue","traceParentData","traceparent","matches","traceId","parentSpanId","extractTraceparentData","baggageObject","curr","baggageHeaderToDynamicSamplingContext","expandedContext","trimEnd","modifiedContext","finalContext","_latestRouteName","_latestRouteSource","_6","_7","idleTransaction","registerBeforeFinishCallback","inflightInteractionTransaction","registerInteractionTransaction","metaName","metaTag","getAttribute","__SENTRY_TRACING__","SpanRecorder","_maxlen","Span","substring","spanContext","__init5","__init6","__init7","childSpan","logMessage","spanMetadata","httpStatus","spanStatus","spanStatusfromHttpCode","sampledString","parent_span_id","span_id","trace_id","start_timestamp","Transaction","_frozenDynamicSamplingContext","_hub","_name","_trimEnd","incomingDynamicSamplingContext","newName","setName","newMetadata","finishedSpans","s","prev","current","measurements","toContext","updateWithContext","public_key","getDsn","maybeSampleRate","sample_rate","segment","user_segment","hasTracingEnabled","maybeOptions","getActiveTransaction","maybeHub","msToSec","time","htmlTreeAsString","elem","currentElem","MAX_TRAVERSE_HEIGHT","out","height","len","separator","sepLength","nextStr","_htmlElementAsString","parentNode","reverse","el","className","classes","attr","tagName","toLowerCase","keyAttrPairs","keyAttr","keyAttrPair","allowedAttrs","getLocationHref","getDomElement","selector","querySelector","lhs","rhsFn","ops","lastAccessLHS","handlers","instrumented","instrument","originalConsoleMethod","triggerHandlers","instrumentConsole","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","instrumentDOM","xhrproto","originalOpen","xhrInfo","toUpperCase","onreadystatechangeHandler","readyStateArgs","instrumentXHR","originalFetch","getFetchMethod","getFetchUrl","instrumentFetch","oldOnPopState","onpopstate","historyReplacementFunction","originalHistoryFunction","lastHref","instrumentHistory","_oldOnErrorHandler","_oldOnUnhandledRejectionHandler","addInstrumentationHandler","fetchArgs","debounceTimerID","lastCapturedEvent","globalListener","isContentEditable","shouldSkipDOMEvent","previous","shouldShortcircuitPreviousDebounce","objectToString","wat","isInstanceOf","isBuiltin","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isEvent","Event","isElement","Element","isRegExp","isThenable","isSyntheticEvent","base","_e","CONSOLE_LEVELS","consoleSandbox","originalConsole","wrappedLevels","originalWrappedFunc","__sentry_original__","makeLogger","enable","disable","uuid4","gbl","crypto","msCrypto","randomUUID","getRandomByte","getRandomValues","c","getFirstException","getEventDescription","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mergedData","checkOrSetAlreadyCaught","__sentry_captured__","arrayify","maybeArray","isNodeEnv","__SENTRY_BROWSER_BUNDLE__","process","dynamicRequire","mod","require","loadModule","cwd","fill","replacementFactory","wrapped","markFunctionWrapped","addNonEnumerableProperty","writable","getOriginalFunction","urlEncode","convertToPlainObject","getOwnProperties","newObj","serializeEventTarget","currentTarget","CustomEvent","extractedProps","extractExceptionKeysForMessage","maxLength","sort","includedKeys","serialized","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","memoVal","returnValue","createStackParser","parsers","sortedParsers","a","skipFirst","cleanedLine","localStack","firstFrameFunction","lastFrameFunction","stripSentryFramesAndReverse","stackParserFromStackParserOptions","defaultFunctionName","getFunctionName","truncate","substr","safeJoin","delimiter","output","stringMatchesSomePattern","testString","patterns","requireExactStringMatch","pattern","isMatchingPattern","supportsFetch","Response","isNativeFetch","supportsNativeFetch","doc","supportsHistory","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","pushState","replaceState","States","resolvedSyncPromise","SyncPromise","rejectedSyncPromise","_state","PENDING","_handlers","executor","_resolve","_reject","onfulfilled","onrejected","_executeHandlers","val","onfinally","isRejected","_setResult","RESOLVED","REJECTED","state","_value","cachedHandlers","dateTimestampSource","nowSeconds","platformPerformance","getNodePerformance","getBrowserPerformance","timestampSource","dateTimestampInSeconds","timestampInSeconds","timestampWithMs","_browserPerformanceTimeOriginMode","browserPerformanceTimeOrigin","threshold","performanceNow","dateNow","timeOriginDelta","timeOriginIsReliable","navigationStartDelta","isGlobalObj","GLOBAL_OBJ","globalThis","getGlobalObject","getGlobalSingleton","creator"],"mappings":"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","file":"js/1895.1cb1311933ea4bd82f74.bundle.js","sourcesContent":["import { arrayify, logger } from '@sentry/utils';\nimport { getCurrentHub } from './hub.js';\nimport { addGlobalEventProcessor } from './scope.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.values(integrationsByName);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = finalIntegrations.findIndex(integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    integrationIndex[integration.name] = integration;\n\n    if (installedIntegrations.indexOf(integration.name) === -1) {\n      integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n      installedIntegrations.push(integration.name);\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Integration installed: ${integration.name}`);\n    }\n  });\n\n  return integrationIndex;\n}\n\nexport { getIntegrationsToSetup, installedIntegrations, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { logger, getEventDescription, stringMatchesSomePattern } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = InboundFilters.id;}\n\n   constructor(  _options = {}) {;this._options = _options;InboundFilters.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    const eventProcess = (event) => {\n      const hub = getCurrentHub();\n      if (hub) {\n        const self = hub.getIntegration(InboundFilters);\n        if (self) {\n          const client = hub.getClient();\n          const clientOptions = client ? client.getOptions() : {};\n          const options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...DEFAULT_IGNORE_ERRORS,\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  if (!ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    try {\n      const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, _mergeOptions, _shouldDropEvent };\n//# sourceMappingURL=inboundfilters.js.map\n","import { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {constructor() { FunctionToString.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = FunctionToString.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Function.prototype.toString = function ( ...args) {\n      const context = getOriginalFunction(this) || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n} FunctionToString.__initStatic();\n\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;;\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { SentryError } from './error.js';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    throw new SentryError(`Invalid Sentry Dsn: ${str}`);\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  requiredComponents.forEach(component => {\n    if (!dsn[component]) {\n      throw new SentryError(`Invalid Sentry Dsn: ${component} missing`);\n    }\n  });\n\n  if (!projectId.match(/^\\d+$/)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n  }\n\n  if (!isValidProtocol(protocol)) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new SentryError(`Invalid Sentry Dsn: Invalid port ${port}`);\n  }\n\n  return true;\n}\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  validateDsn(components);\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","import { isNaN, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = +Infinity, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We're also done if we've reached the max depth\n  if (depth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, depth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, depth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${(Object.getPrototypeOf(value) ).constructor.name}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nexport { normalize, normalizeToSize, visit as walk };\n//# sourceMappingURL=normalize.js.map\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n  envelopeItems.forEach((envelopeItem) => {\n    const envelopeItemType = envelopeItem[0].type;\n    callback(envelopeItem, envelopeItemType);\n  });\n}\n\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay_event',\n  replay_recording: 'replay_recording',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n    ...(event.type === 'transaction' &&\n      dynamicSamplingContext && {\n        trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n      }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { urlEncode, makeDsn, dsnToString } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = makeDsn(dsnLike);\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { getSdkMetadataForEnvelopeHeader, dsnToString, createEnvelope, createEventEnvelopeHeaders } from '@sentry/utils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const eventType = event.type || 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { uuid4, dateTimestampInSeconds, resolvedSyncPromise, truncate, normalize } from '@sentry/utils';\nimport { Scope } from '../scope.js';\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(\n    prepared,\n    options.integrations.map(i => i.name),\n  );\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  let finalScope = scope;\n  if (hint.captureContext) {\n    finalScope = Scope.clone(finalScope).update(hint.captureContext);\n  }\n\n  // We prepare the result here with a resolved Event.\n  let result = resolvedSyncPromise(prepared);\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  //\n  // We need to check for the existence of `finalScope.getAttachments`\n  // because `getAttachments` can be undefined if users are using an older version\n  // of `@sentry/core` that does not have the `getAttachments` method.\n  // See: https://github.com/getsentry/sentry-javascript/issues/5229\n  if (finalScope) {\n    // Collect attachments from the hint and scope\n    if (finalScope.getAttachments) {\n      const attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n    }\n\n    // In case we have a hub we reassign it.\n    result = finalScope.applyToEvent(prepared, hint);\n  }\n\n  return result.then(evt => {\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : 'production';\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n      if (span.data) {\n        span.data = normalize(span.data, depth, maxBreadth);\n      }\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nexport { prepareEvent };\n//# sourceMappingURL=prepareEvent.js.map\n","import { makeDsn, logger, checkOrSetAlreadyCaught, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegrations } from './integration.js';\nimport { updateSession } from './session.js';\nimport { prepareEvent } from './utils/prepareEvent.js';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n   __init() {this._integrations = {};}\n\n  /** Indicates whether this client's integrations have been set up. */\n   __init2() {this._integrationsInitialized = false;}\n\n  /** Number of calls being processed */\n   __init3() {this._numProcessing = 0;}\n\n  /** Holds flushable  */\n   __init4() {this._outcomes = {};}\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {;BaseClient.prototype.__init.call(this);BaseClient.prototype.__init2.call(this);BaseClient.prototype.__init3.call(this);BaseClient.prototype.__init4.call(this);\n    this._options = options;\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('No DSN provided, client will not do anything.');\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations() {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = setupIntegrations(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    if (this._dsn) {\n      let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (const attachment of hint.attachments || []) {\n        env = addItemToEnvelope(\n          env,\n          createAttachmentEnvelopeItem(\n            attachment,\n            this._options.transportOptions && this._options.transportOptions.textEncoder,\n          ),\n        );\n      }\n\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    if (this._dsn) {\n      const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, _event) {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const options = this.getOptions();\n    return prepareEvent(options, event, hint, scope);\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    if (!this._isEnabled()) {\n      return rejectedSyncPromise(new SentryError('SDK not enabled, will not capture event.', 'log'));\n    }\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', eventType, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', event.type || 'error', event);\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n            changes: [\n              ...transactionInfo.changes,\n              {\n                source,\n                // use the same timestamp as the processed event.\n                timestamp: processedEvent.timestamp ,\n                propagations: transactionInfo.propagations,\n              },\n            ],\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason ,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    if (this._transport && this._dsn) {\n      this._transport.send(envelope).then(null, reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","const SDK_VERSION = '7.29.0';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { isEvent, extractExceptionKeysForMessage, normalizeToSize, addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject } from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            isUnhandledRejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception ) || isDOMException(exception )) {\n    const domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  input,\n  syntheticException,\n  attachStacktrace,\n) {\n  const event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n\nexport { eventFromError, eventFromException, eventFromMessage, eventFromPlainObject, eventFromString, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { GLOBAL_OBJ, getOriginalFunction, addExceptionTypeValue, addExceptionMechanism, markFunctionWrapped, addNonEnumerableProperty } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function () {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope) => {\n        scope.addEventProcessor((event) => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\n\nexport { WINDOW, ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url)\n\n {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\nexport { getNumberOfUrlSegments, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, getEventDescription, logger, htmlTreeAsString, severityLevelFromString, safeJoin, parseUrl } from '@sentry/utils';\nimport { WINDOW } from '../helpers.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst BREADCRUMB_INTEGRATION_ID = 'Breadcrumbs';\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nclass Breadcrumbs  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = BREADCRUMB_INTEGRATION_ID;}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Breadcrumbs.id;}\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;Breadcrumbs.prototype.__init.call(this);\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n   setupOnce() {\n    if (this.options.console) {\n      addInstrumentationHandler('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      addInstrumentationHandler('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      addInstrumentationHandler('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      addInstrumentationHandler('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      addInstrumentationHandler('history', _historyBreadcrumb);\n    }\n  }\n\n  /**\n   * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n   */\n   addSentryBreadcrumb(event) {\n    if (this.options.sentry) {\n      getCurrentHub().addBreadcrumb(\n        {\n          category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n          event_id: event.event_id,\n          level: event.level,\n          message: getEventDescription(event),\n        },\n        {\n          event,\n        },\n      );\n    }\n  }\n} Breadcrumbs.__initStatic();\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _domBreadcrumb(dom) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function _innerDomBreadcrumb(handlerData) {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      target = handlerData.event.target\n        ? htmlTreeAsString(handlerData.event.target , { keyAttrs, maxStringLength })\n        : htmlTreeAsString(handlerData.event , { keyAttrs, maxStringLength });\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _consoleBreadcrumb(handlerData) {\n  // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n  // console warnings. This happens when a Vue template is rendered with\n  // an undeclared variable, which we try to stringify, ultimately causing\n  // Vue to issue another warning which repeats indefinitely.\n  // see: https://github.com/getsentry/sentry-javascript/pull/6010\n  // see: https://github.com/getsentry/sentry-javascript/issues/5916\n  for (let i = 0; i < handlerData.args.length; i++) {\n    if (handlerData.args[i] === 'ref=Ref<') {\n      handlerData.args[i + 1] = 'viewRef';\n      break;\n    }\n  }\n  const breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: severityLevelFromString(handlerData.level),\n    message: safeJoin(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  getCurrentHub().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _xhrBreadcrumb(handlerData) {\n  if (handlerData.endTimestamp) {\n    // We only capture complete, non-sentry requests\n    if (handlerData.xhr.__sentry_own_request__) {\n      return;\n    }\n\n    const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'xhr',\n        data: {\n          method,\n          url,\n          status_code,\n        },\n        type: 'http',\n      },\n      {\n        xhr: handlerData.xhr,\n        input: body,\n      },\n    );\n\n    return;\n  }\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _fetchBreadcrumb(handlerData) {\n  // We only capture complete fetch requests\n  if (!handlerData.endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: handlerData.fetchData,\n        level: 'error',\n        type: 'http',\n      },\n      {\n        data: handlerData.error,\n        input: handlerData.args,\n      },\n    );\n  } else {\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: {\n          ...handlerData.fetchData,\n          status_code: handlerData.response.status,\n        },\n        type: 'http',\n      },\n      {\n        input: handlerData.args,\n        response: handlerData.response,\n      },\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _historyBreadcrumb(handlerData) {\n  let from = handlerData.from;\n  let to = handlerData.to;\n  const parsedLoc = parseUrl(WINDOW.location.href);\n  let parsedFrom = parseUrl(from);\n  const parsedTo = parseUrl(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  getCurrentHub().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\nexport { BREADCRUMB_INTEGRATION_ID, Breadcrumbs };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { BaseClient, SDK_VERSION, getEnvelopeEndpointWithUrlEncodedAuth } from '@sentry/core';\nimport { logger, createClientReportEnvelope, dsnToString, serializeEnvelope } from '@sentry/utils';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { WINDOW } from './helpers.js';\nimport { BREADCRUMB_INTEGRATION_ID } from './integrations/breadcrumbs.js';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint) {\n    // We only want to add the sentry event breadcrumb when the user has the breadcrumb integration installed and\n    // activated its `sentry` option.\n    // We also do not want to use the `Breadcrumbs` class here directly, because we do not want it to be included in\n    // bundles, if it is not used by the SDK.\n    // This all sadly is a bit ugly, but we currently don't have a \"pre-send\" hook on the integrations so we do it this\n    // way for now.\n    const breadcrumbIntegration = this.getIntegrationById(BREADCRUMB_INTEGRATION_ID) ;\n    // We check for definedness of `addSentryBreadcrumb` in case users provided their own integration with id\n    // \"Breadcrumbs\" that does not have this function.\n    _optionalChain([breadcrumbIntegration, 'optionalAccess', _ => _.addSentryBreadcrumb, 'optionalCall', _2 => _2(event)]);\n\n    super.sendEvent(event, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Sending outcomes:', outcomes);\n\n    const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, this._options);\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    try {\n      const isRealNavigator = Object.prototype.toString.call(WINDOW && WINDOW.navigator) === '[object Navigator]';\n      const hasSendBeacon = isRealNavigator && typeof WINDOW.navigator.sendBeacon === 'function';\n      // Make sure beacon is not used if user configures custom transport options\n      if (hasSendBeacon && !this._options.transportOptions) {\n        // Prevent illegal invocations - https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n        const sendBeacon = WINDOW.navigator.sendBeacon.bind(WINDOW.navigator);\n        sendBeacon(url, serializeEnvelope(envelope));\n      } else {\n        // If beacon is not supported or if they are using the tunnel option\n        // use our regular transport to send client reports to Sentry.\n        this._sendEnvelope(envelope);\n      }\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(e);\n    }\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","import { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  const frame = {\n    filename,\n    function: func,\n    // All browser frames are considered in_app\n    in_app: true,\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.*\\).*?|.*?) ?\\((?:address at )?)?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nconst chrome = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nconst chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|safari-extension|safari-web-extension|capacitor)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nconst geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex =\n  /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nconst winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10 = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nconst opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11 = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nconst opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nconst defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nconst defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func, filename) => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\nimport { WINDOW, wrap } from '../helpers.js';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nclass TryCatch  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'TryCatch';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = TryCatch.id;}\n\n  /** JSDoc */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {;TryCatch.prototype.__init.call(this);\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n   setupOnce() {\n    if (this._options.setTimeout) {\n      fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      fill(WINDOW, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    const eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n} TryCatch.__initStatic();\n\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( callback) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW ;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original)\n\n {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn ;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, isString, isPrimitive, isErrorEvent, getLocationHref, logger, addExceptionMechanism } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** Global handlers */\nclass GlobalHandlers  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GlobalHandlers';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = GlobalHandlers.id;}\n\n  /** JSDoc */\n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n   __init2() {this._installFunc = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };}\n\n  /** JSDoc */\n   constructor(options) {;GlobalHandlers.prototype.__init.call(this);GlobalHandlers.prototype.__init2.call(this);\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    Error.stackTraceLimit = 50;\n    const options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n    // eslint-disable-next-line guard-for-in\n    for (const key in options) {\n      const installFunc = this._installFunc[key ];\n      if (installFunc && options[key ]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key ] = undefined;\n      }\n    }\n  }\n} GlobalHandlers.__initStatic();\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n  addInstrumentationHandler(\n    'error',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (data) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      const event =\n        error === undefined && isString(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n  addInstrumentationHandler(\n    'unhandledrejection',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (e) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      const event = isPrimitive(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub, error, event, type) {\n  addExceptionMechanism(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions() {\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map\n","import { getCurrentHub, addGlobalEventProcessor } from '@sentry/core';\nimport { isInstanceOf } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n    __init() {this.name = LinkedErrors.id;}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {;LinkedErrors.prototype.__init.call(this);\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    const client = getCurrentHub().getClient();\n    if (!client) {\n      return;\n    }\n    addGlobalEventProcessor((event, hint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n} LinkedErrors.__initStatic();\n\n/**\n * @inheritDoc\n */\nfunction _handler(\n  parser,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return event;\n  }\n  const linkedErrors = _walkErrorTree(parser, limit, hint.originalException , key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nfunction _walkErrorTree(\n  parser,\n  limit,\n  error,\n  key,\n  stack = [],\n) {\n  if (!isInstanceOf(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  const exception = exceptionFromError(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\n\nexport { LinkedErrors, _handler, _walkErrorTree };\n//# sourceMappingURL=linkederrors.js.map\n","import { logger } from '@sentry/utils';\n\n/** Deduplication filter */\nclass Dedupe  {constructor() { Dedupe.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Dedupe.id;}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    const eventProcessor = currentEvent => {\n      const self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { Dedupe };\n//# sourceMappingURL=dedupe.js.map\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext  {constructor() { HttpContext.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpContext';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = HttpContext.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    addGlobalEventProcessor((event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n        const { referrer } = WINDOW.document || {};\n        const { userAgent } = WINDOW.navigator || {};\n\n        const headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n} HttpContext.__initStatic();\n\nexport { HttpContext };\n//# sourceMappingURL=httpcontext.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that given category is disabled until for rate limiting\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n * Returns true if headers contains a non-empty rate limiting header.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, serializeEnvelope, logger, updateRateLimits, SentryError, makePromiseBuffer } from '@sentry/utils';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE),\n) {\n  let rateLimits = {};\n\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n        },\n        error => {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Failed while sending event:', error);\n          recordEnvelopeLoss('network_error');\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","import { isNativeFetch, logger } from '@sentry/utils';\nimport { WINDOW } from '../helpers.js';\n\nlet cachedFetchImpl = undefined;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nfunction clearCachedFetchImplementation() {\n  cachedFetchImpl = undefined;\n}\n\nexport { clearCachedFetchImplementation, getNativeFetchImplementation };\n//# sourceMappingURL=utils.js.map\n","import { createTransport } from '@sentry/core';\nimport { rejectedSyncPromise } from '@sentry/utils';\nimport { clearCachedFetchImplementation, getNativeFetchImplementation } from './utils.js';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeFetchImplementation(),\n) {\n  function makeRequest(request) {\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch), a request with `keepalive: true`\n      //   and a content length of > 64 kibibytes returns a network error. We will therefore only activate the flag when\n      //   we're below that limit.\n      keepalive: request.body.length <= 65536,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => ({\n        statusCode: response.status,\n        headers: {\n          'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n          'retry-after': response.headers.get('Retry-After'),\n        },\n      }));\n    } catch (e) {\n      clearCachedFetchImplementation();\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeXHRTransport };\n//# sourceMappingURL=xhr.js.map\n","import { Integrations, getIntegrationsToSetup, initAndBind, getReportDialogEndpoint, getCurrentHub } from '@sentry/core';\nimport { stackParserFromStackParserOptions, supportsFetch, logger, resolvedSyncPromise, addInstrumentationHandler } from '@sentry/utils';\nimport { BrowserClient } from './client.js';\nimport { WINDOW, wrap as wrap$1 } from './helpers.js';\nimport './integrations/index.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport './transports/index.js';\nimport { TryCatch } from './integrations/trycatch.js';\nimport { Breadcrumbs } from './integrations/breadcrumbs.js';\nimport { GlobalHandlers } from './integrations/globalhandlers.js';\nimport { LinkedErrors } from './integrations/linkederrors.js';\nimport { Dedupe } from './integrations/dedupe.js';\nimport { HttpContext } from './integrations/httpcontext.js';\nimport { makeFetchTransport } from './transports/fetch.js';\nimport { makeXHRTransport } from './transports/xhr.js';\n\nconst defaultIntegrations = [\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new HttpContext(),\n];\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}, hub = getCurrentHub()) {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    script.onload = options.onLoad;\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction flush(timeout) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction close(timeout) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return resolvedSyncPromise(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrap(fn) {\n  return wrap$1(fn)();\n}\n\nfunction startSessionOnHub(hub) {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  if (typeof WINDOW.document === 'undefined') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  const hub = getCurrentHub();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub(getCurrentHub());\n    }\n  });\n}\n\nexport { close, defaultIntegrations, flush, forceLoad, init, lastEventId, onLoad, showReportDialog, wrap };\n//# sourceMappingURL=sdk.js.map\n","import { logger } from '@sentry/utils';\nimport { getCurrentHub } from './hub.js';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      // eslint-disable-next-line no-console\n      console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  if (scope) {\n    scope.update(options.initialScope);\n  }\n\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n\nexport { initAndBind };\n//# sourceMappingURL=sdk.js.map\n","import { getCurrentHub } from './hub.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction captureException(exception, captureContext) {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\nexport { addBreadcrumb, captureEvent, captureException, captureMessage, configureScope, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope };\n//# sourceMappingURL=exports.js.map\n","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, GLOBAL_OBJ, isNodeEnv, getGlobalSingleton } from '@sentry/utils';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n    __init() {this._stack = [{}];}\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {;this._version = _version;Hub.prototype.__init.call(this);\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (event.type !== 'transaction') {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    const scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    const scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    const scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    const scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    const scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    const scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    const layer = this.getStackTop();\n    const scope = layer && layer.scope;\n    const session = scope && scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      const currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        updateSession(currentSession, { status: 'exited' });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n  try {\n    const sentry = getMainCarrier().__SENTRY__;\n    const activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { isPlainObject, dateTimestampInSeconds, SyncPromise, logger, isThenable, arrayify, getGlobalSingleton } from '@sentry/utils';\nimport { updateSession } from './session.js';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** Transaction Name */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n      newScope._sdkProcessingMetadata = { ...scope._sdkProcessingMetadata };\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = { ...event.sdkProcessingMetadata, ...this._sdkProcessingMetadata };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nexport { Scope, addGlobalEventProcessor };\n//# sourceMappingURL=scope.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { addInstrumentationHandler, logger } from '@sentry/utils';\nimport { getActiveTransaction } from './utils.js';\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  addInstrumentationHandler('error', errorCallback);\n  addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const status = 'internal_error';\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\nexport { registerErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n","import { getMainCarrier } from '@sentry/core';\nimport { logger, isNaN, dynamicRequire, loadModule, isNodeEnv } from '@sentry/utils';\nimport { registerErrorInstrumentation } from './errors.js';\nimport { IdleTransaction } from './idletransaction.js';\nimport { Transaction } from './transaction.js';\nimport { hasTracingEnabled } from './utils.js';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  const scope = this.getScope();\n  if (scope) {\n    const span = scope.getSpan();\n    if (span) {\n      return {\n        'sentry-trace': span.toTraceparent(),\n      };\n    }\n  }\n  return {};\n}\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param transaction: The transaction needing a sampling decision\n * @param options: The current client's options, so we can access `tracesSampleRate` and/or `tracesSampler`\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      sampleRate: Number(transaction.sampled),\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n\n  transactionContext,\n  customSamplingContext,\n) {\n  const client = this.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    transactionContext.sampled = false;\n  }\n\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n  heartbeatInterval,\n) {\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  let transaction = new IdleTransaction(transactionContext, hub, idleTimeout, finalTimeout, heartbeatInterval, onScope);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  return transaction;\n}\n\n/**\n * @private\n */\nfunction _addTracingExtensions() {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n}\n\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations() {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n\n  const packageToIntegrationMapping = {\n    mongodb() {\n      const integration = dynamicRequire(module, './integrations/node/mongo')\n\n;\n      return new integration.Mongo();\n    },\n    mongoose() {\n      const integration = dynamicRequire(module, './integrations/node/mongo')\n\n;\n      return new integration.Mongo({ mongoose: true });\n    },\n    mysql() {\n      const integration = dynamicRequire(module, './integrations/node/mysql')\n\n;\n      return new integration.Mysql();\n    },\n    pg() {\n      const integration = dynamicRequire(module, './integrations/node/postgres')\n\n;\n      return new integration.Postgres();\n    },\n  };\n\n  const mappedPackages = Object.keys(packageToIntegrationMapping)\n    .filter(moduleName => !!loadModule(moduleName))\n    .map(pkg => {\n      try {\n        return packageToIntegrationMapping[pkg]();\n      } catch (e) {\n        return undefined;\n      }\n    })\n    .filter(p => p) ;\n\n  if (mappedPackages.length > 0) {\n    carrier.__SENTRY__.integrations = [...(carrier.__SENTRY__.integrations || []), ...mappedPackages];\n  }\n}\n\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nfunction addExtensionMethods() {\n  _addTracingExtensions();\n\n  // Detect and automatically load specified integrations.\n  if (isNodeEnv()) {\n    _autoloadDatabaseIntegrations();\n  }\n\n  // If an error happens globally, we should make sure transaction status is set to error.\n  registerErrorInstrumentation();\n}\n\nexport { _addTracingExtensions, addExtensionMethods, startIdleTransaction };\n//# sourceMappingURL=hubextensions.js.map\n","import { timestampWithMs, logger } from '@sentry/utils';\nimport { SpanRecorder } from './span.js';\nimport { Transaction } from './transaction.js';\n\nconst DEFAULT_IDLE_TIMEOUT = 1000;\nconst DEFAULT_FINAL_TIMEOUT = 30000;\nconst DEFAULT_HEARTBEAT_INTERVAL = 5000;\n\n/**\n * @inheritDoc\n */\nclass IdleTransactionSpanRecorder extends SpanRecorder {\n   constructor(\n      _pushActivity,\n      _popActivity,\n     transactionSpanId,\n    maxlen,\n  ) {\n    super(maxlen);this._pushActivity = _pushActivity;this._popActivity = _popActivity;this.transactionSpanId = transactionSpanId;;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   add(span) {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nclass IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n   __init() {this.activities = {};}\n\n  // Track state of activities in previous heartbeat\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n   __init2() {this._heartbeatCounter = 0;}\n\n  // We should not use heartbeat if we finished a transaction\n   __init3() {this._finished = false;}\n\n    __init4() {this._beforeFinishCallbacks = [];}\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n\n   constructor(\n    transactionContext,\n      _idleHub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n      _idleTimeout = DEFAULT_IDLE_TIMEOUT,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n      _finalTimeout = DEFAULT_FINAL_TIMEOUT,\n      _heartbeatInterval = DEFAULT_HEARTBEAT_INTERVAL,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n      _onScope = false,\n  ) {\n    super(transactionContext, _idleHub);this._idleHub = _idleHub;this._idleTimeout = _idleTimeout;this._finalTimeout = _finalTimeout;this._heartbeatInterval = _heartbeatInterval;this._onScope = _onScope;IdleTransaction.prototype.__init.call(this);IdleTransaction.prototype.__init2.call(this);IdleTransaction.prototype.__init3.call(this);IdleTransaction.prototype.__init4.call(this);;\n\n    if (_onScope) {\n      // There should only be one active transaction on the scope\n      clearActiveTransaction(_idleHub);\n\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n\n    this._startIdleTimeout();\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this.finish();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n   finish(endTimestamp = timestampWithMs()) {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.spanRecorder) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus('cancelled');\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const keepSpan = span.startTimestamp < endTimestamp;\n        if (!keepSpan) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            logger.log(\n              '[Tracing] discarding Span since it happened after Transaction was finished',\n              JSON.stringify(span, undefined, 2),\n            );\n        }\n        return keepSpan;\n      });\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      clearActiveTransaction(this._idleHub);\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n   registerBeforeFinishCallback(callback) {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   initSpanRecorder(maxlen) {\n    if (!this.spanRecorder) {\n      const pushActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idletimeout, if there is one\n   */\n   _cancelIdleTimeout() {\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n    }\n  }\n\n  /**\n   * Creates an idletimeout\n   */\n   _startIdleTimeout(endTimestamp) {\n    this._cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this.finish(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n   _pushActivity(spanId) {\n    this._cancelIdleTimeout();\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n   _popActivity(spanId) {\n    if (this.activities[spanId]) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      // We need to add the timeout here to have the real endtimestamp of the transaction\n      // Remember timestampWithMs is in seconds, timeout is in ms\n      const endTimestamp = timestampWithMs() + this._idleTimeout / 1000;\n      this._startIdleTimeout(endTimestamp);\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n   _beat() {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter++;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n      this.setStatus('deadline_exceeded');\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n   _pingHeartbeat() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, this._heartbeatInterval);\n  }\n}\n\n/**\n * Reset transaction on scope to `undefined`\n */\nfunction clearActiveTransaction(hub) {\n  const scope = hub.getScope();\n  if (scope) {\n    const transaction = scope.getTransaction();\n    if (transaction) {\n      scope.setSpan(undefined);\n    }\n  }\n}\n\nexport { DEFAULT_FINAL_TIMEOUT, DEFAULT_HEARTBEAT_INTERVAL, DEFAULT_IDLE_TIMEOUT, IdleTransaction, IdleTransactionSpanRecorder };\n//# sourceMappingURL=idletransaction.js.map\n","const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n\n  if (!traceparent || !matches) {\n    // empty string or no matches is invalid traceparent data\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\nexport { TRACEPARENT_REGEXP, extractTraceparentData };\n//# sourceMappingURL=tracing.js.map\n","import { isString } from './is.js';\nimport { logger } from './logger.js';\n\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  if (!isString(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      return {\n        ...acc,\n        ...currBaggageObject,\n      };\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\nexport { BAGGAGE_HEADER_NAME, MAX_BAGGAGE_STRING_LENGTH, SENTRY_BAGGAGE_KEY_PREFIX, SENTRY_BAGGAGE_KEY_PREFIX_REGEX, baggageHeaderToDynamicSamplingContext, dynamicSamplingContextToSentryBaggageHeader };\n//# sourceMappingURL=baggage.js.map\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nexport { WINDOW };\n//# sourceMappingURL=types.js.map\n","const bindReporter = (\n  callback,\n  metric,\n  reportAllChanges,\n) => {\n  let prevValue;\n  let delta;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\nexport { bindReporter };\n//# sourceMappingURL=bindReporter.js.map\n","import { WINDOW } from '../../types.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getNavigationEntryFromPerformanceTiming = () => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      navigationEntry[key] = Math.max((timing[key ] ) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry ;\n};\n\nconst getNavigationEntry = () => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n\nexport { getNavigationEntry };\n//# sourceMappingURL=getNavigationEntry.js.map\n","import { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getActivationStart = () => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n\nexport { getActivationStart };\n//# sourceMappingURL=getActivationStart.js.map\n","import { WINDOW } from '../../types.js';\nimport { generateUniqueID } from './generateUniqueID.js';\nimport { getActivationStart } from './getActivationStart.js';\nimport { getNavigationEntry } from './getNavigationEntry.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst initMetric = (name, value) => {\n  const navEntry = getNavigationEntry();\n  let navigationType = 'navigate';\n\n  if (navEntry) {\n    if (WINDOW.document.prerendering || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') ;\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n\nexport { initMetric };\n//# sourceMappingURL=initMetric.js.map\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nconst generateUniqueID = () => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\nexport { generateUniqueID };\n//# sourceMappingURL=generateUniqueID.js.map\n","/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nconst observe = (\n  type,\n  callback,\n  opts,\n) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() );\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) ,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\nexport { observe };\n//# sourceMappingURL=observe.js.map\n","import { WINDOW } from '../../types.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst onHidden = (cb, once) => {\n  const onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || WINDOW.document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n\nexport { onHidden };\n//# sourceMappingURL=onHidden.js.map\n","import { WINDOW } from '../../types.js';\nimport { onHidden } from './onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = () => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  return WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n};\n\nconst trackChanges = () => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nconst getVisibilityWatcher = (\n\n) => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\nexport { getVisibilityWatcher };\n//# sourceMappingURL=getVisibilityWatcher.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getActivationStart } from './lib/getActivationStart.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst reportedMetricIDs = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nconst onLCP = (onReport) => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('LCP');\n  let report;\n\n  const handleEntries = (entries) => {\n    const lastEntry = entries[entries.length - 1] ;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = observe('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = () => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() );\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      addEventListener(type, stopListening, { once: true, capture: true });\n    });\n\n    onHidden(stopListening, true);\n  }\n};\n\nexport { onLCP };\n//# sourceMappingURL=getLCP.js.map\n","/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction _startChild(transaction, { startTimestamp, ...ctx }) {\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n\nexport { _startChild, isMeasurementValue };\n//# sourceMappingURL=utils.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { browserPerformanceTimeOrigin, logger, htmlTreeAsString } from '@sentry/utils';\nimport { getActiveTransaction, msToSec } from '../../utils.js';\nimport { WINDOW } from '../types.js';\nimport { onCLS } from '../web-vitals/getCLS.js';\nimport { onFID } from '../web-vitals/getFID.js';\nimport { onLCP } from '../web-vitals/getLCP.js';\nimport { getVisibilityWatcher } from '../web-vitals/lib/getVisibilityWatcher.js';\nimport { observe } from '../web-vitals/lib/observe.js';\nimport { _startChild, isMeasurementValue } from './utils.js';\n\nfunction getBrowserPerformanceAPI() {\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals\n */\nfunction startTrackingWebVitals() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    _trackCLS();\n    _trackLCP();\n    _trackFID();\n  }\n}\n\n/**\n * Start tracking long tasks.\n */\nfunction startTrackingLongTasks() {\n  const entryHandler = (entries) => {\n    for (const entry of entries) {\n      const transaction = getActiveTransaction() ;\n      if (!transaction) {\n        return;\n      }\n      const startTime = msToSec((browserPerformanceTimeOrigin ) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      transaction.startChild({\n        description: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        startTimestamp: startTime,\n        endTimestamp: startTime + duration,\n      });\n    }\n  };\n\n  observe('longtask', entryHandler);\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  // See:\n  // https://web.dev/evolving-cls/\n  // https://web.dev/cls-web-tooling/\n  onCLS(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry ;\n  });\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP() {\n  onLCP(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry ;\n  });\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  onFID(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin );\n    const startTime = msToSec(entry.startTime);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(transaction) {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !WINDOW.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  let responseStartTimestamp;\n  let requestStartTimestamp;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n        requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        const resourceName = (entry.name ).replace(WINDOW.location.origin, '');\n        _addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n        break;\n      }\n      default:\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (transaction.op === 'pageload') {\n    // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n    // start of the response in milliseconds\n    if (typeof responseStartTimestamp === 'number') {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding TTFB');\n      _measurements['ttfb'] = {\n        value: (responseStartTimestamp - transaction.startTimestamp) * 1000,\n        unit: 'millisecond',\n      };\n\n      if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n        // Capture the time spent making the request and receiving the first byte of the response.\n        // This is the time between the start of the request and the start of the response in milliseconds.\n        _measurements['ttfb.requestTime'] = {\n          value: (responseStartTimestamp - requestStartTimestamp) * 1000,\n          unit: 'millisecond',\n        };\n      }\n    }\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || timeOrigin >= transaction.startTimestamp) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      _startChild(transaction, {\n        description: 'first input delay',\n        endTimestamp: fidMark.value + msToSec(_measurements['fid'].value),\n        op: 'ui.action',\n        startTimestamp: fidMark.value,\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      transaction.setMeasurement(\n        measurementName,\n        _measurements[measurementName].value,\n        _measurements[measurementName].unit,\n      );\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name ,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType ,\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(transaction, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  event,\n  timeOrigin,\n  description,\n  eventEnd,\n) {\n  const end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  const start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    description: _nullishCoalesce(description, () => ( event)),\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(transaction, entry, timeOrigin) {\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'request',\n    startTimestamp: timeOrigin + msToSec(entry.requestStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n\n  _startChild(transaction, {\n    op: 'browser',\n    description: 'response',\n    startTimestamp: timeOrigin + msToSec(entry.responseStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  transaction,\n  entry,\n  resourceName,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const data = {};\n  if ('transferSize' in entry) {\n    data['Transfer Size'] = entry.transferSize;\n  }\n  if ('encodedBodySize' in entry) {\n    data['Encoded Body Size'] = entry.encodedBodySize;\n  }\n  if ('decodedBodySize' in entry) {\n    data['Decoded Body Size'] = entry.decodedBodySize;\n  }\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceName,\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction) {\n  const navigator = WINDOW.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction) {\n  if (_lcpEntry) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      transaction.setTag('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nexport { _addMeasureSpans, _addResourceSpans, addPerformanceEntries, startTrackingLongTasks, startTrackingWebVitals };\n//# sourceMappingURL=index.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the [CLS](https://web.dev/cls/) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/cls/#layout-shift-score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onCLS = (onReport) => {\n  const metric = initMetric('CLS', 0);\n  let report;\n\n  let sessionValue = 0;\n  let sessionEntries = [];\n\n  // const handleEntries = (entries: Metric['entries']) => {\n  const handleEntries = (entries) => {\n    entries.forEach(entry => {\n      // Only count layout shifts without recent user input.\n      if (!entry.hadRecentInput) {\n        const firstSessionEntry = sessionEntries[0];\n        const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n        // If the entry occurred less than 1 second after the previous entry and\n        // less than 5 seconds after the first entry in the session, include the\n        // entry in the current session. Otherwise, start a new session.\n        if (\n          sessionValue &&\n          sessionEntries.length !== 0 &&\n          entry.startTime - lastSessionEntry.startTime < 1000 &&\n          entry.startTime - firstSessionEntry.startTime < 5000\n        ) {\n          sessionValue += entry.value;\n          sessionEntries.push(entry);\n        } else {\n          sessionValue = entry.value;\n          sessionEntries = [entry];\n        }\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          if (report) {\n            report();\n          }\n        }\n      }\n    });\n  };\n\n  const po = observe('layout-shift', handleEntries);\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    onHidden(() => {\n      handleEntries(po.takeRecords() );\n      report(true);\n    });\n  }\n};\n\nexport { onCLS };\n//# sourceMappingURL=getCLS.js.map\n","import { bindReporter } from './lib/bindReporter.js';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher.js';\nimport { initMetric } from './lib/initMetric.js';\nimport { observe } from './lib/observe.js';\nimport { onHidden } from './lib/onHidden.js';\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the [FID](https://web.dev/fid/) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nconst onFID = (onReport) => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('FID');\n  // eslint-disable-next-line prefer-const\n  let report;\n\n  const handleEntry = (entry) => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  const handleEntries = (entries) => {\n    (entries ).forEach(handleEntry);\n  };\n\n  const po = observe('first-input', handleEntries);\n  report = bindReporter(onReport, metric);\n\n  if (po) {\n    onHidden(() => {\n      handleEntries(po.takeRecords() );\n      po.disconnect();\n    }, true);\n  }\n};\n\nexport { onFID };\n//# sourceMappingURL=getFID.js.map\n","import { addInstrumentationHandler, stringMatchesSomePattern, dynamicSamplingContextToSentryBaggageHeader, isInstanceOf, BAGGAGE_HEADER_NAME } from '@sentry/utils';\nimport { hasTracingEnabled, getActiveTransaction } from '../utils.js';\n\nconst DEFAULT_TRACE_PROPAGATION_TARGETS = ['localhost', /^\\//];\n\n/** Options for Request Instrumentation */\n\nconst defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  // TODO (v8): Remove this property\n  tracingOrigins: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  tracePropagationTargets: DEFAULT_TRACE_PROPAGATION_TARGETS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceFetch, traceXHR, tracePropagationTargets, tracingOrigins, shouldCreateSpanForRequest } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_) => true;\n\n  // TODO(v8) Remove tracingOrigins here\n  // The only reason we're passing it in here is because this instrumentOutgoingRequests function is publicly exported\n  // and we don't want to break the API. We can remove it in v8.\n  const shouldAttachHeadersWithTargets = (url) =>\n    shouldAttachHeaders(url, tracePropagationTargets || tracingOrigins);\n\n  const spans = {};\n\n  if (traceFetch) {\n    addInstrumentationHandler('fetch', (handlerData) => {\n      fetchCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n    });\n  }\n\n  if (traceXHR) {\n    addInstrumentationHandler('xhr', (handlerData) => {\n      xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n    });\n  }\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * This was extracted from `instrumentOutgoingRequests` to make it easier to test shouldAttachHeaders.\n * We only export this fuction for testing purposes.\n */\nfunction shouldAttachHeaders(url, tracePropagationTargets) {\n  return stringMatchesSomePattern(url, tracePropagationTargets || DEFAULT_TRACE_PROPAGATION_TARGETS);\n}\n\n/**\n * Create and track fetch request spans\n */\nfunction fetchCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  if (!hasTracingEnabled() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n    return;\n  }\n\n  if (handlerData.endTimestamp) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      if (handlerData.response) {\n        // TODO (kmclb) remove this once types PR goes through\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        span.setHttpStatus(handlerData.response.status);\n      } else if (handlerData.error) {\n        span.setStatus('internal_error');\n      }\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return;\n  }\n\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const span = activeTransaction.startChild({\n      data: {\n        ...handlerData.fetchData,\n        type: 'fetch',\n      },\n      description: `${handlerData.fetchData.method} ${handlerData.fetchData.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.fetchData.__span = span.spanId;\n    spans[span.spanId] = span;\n\n    const request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options = handlerData.args[1];\n\n    if (shouldAttachHeaders(handlerData.fetchData.url)) {\n      options.headers = addTracingHeadersToFetchRequest(\n        request,\n        activeTransaction.getDynamicSamplingContext(),\n        span,\n        options,\n      );\n\n      activeTransaction.metadata.propagations++;\n    }\n  }\n}\n\nfunction addTracingHeadersToFetchRequest(\n  request,\n  dynamicSamplingContext,\n  span,\n  options\n\n,\n) {\n  const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n  const sentryTraceHeader = span.toTraceparent();\n\n  const headers =\n    typeof Request !== 'undefined' && isInstanceOf(request, Request) ? (request ).headers : options.headers;\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && isInstanceOf(headers, Headers)) {\n    const newHeaders = new Headers(headers );\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended miultiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders ;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers ),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\n/**\n * Create and track xhr request spans\n */\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  if (\n    !hasTracingEnabled() ||\n    (handlerData.xhr && handlerData.xhr.__sentry_own_request__) ||\n    !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))\n  ) {\n    return;\n  }\n\n  const xhr = handlerData.xhr.__sentry_xhr__;\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp) {\n    const spanId = handlerData.xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      span.setHttpStatus(xhr.status_code);\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return;\n  }\n\n  // if not, create a new span to track it\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const span = activeTransaction.startChild({\n      data: {\n        ...xhr.data,\n        type: 'xhr',\n        method: xhr.method,\n        url: xhr.url,\n      },\n      description: `${xhr.method} ${xhr.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n    spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n\n    if (handlerData.xhr.setRequestHeader && shouldAttachHeaders(handlerData.xhr.__sentry_xhr__.url)) {\n      try {\n        handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n\n        const dynamicSamplingContext = activeTransaction.getDynamicSamplingContext();\n        const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n\n        if (sentryBaggageHeader) {\n          // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n          // We can therefore simply set a baggage header without checking what was there before\n          // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n          handlerData.xhr.setRequestHeader(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n        }\n\n        activeTransaction.metadata.propagations++;\n      } catch (_) {\n        // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n      }\n    }\n  }\n}\n\nexport { DEFAULT_TRACE_PROPAGATION_TARGETS, defaultRequestInstrumentationOptions, fetchCallback, instrumentOutgoingRequests, shouldAttachHeaders, xhrCallback };\n//# sourceMappingURL=request.js.map\n","import { _nullishCoalesce, _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { logger, extractTraceparentData, baggageHeaderToDynamicSamplingContext, getDomElement } from '@sentry/utils';\nimport { startIdleTransaction } from '../hubextensions.js';\nimport { DEFAULT_IDLE_TIMEOUT, DEFAULT_FINAL_TIMEOUT, DEFAULT_HEARTBEAT_INTERVAL } from '../idletransaction.js';\nimport '../utils.js';\nimport { registerBackgroundTabDetection } from './backgroundtab.js';\nimport { startTrackingWebVitals, startTrackingLongTasks, addPerformanceEntries } from './metrics/index.js';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request.js';\nimport { instrumentRoutingWithDefaults } from './router.js';\nimport { WINDOW } from './types.js';\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  idleTimeout: DEFAULT_IDLE_TIMEOUT,\n  finalTimeout: DEFAULT_FINAL_TIMEOUT,\n  heartbeatInterval: DEFAULT_HEARTBEAT_INTERVAL,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  _experiments: { enableLongTask: true, enableInteractions: false },\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nclass BrowserTracing  {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = BROWSER_TRACING_INTEGRATION_ID;}\n\n   constructor(_options) {;BrowserTracing.prototype.__init.call(this);\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n    };\n\n    // TODO (v8): remove this block after tracingOrigins is removed\n    // Set tracePropagationTargets to tracingOrigins if specified by the user\n    // In case both are specified, tracePropagationTargets takes precedence\n    // eslint-disable-next-line deprecation/deprecation\n    if (_options && !_options.tracePropagationTargets && _options.tracingOrigins) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.options.tracePropagationTargets = _options.tracingOrigins;\n    }\n\n    startTrackingWebVitals();\n    if (_optionalChain([this, 'access', _2 => _2.options, 'access', _3 => _3._experiments, 'optionalAccess', _4 => _4.enableLongTask])) {\n      startTrackingLongTasks();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    this._getCurrentHub = getCurrentHub;\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n      _experiments,\n    } = this.options;\n\n    instrumentRouting(\n      (context) => this._createRouteTransaction(context),\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    if (_optionalChain([_experiments, 'optionalAccess', _5 => _5.enableInteractions])) {\n      this._registerInteractionListener();\n    }\n\n    instrumentOutgoingRequests({\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n    });\n  }\n\n  /** Create routing idle transaction. */\n   _createRouteTransaction(context) {\n    if (!this._getCurrentHub) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeNavigate, idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    const sentryTraceMetaTagValue = isPageloadTransaction ? getMetaContent('sentry-trace') : null;\n    const baggageMetaTagValue = isPageloadTransaction ? getMetaContent('baggage') : null;\n\n    const traceParentData = sentryTraceMetaTagValue ? extractTraceparentData(sentryTraceMetaTagValue) : undefined;\n    const dynamicSamplingContext = baggageMetaTagValue\n      ? baggageHeaderToDynamicSamplingContext(baggageMetaTagValue)\n      : undefined;\n\n    const expandedContext = {\n      ...context,\n      ...traceParentData,\n      metadata: {\n        ...context.metadata,\n        dynamicSamplingContext: traceParentData && !dynamicSamplingContext ? {} : dynamicSamplingContext,\n      },\n      trimEnd: true,\n    };\n\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? { ...finalContext.metadata, source: 'custom' }\n        : finalContext.metadata;\n\n    this._latestRouteName = finalContext.name;\n    this._latestRouteSource = _optionalChain([finalContext, 'access', _6 => _6.metadata, 'optionalAccess', _7 => _7.source]);\n\n    if (finalContext.sampled === false) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const hub = this._getCurrentHub();\n    const { location } = WINDOW;\n\n    const idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n    );\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      addPerformanceEntries(transaction);\n    });\n\n    return idleTransaction ;\n  }\n\n  /** Start listener for interaction transactions */\n   _registerInteractionListener() {\n    let inflightInteractionTransaction;\n    const registerInteractionTransaction = () => {\n      const { idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n      const op = 'ui.action.click';\n      if (inflightInteractionTransaction) {\n        inflightInteractionTransaction.finish();\n        inflightInteractionTransaction = undefined;\n      }\n\n      if (!this._getCurrentHub) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`[Tracing] Did not create ${op} transaction because _getCurrentHub is invalid.`);\n        return undefined;\n      }\n\n      if (!this._latestRouteName) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n\n      const hub = this._getCurrentHub();\n      const { location } = WINDOW;\n\n      const context = {\n        name: this._latestRouteName,\n        op,\n        trimEnd: true,\n        metadata: {\n          source: _nullishCoalesce(this._latestRouteSource, () => ( 'url')),\n        },\n      };\n\n      inflightInteractionTransaction = startIdleTransaction(\n        hub,\n        context,\n        idleTimeout,\n        finalTimeout,\n        true,\n        { location }, // for use in the tracesSampler\n        heartbeatInterval,\n      );\n    };\n\n    ['click'].forEach(type => {\n      addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n    });\n  }\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : null;\n}\n\nexport { BROWSER_TRACING_INTEGRATION_ID, BrowserTracing, getMetaContent };\n//# sourceMappingURL=browsertracing.js.map\n","import { logger, addInstrumentationHandler } from '@sentry/utils';\nimport { WINDOW } from './types.js';\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nfunction instrumentRoutingWithDefaults(\n  customStartTransaction,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  if (!WINDOW || !WINDOW.location) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl = WINDOW.location.href;\n\n  let activeTransaction;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: WINDOW.location.pathname,\n      op: 'pageload',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addInstrumentationHandler('history', ({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.finish();\n        }\n        activeTransaction = customStartTransaction({\n          name: WINDOW.location.pathname,\n          op: 'navigation',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n\nexport { instrumentRoutingWithDefaults };\n//# sourceMappingURL=router.js.map\n","import { logger } from '@sentry/utils';\nimport { getActiveTransaction } from '../utils.js';\nimport { WINDOW } from './types.js';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (WINDOW && WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = getActiveTransaction() ;\n      if (WINDOW.document.hidden && activeTransaction) {\n        const statusType = 'cancelled';\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\nexport { registerBackgroundTabDetection };\n//# sourceMappingURL=backgroundtab.js.map\n","import { addExtensionMethods } from './hubextensions.js';\nexport { addExtensionMethods, startIdleTransaction } from './hubextensions.js';\nimport * as index from './integrations/index.js';\nexport { index as Integrations };\nimport './browser/index.js';\nexport { Span, spanStatusfromHttpCode } from './span.js';\nexport { SpanStatus } from './spanstatus.js';\nexport { Transaction } from './transaction.js';\nexport { IdleTransaction } from './idletransaction.js';\nexport { getActiveTransaction, hasTracingEnabled } from './utils.js';\nexport { BROWSER_TRACING_INTEGRATION_ID, BrowserTracing } from './browser/browsertracing.js';\nexport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './browser/request.js';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, stripUrlQueryAndFragment } from '@sentry/utils';\n\n;\n;\n\n// Treeshakable guard to remove all code related to tracing\n\n// Guard for tree\nif (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n  // We are patching the global object with our hub extension methods\n  addExtensionMethods();\n}\n//# sourceMappingURL=index.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { uuid4, timestampWithMs, logger, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n   __init() {this.spans = [];}\n\n   constructor(maxlen = 1000) {;SpanRecorder.prototype.__init.call(this);\n    this._maxlen = maxlen;\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * @inheritDoc\n   */\n   __init2() {this.traceId = uuid4();}\n\n  /**\n   * @inheritDoc\n   */\n   __init3() {this.spanId = uuid4().substring(16);}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Internal keeper of the status\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n   __init4() {this.startTimestamp = timestampWithMs();}\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   __init5() {this.tags = {};}\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   __init6() {this.data = {};}\n\n  /**\n   * List of spans that were finalized\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * The instrumenter that created this span.\n   */\n   __init7() {this.instrumenter = 'sentry';}\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext) {;Span.prototype.__init2.call(this);Span.prototype.__init3.call(this);Span.prototype.__init4.call(this);Span.prototype.__init5.call(this);Span.prototype.__init6.call(this);Span.prototype.__init7.call(this);\n    if (!spanContext) {\n      return this;\n    }\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n    if (spanContext.instrumenter) {\n      this.instrumenter = spanContext.instrumenter;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startChild(\n    spanContext,\n  ) {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && childSpan.transaction) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = childSpan.transaction.name || '< unknown name >';\n      const idStr = childSpan.transaction.spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      childSpan.transaction.metadata.spanMetadata[childSpan.spanId] = { logMessage };\n      logger.log(logMessage);\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   setData(key, value) {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setHttpStatus(httpStatus) {\n    this.setTag('http.status_code', String(httpStatus));\n    const spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isSuccess() {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    if (\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      // Don't call this for transactions\n      this.transaction &&\n      this.transaction.spanId !== this.spanId\n    ) {\n      const { logMessage } = this.transaction.metadata.spanMetadata[this.spanId];\n      if (logMessage) {\n        logger.log((logMessage ).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toTraceparent() {\n    let sampledString = '';\n    if (this.sampled !== undefined) {\n      sampledString = this.sampled ? '-1' : '-0';\n    }\n    return `${this.traceId}-${this.spanId}${sampledString}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    return dropUndefinedKeys({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(spanContext) {\n    this.data = _nullishCoalesce(spanContext.data, () => ( {}));\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = _nullishCoalesce(spanContext.spanId, () => ( this.spanId));\n    this.startTimestamp = _nullishCoalesce(spanContext.startTimestamp, () => ( this.startTimestamp));\n    this.status = spanContext.status;\n    this.tags = _nullishCoalesce(spanContext.tags, () => ( {}));\n    this.traceId = _nullishCoalesce(spanContext.traceId, () => ( this.traceId));\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTraceContext()\n\n {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toJSON()\n\n {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n    });\n  }\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction spanStatusfromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\nexport { Span, SpanRecorder, spanStatusfromHttpCode };\n//# sourceMappingURL=span.js.map\n","import { _nullishCoalesce } from '@sentry/utils/esm/buildPolyfills';\nimport { getCurrentHub } from '@sentry/core';\nimport { timestampInSeconds, logger, dropUndefinedKeys } from '@sentry/utils';\nimport { Span, SpanRecorder } from './span.js';\n\n/** JSDoc */\nclass Transaction extends Span  {\n\n  /**\n   * The reference to the current hub.\n   */\n\n   __init() {this._measurements = {};}\n\n   __init2() {this._contexts = {};}\n\n   __init3() {this._frozenDynamicSamplingContext = undefined;}\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(transactionContext, hub) {\n    super(transactionContext);Transaction.prototype.__init.call(this);Transaction.prototype.__init2.call(this);Transaction.prototype.__init3.call(this);;\n\n    this._hub = hub || getCurrentHub();\n\n    this._name = transactionContext.name || '';\n\n    this.metadata = {\n      source: 'custom',\n      ...transactionContext.metadata,\n      spanMetadata: {},\n      changes: [],\n      propagations: 0,\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this.metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  /** Getter for `name` property */\n   get name() {\n    return this._name;\n  }\n\n  /** Setter for `name` property, which also sets `source` as custom */\n   set name(newName) {\n    this.setName(newName);\n  }\n\n  /**\n   * JSDoc\n   */\n   setName(name, source = 'custom') {\n    // `source` could change without the name changing if we discover that an unparameterized route is actually\n    // parameterized by virtue of having no parameters in its path\n    if (name !== this.name || source !== this.metadata.source) {\n      this.metadata.changes.push({\n        // log previous source\n        source: this.metadata.source,\n        timestamp: timestampInSeconds(),\n        propagations: this.metadata.propagations,\n      });\n    }\n\n    this._name = name;\n    this.metadata.source = source;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMetadata(newMetadata) {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      const client = this._hub.getClient();\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    const finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev, current) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    const metadata = this.metadata;\n\n    const transaction = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        dynamicSamplingContext: this.getDynamicSamplingContext(),\n      },\n      ...(metadata.source && {\n        transaction_info: {\n          source: metadata.source,\n          changes: metadata.changes,\n          propagations: metadata.propagations,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    const spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    super.updateWithContext(transactionContext);\n\n    this.name = _nullishCoalesce(transactionContext.name, () => ( ''));\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   */\n   getDynamicSamplingContext() {\n    if (this._frozenDynamicSamplingContext) {\n      return this._frozenDynamicSamplingContext;\n    }\n\n    const hub = this._hub || getCurrentHub();\n    const client = hub && hub.getClient();\n\n    if (!client) return {};\n\n    const { environment, release } = client.getOptions() || {};\n    const { publicKey: public_key } = client.getDsn() || {};\n\n    const maybeSampleRate = this.metadata.sampleRate;\n    const sample_rate = maybeSampleRate !== undefined ? maybeSampleRate.toString() : undefined;\n\n    const scope = hub.getScope();\n    const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n    const source = this.metadata.source;\n\n    // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n    const transaction = source && source !== 'url' ? this.name : undefined;\n\n    const dsc = dropUndefinedKeys({\n      environment,\n      release,\n      transaction,\n      user_segment,\n      public_key,\n      trace_id: this.traceId,\n      sample_rate,\n    });\n\n    // Uncomment if we want to make DSC immutable\n    // this._frozenDynamicSamplingContext = dsc;\n\n    return dsc;\n  }\n}\n\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map\n","import { getCurrentHub } from '@sentry/core';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, stripUrlQueryAndFragment } from '@sentry/utils';\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  const client = getCurrentHub().getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && ('tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(maybeHub) {\n  const hub = maybeHub || getCurrentHub();\n  const scope = hub.getScope();\n  return scope && (scope.getTransaction() );\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\n/**\n * Converts from seconds to milliseconds\n * @param time time in seconds\n */\nfunction secToMs(time) {\n  return time * 1000;\n}\n\nexport { getActiveTransaction, hasTracingEnabled, msToSec, secToMs };\n//# sourceMappingURL=utils.js.map\n","import { isString } from './is.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\nexport { getDomElement, getLocationHref, htmlTreeAsString };\n//# sourceMappingURL=browser.js.map\n","/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\nexport { _nullishCoalesce };\n//# sourceMappingURL=_nullishCoalesce.js.map\n","/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexport { _optionalChain };\n//# sourceMappingURL=_optionalChain.js.map\n","import { isInstanceOf, isString } from './is.js';\nimport { logger, CONSOLE_LEVELS } from './logger.js';\nimport { fill } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\nimport { supportsNativeFetch, supportsHistory } from './supports.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers = {};\nconst instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in WINDOW)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in WINDOW.console)) {\n      return;\n    }\n\n    fill(WINDOW.console, level, function (originalConsoleMethod) {\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(WINDOW.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(WINDOW, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(WINDOW, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs = []) {\n  if ('Request' in WINDOW && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs = []) {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in WINDOW && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\nfunction instrumentXHR() {\n  if (!('XMLHttpRequest' in WINDOW)) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const url = args[1];\n      const xhrInfo = (xhr.__sentry_xhr__ = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = function () {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhr.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        fill(xhr, 'onreadystatechange', function (original) {\n          return function (...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      if (this.__sentry_xhr__ && args[0] !== undefined) {\n        this.__sentry_xhr__.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!('document' in WINDOW)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW )[target] && (WINDOW )[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n\n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this ;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n\n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this ;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = WINDOW.onerror;\n\n  WINDOW.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = WINDOW.onunhandledrejection;\n\n  WINDOW.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n\nexport { addInstrumentationHandler };\n//# sourceMappingURL=instrument.js.map\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };\n//# sourceMappingURL=is.js.map\n","import { GLOBAL_OBJ, getGlobalSingleton } from './worldwide.js';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const originalConsole = GLOBAL_OBJ.console ;\n  const wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in originalConsole && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","import { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  const getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These fags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\nexport { isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(\n  value,\n)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","import { _optionalChain } from './buildPolyfills';\n\nconst STACKTRACE_LIMIT = 50;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    const frames = [];\n\n    for (const line of stack.split('\\n').slice(skipFirst)) {\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = line.replace(/\\(error: (.*)\\)/, '$1');\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].function || '';\n  const lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n// eslint-disable-next-line complexity\nfunction node(getModule) {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line) => {\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    const lineMatch = line.match(FULL_MATCH);\n    if (!lineMatch) {\n      return undefined;\n    }\n\n    let object;\n    let method;\n    let functionName;\n    let typeName;\n    let methodName;\n\n    if (lineMatch[1]) {\n      functionName = lineMatch[1];\n\n      let methodStart = functionName.lastIndexOf('.');\n      if (functionName[methodStart - 1] === '.') {\n        methodStart--;\n      }\n\n      if (methodStart > 0) {\n        object = functionName.substr(0, methodStart);\n        method = functionName.substr(methodStart + 1);\n        const objectEnd = object.indexOf('.Module');\n        if (objectEnd > 0) {\n          functionName = functionName.substr(objectEnd + 1);\n          object = object.substr(0, objectEnd);\n        }\n      }\n      typeName = undefined;\n    }\n\n    if (method) {\n      typeName = object;\n      methodName = method;\n    }\n\n    if (method === '<anonymous>') {\n      methodName = undefined;\n      functionName = undefined;\n    }\n\n    if (functionName === undefined) {\n      methodName = methodName || '<anonymous>';\n      functionName = typeName ? `${typeName}.${methodName}` : methodName;\n    }\n\n    const filename = _optionalChain([lineMatch, 'access', _ => _[2], 'optionalAccess', _2 => _2.startsWith, 'call', _3 => _3('file://')]) ? lineMatch[2].substr(7) : lineMatch[2];\n    const isNative = lineMatch[5] === 'native';\n    const isInternal =\n      isNative || (filename && !filename.startsWith('/') && !filename.startsWith('.') && filename.indexOf(':\\\\') !== 1);\n\n    // in_app is all that's not an internal Node function or a module within node_modules\n    // note that isNative appears to return true even for node core libraries\n    // see https://github.com/getsentry/raven-node/issues/176\n    const in_app = !isInternal && filename !== undefined && !filename.includes('node_modules/');\n\n    return {\n      filename,\n      module: _optionalChain([getModule, 'optionalCall', _4 => _4(filename)]),\n      function: functionName,\n      lineno: parseInt(lineMatch[3], 10) || undefined,\n      colno: parseInt(lineMatch[4], 10) || undefined,\n      in_app,\n    };\n  };\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nexport { createStackParser, getFunctionName, nodeStackLineParser, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { isString, isRegExp } from './is.js';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * Based on https://github.com/sindresorhus/escape-string-regexp. Vendored to a) reduce the size by skipping the runtime\n * type-checking, and b) ensure it gets down-compiled for old versions of Node (the published package only supports Node\n * 12+).\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\nexport { escapeStringForRegex, isMatchingPattern, safeJoin, snipLine, stringMatchesSomePattern, truncate };\n//# sourceMappingURL=string.js.map\n","import { logger } from './logger.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (WINDOW ).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { isNativeFetch, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsHistory, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n\n   constructor(\n    executor,\n  ) {;SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { dynamicRequire, isNodeEnv } from './node.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nconst dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nconst usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { GLOBAL_OBJ, getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=worldwide.js.map\n"],"sourceRoot":""}