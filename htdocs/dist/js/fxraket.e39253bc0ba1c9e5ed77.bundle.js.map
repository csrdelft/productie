{"version":3,"sources":["webpack:///./js/lib/util.ts","webpack:///./js/entry/fxraket.ts"],"names":["ontstuiter","func","wait","immediate","timeout","args","callNow","clearTimeout","window","setTimeout","undefined","apply","this","UVo","document","body","classList","contains","add","remove","addEventListener","startAnimatie","passive","stopAnimatie","start"],"mappings":"mBA6LO,SAASA,EAAWC,EAAMC,EAAMC,GACnC,IAAIC,EACJ,OAAO,YAAaC,GAChB,MAMMC,EAAUH,IAAcC,EAC9BG,aAAaH,GACbA,EAAUI,OAAOC,YARH,KACVL,OAAUM,EACLP,GACDF,EAAKU,MAAMC,KAAMP,KAKUH,GAC/BI,GACAL,EAAKU,MAAMC,KAAMP,ICvM7B,MAAMQ,EACF,uBACSC,SAASC,KAAKC,UAAUC,SAAS,cAClCH,SAASC,KAAKC,UAAUE,IAAI,aAGpC,sBACQJ,SAASC,KAAKC,UAAUC,SAAS,cACjCH,SAASC,KAAKC,UAAUG,OAAO,aAGvC,QACIX,OAAOY,iBAAiB,SAAUpB,EAAWa,EAAIQ,cAAe,KAAK,GAAO,CAAEC,SAAS,IACvFd,OAAOY,iBAAiB,SAAUpB,EAAWa,EAAIU,aAAc,KAAK,GAAQ,CAAED,SAAS,MAG/F,IAAIT,GAAMW,S","file":"js/fxraket.e39253bc0ba1c9e5ed77.bundle.js","sourcesContent":["/**\n * Selecteer de tekst van een DOM-element.\n * @source http://stackoverflow.com/questions/985272/\n *\n * @see templates/fotoalbum/album.tpl\n */\nexport function selectText(elmnt) {\n    const selection = window.getSelection();\n    if (!selection) {\n        throw new Error(\"Geen getSelection in window\");\n    }\n    const range = document.createRange();\n    range.selectNodeContents(elmnt);\n    selection.removeAllRanges();\n    selection.addRange(range);\n}\n/**\n *  discuss at: http://phpjs.org/functions/dirname/\n * original by: Ozh\n * improved by: XoraX (http://www.xorax.info)\n *   example 1: dirname('/etc/passwd');\n *   returns 1: '/etc'\n *   example 2: dirname('c:/Temp/x');\n *   returns 2: 'c:/Temp'\n *   example 3: dirname('/dir/test/');\n *   returns 3: '/dir'\n */\nexport function dirname(path) {\n    return path.replace(/\\\\/g, '/')\n        .replace(/\\/[^/]*\\/?$/, '');\n}\nexport function basename(path, suffix = '') {\n    //  discuss at: http://phpjs.org/functions/basename/\n    // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // improved by: Ash Searle (http://hexmen.com/blog/)\n    // improved by: Lincoln Ramsay\n    // improved by: djmix\n    // improved by: Dmitry Gorelenkov\n    //   example 1: basename('/www/site/home.htm', '.htm');\n    //   returns 1: 'home'\n    //   example 2: basename('ecra.php?p=1');\n    //   returns 2: 'ecra.php?p=1'\n    //   example 3: basename('/some/path/');\n    //   returns 3: 'path'\n    //   example 4: basename('/some/path_ext.ext/','.ext');\n    //   returns 4: 'path_ext'\n    let base = path;\n    const lastChar = base.charAt(base.length - 1);\n    if (lastChar === '/' || lastChar === '\\\\') {\n        base = base.slice(0, -1);\n    }\n    base = base.replace(/^.*[/\\\\]/g, '');\n    if (suffix !== '' && base.substr(base.length - suffix.length) === suffix) {\n        base = base.substr(0, base.length - suffix.length);\n    }\n    return base;\n}\nexport function route(path, cb) {\n    if (window.location.pathname.startsWith(path)) {\n        cb();\n    }\n}\n/**\n * Verwerk een multipliciteit in de vorm van `== 1` of `!= 0` of `> 3` voor de selecties\n */\nexport function evaluateMultiplicity(expression, num) {\n    // Altijd laten zien bij geen expressie\n    if (expression.length === 0) {\n        return true;\n    }\n    const [expressionOperator, expressionAantalString] = expression.split(' ');\n    const expressionAantal = parseInt(expressionAantalString, 10);\n    const mapOperationToFunction = {\n        '!=': (a, b) => a !== b,\n        '<': (a, b) => a < b,\n        '<=': (a, b) => a <= b,\n        '==': (a, b) => a === b,\n        '>': (a, b) => a > b,\n        '>=': (a, b) => a >= b,\n    };\n    return mapOperationToFunction[expressionOperator](num, expressionAantal);\n}\nexport function formatFilesize(data) {\n    const units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let i = 0;\n    let size = Number(data);\n    while (size >= 1024) {\n        size /= 1024;\n        ++i;\n    }\n    return size.toFixed(1) + ' ' + units[i];\n}\nexport function formatBedrag(data) {\n    if (data > 0) {\n        return '€' + (data / 100).toFixed(2);\n    }\n    else {\n        return '-€' + (data / -100).toFixed(2);\n    }\n}\nexport function singleLineString(strings, ...values) {\n    // Interweave the strings with the\n    // substitution vars first.\n    let output = '';\n    for (let i = 0; i < values.length; i++) {\n        output += strings[i] + values[i];\n    }\n    output += strings[values.length];\n    // Split on newlines.\n    const lines = output.split(/(?:\\r\\n|\\n|\\r)/);\n    // Rip out the leading whitespace.\n    return lines.map((line) => line.replace(/^\\s+/gm, '')).join(' ').trim();\n}\nexport function html(strings, ...values) {\n    let output = '';\n    const nodes = [];\n    for (let i = 0; i < values.length; i++) {\n        output += strings[i];\n        const value = values[i];\n        if (value instanceof Node) {\n            output += `<div id=\"_node_html_${i}\"></div>`;\n            nodes.push([`_node_html_${i}`, value]);\n        }\n        else {\n            output += value;\n        }\n    }\n    output += strings[values.length];\n    const element = document.createElement(\"div\");\n    element.innerHTML = output;\n    for (const [id, node] of nodes) {\n        element.querySelector(`#${id}`).replaceWith(node);\n    }\n    return element.firstElementChild;\n}\nexport function htmlParse(htmlString) {\n    return jQuery.parseHTML(htmlString, null, true);\n}\nexport function preloadImage(url) {\n    return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.src = url;\n        img.onload = resolve;\n        img.onerror = reject;\n    });\n}\n/**\n * Maak een bestand van een base64 string\n * @param str\n * @param fileName\n */\nexport async function base64toFile(str, fileName) {\n    const res = await fetch(str);\n    const blob = await res.blob();\n    const extension = blob.type.split(\"/\").pop();\n    return new File([blob], `${fileName}.${extension}`, { type: blob.type });\n}\nexport function parseData(el) {\n    const data = el.dataset;\n    const out = {};\n    for (const item of Object.keys(data)) {\n        if (data[item] === 'false') {\n            out[item] = false;\n        }\n        else if (data[item] === 'true') {\n            out[item] = true;\n        }\n        else if (!isNaN(Number(data[item]))) {\n            out[item] = Number(data[item]);\n        }\n        else {\n            out[item] = data[item];\n        }\n    }\n    return out;\n}\nexport function htmlDecode(str) {\n    const txt = document.createElement(\"textarea\");\n    txt.innerHTML = str;\n    return txt.value;\n}\nexport function htmlEncode(str) {\n    return String(str)\n        .replace(/&/g, '&amp;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nexport function ontstuiter(func, wait, immediate) {\n    let timeout;\n    return function (...args) {\n        const later = () => {\n            timeout = undefined;\n            if (!immediate) {\n                func.apply(this, args);\n            }\n        };\n        const callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = window.setTimeout(later, wait);\n        if (callNow) {\n            func.apply(this, args);\n        }\n    };\n}\nexport function docReady(fn) {\n    if (document.readyState === 'complete' || document.readyState === 'interactive') {\n        fn();\n    }\n    else {\n        document.addEventListener('DOMContentLoaded', fn);\n    }\n}\nexport function isLoggedIn() {\n    const elem = document.querySelector('meta[property=\\'X-CSR-LOGGEDIN\\']');\n    if (!elem) {\n        return false;\n    }\n    return elem.getAttribute('content') === 'true';\n}\nexport function throwError(message) {\n    throw new Error(message);\n}\n/**\n * Voer de meegegeven functie éénmaal uit.\n * @param func\n */\nexport const once = (func) => {\n    let called = false;\n    let returnValue;\n    return (...args) => {\n        if (!called) {\n            called = true;\n            returnValue = func(...args);\n        }\n        return returnValue;\n    };\n};\nexport const wait = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n};\nexport const fadeAway = async (el, ms) => {\n    const transitionValue = `opacity ${ms}ms`;\n    if (el.style.transition) {\n        el.style.transition += `, ${transitionValue}`;\n    }\n    else {\n        el.style.transition = transitionValue;\n    }\n    el.style.opacity = \"0\";\n    await wait(ms);\n    el.remove();\n};\n// Grote beunmethode om te zien of we een light theme hebben.\nexport const isLightMode = () => {\n    const bgColor = window.getComputedStyle(document.body).backgroundColor;\n    const sep = bgColor.indexOf(',') > -1 ? ',' : ' ';\n    const rgb = bgColor.substr(4).split(')')[0].split(sep);\n    return (Number(rgb[0]) > 124 && Number(rgb[1]) > 124 && Number(rgb[2]) > 124);\n};\nexport const autosizeTextarea = (el) => {\n    const cb = () => {\n        el.style.height = 'auto';\n        el.style.height = (el.scrollHeight) + 'px';\n    };\n    el.setAttribute('style', 'height:' + (el.scrollHeight) + 'px;overflow-y:hidden;');\n    el.addEventListener(\"input\", cb, false);\n    setTimeout(cb);\n};\n/**\n * Eerste letter wordt een hoofdletter.\n * @param str\n */\nexport const ucfirst = (str) => str.slice(0, 1).toUpperCase() + str.slice(1);\n/**\n * Verwijder null/falsy elementen uit een lijst.\n * @param list\n */\nexport const cut = (list) => list.filter(_ => _);\nexport const uidLike = (str) => str.length == 4;\n","// importeer stijl\nimport '../../scss/effect/raket.scss';\nimport { ontstuiter } from '../lib/util';\nclass UVo {\n    static startAnimatie() {\n        if (!document.body.classList.contains('scrolling')) {\n            document.body.classList.add('scrolling');\n        }\n    }\n    static stopAnimatie() {\n        if (document.body.classList.contains('scrolling')) {\n            document.body.classList.remove('scrolling');\n        }\n    }\n    start() {\n        window.addEventListener('scroll', ontstuiter(UVo.startAnimatie, 250, true), { passive: true });\n        window.addEventListener('scroll', ontstuiter(UVo.stopAnimatie, 250, false), { passive: true });\n    }\n}\nnew UVo().start();\n"],"sourceRoot":""}