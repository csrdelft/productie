(()=>{"use strict";var e,n={8223:(e,n,t)=>{var i=t(8118);try{!function(e){const n=document.createElement("div");Object.assign(n.style,{position:"fixed",left:"0",right:"0",bottom:"0",top:"0",zIndex:"-1"}),document.body.appendChild(n);const t=new i.CP7;t.domElement.style.width="100%",t.domElement.style.height="100%",n.append(t.domElement),t.autoClearColor=!1;const o=new i.iKG(-1,1,1,-1,-1,1),a=new i.xsS,r=new i.BKK(2,2),s=`\nuniform vec3      iResolution;           // viewport resolution (in pixels)\nuniform float     iTime;                 // shader playback time (in seconds)\n// uniform float     iTimeDelta;            // render time (in seconds)\n// uniform int       iFrame;                // shader playback frame\n// uniform float     iChannelTime[4];       // channel playback time (in seconds)\n// uniform vec3      iChannelResolution[4]; // channel resolution (in pixels)\n// uniform vec4      iMouse;                // mouse pixel coords. xy: current (if MLB down), zw: click\n// uniform sampler2D iChannel0;\t\t\t// input channel. XX = 2D/Cube\n// uniform sampler2D iChannel1;\n// uniform sampler2D iChannel2;\n// uniform sampler2D iChannel3;\n// uniform vec4      iDate;                 // (year, month, day, time in seconds)\n// uniform float     iSampleRate;           // sound sample rate (i.e., 44100)\n\n${e}\nvoid main() {\n\tmainImage(gl_FragColor, gl_FragCoord.xy);\n}\n  `,d={iTime:{value:0},iResolution:{value:new i.Pa4}},l=new i.jyz({fragmentShader:s,uniforms:d});a.add(new i.Kj0(r,l)),requestAnimationFrame((function e(n){n*=.001,function(){const e=t.domElement,n=e.clientWidth,i=e.clientHeight;(e.width!==n||e.height!==i)&&t.setSize(n,i,!1)}();const i=t.domElement;d.iResolution.value.set(i.width,i.height,1),d.iTime.value=n,t.render(a,o),requestAnimationFrame(e)}))}("\n// Star Nest by Pablo Roman Andrioli\n// https://www.shadertoy.com/view/XlfGRj\n\n// This content is under the MIT License.\n\n#define iterations 17\n#define formuparam 0.53\n\n#define volsteps 10\n#define stepsize 0.1\n\n#define zoom   0.800\n#define tile   0.850\n#define speed  0.005\n\n#define brightness 0.0035\n#define darkmatter 0.300\n#define distfading 0.730\n#define saturation 0.850\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// get coords and direction\n\tvec2 uv = fragCoord.xy / iResolution.xy - .5;\n\tuv.y *= iResolution.y / iResolution.x;\n\tvec3 dir = vec3(uv * zoom, 1.);\n\tfloat time = iTime * speed + .25;\n\n\tvec3 from = vec3(1., .5, 0.5);\n\tfrom += vec3(time * 2., time, -2.);\n\n\t// volumetric rendering\n\tfloat s = 0.1, fade = 1.;\n\tvec3 v = vec3(0.);\n\tfor (int r = 0; r < volsteps; r++) {\n\t\tvec3 p = from + s * dir * .5;\n\t\tp = abs(vec3(tile) - mod(p, vec3(tile * 2.))); // tiling fold\n\t\tfloat pa, a = pa = 0.;\n\t\tfor (int i = 0; i < iterations; i++) {\n\t\t\tp = abs(p) / dot(p, p) - formuparam; // the magic formula\n\t\t\ta += abs(length(p) - pa); // absolute sum of average change\n\t\t\tpa = length(p);\n\t\t}\n\t\tfloat dm = max(0., darkmatter - a * a * .001); // dark matter\n\t\ta *= a * a; // add contrast\n\t\tif (r > 6) fade *= 1. - dm; // dark matter, don't render near\n\t\t// v+=vec3(dm,dm*.5,0.);\n\t\tv += fade;\n\t\tv += vec3(s, s * s, s * s * s * s) * a * brightness * fade; // coloring based on distance\n\t\tfade *= distfading; // distance fading\n\t\ts += stepsize;\n\t}\n\tv = mix(vec3(length(v)), v, saturation); // color adjust\n\tfragColor = vec4(v * .01, 1.);\n}\n")}catch(e){}}},t={};function i(e){var o=t[e];if(void 0!==o)return o.exports;var a=t[e]={exports:{}};return n[e](a,a.exports,i),a.exports}i.m=n,e=[],i.O=(n,t,o,a)=>{if(!t){var r=1/0;for(m=0;m<e.length;m++){for(var[t,o,a]=e[m],s=!0,d=0;d<t.length;d++)(!1&a||r>=a)&&Object.keys(i.O).every((e=>i.O[e](t[d])))?t.splice(d--,1):(s=!1,a<r&&(r=a));if(s){e.splice(m--,1);var l=o();void 0!==l&&(n=l)}}return n}a=a||0;for(var m=e.length;m>0&&e[m-1][2]>a;m--)e[m]=e[m-1];e[m]=[t,o,a]},i.d=(e,n)=>{for(var t in n)i.o(n,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},i.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e={2481:0};i.O.j=n=>0===e[n];var n=(n,t)=>{var o,a,[r,s,d]=t,l=0;if(r.some((n=>0!==e[n]))){for(o in s)i.o(s,o)&&(i.m[o]=s[o]);if(d)var m=d(i)}for(n&&n(t);l<r.length;l++)a=r[l],i.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return i.O(m)},t=self.webpackChunk=self.webpackChunk||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))})();var o=i.O(void 0,[8677],(()=>i(8223)));o=i.O(o)})();
//# sourceMappingURL=fxspace.2c8f737f8623bb28a0c8.bundle.js.map