{"version":3,"sources":["webpack:///./js/lib/grafiek.ts","webpack:////home/travis/build/csrdelft/csrdelft.nl/.yarn/cache/moment-npm-2.27.0-0e670d438d-72d9a7d8db.zip/node_modules/moment/locale sync [/\\\\](nl(\\.js)"],"names":["createCanvas","parent","canvas","appendChild","initPie","el","data","JSON","parse","dataset","defaultKleuren","type","async","initLine","url","Error","a","post","kleuren","datasets","length","Symbol","iterator","forEach","pointBorderColor","backgroundColor","borderColor","next","value","kleurPerDataset","options","scales","xAxes","barPercentage","stacked","time","tooltipFormat","yAxes","ticks","min","tooltips","intersect","mode","map","Object","assign","col","initBar","beginAtZero","stepSize","initDeelnamegrafiek","callback","t","index","jaren","callbacks","title","d","String","labels","initSaldoGrafiek","closed","uid","timespan","label","tooltipItem","datasetIndex","Number","yLabel","defaults","NegativeTransparentLine","helpers","clone","line","controllers","extend","this","chart","reduce","mininum","p","y","prototype","update","apply","arguments","max","maximum","yScale","getScaleForId","getMeta","yAxisID","top","getPixelForValue","zero","bottom","gradient","ctx","createLinearGradient","ratio","Math","addColorStop","load","then","response","querySelector","terugButton","addEventListener","button","e","preventDefault","classList","remove","parentElement","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","code","keys","resolve","module","exports"],"mappings":"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","file":"js/grafiek.4788ba01e433f21e6292.chunk.js","sourcesContent":["import axios from 'axios';\nimport Chart from 'chart.js';\nimport palette from 'google-palette';\nimport { formatBedrag, html } from './util';\nfunction createCanvas(parent) {\n    const canvas = html `<canvas style=\"width: 100%; height: 100%\"/>`;\n    parent.appendChild(canvas);\n    return canvas;\n}\nexport function initPie(el) {\n    let data = JSON.parse(el.dataset.data);\n    data = defaultKleuren(data);\n    return new Chart(createCanvas(el), { data, type: 'pie' });\n}\nexport async function initLine(el) {\n    let data;\n    if (el.dataset.data) {\n        data = JSON.parse(el.dataset.data);\n    }\n    else if (el.dataset.url) {\n        data = (await axios.post(el.dataset.url)).data;\n    }\n    else {\n        throw new Error('Hier kan ik niets mee');\n    }\n    data = kleurPerDataset(data);\n    return new Chart(createCanvas(el), {\n        data,\n        options: {\n            scales: {\n                xAxes: [{\n                        barPercentage: 1.0,\n                        stacked: true,\n                        time: {\n                            tooltipFormat: 'D MMM H:mm ',\n                        },\n                        type: 'time',\n                    }],\n                yAxes: [{\n                        stacked: true,\n                        ticks: {\n                            min: 0,\n                        },\n                    }],\n            },\n            tooltips: {\n                intersect: false,\n                mode: 'index',\n            },\n        },\n        type: 'line',\n    });\n}\nfunction kleurPerDataset(data) {\n    const kleuren = palette(['tol', 'qualitative'], data.datasets.length)[Symbol.iterator]();\n    data.datasets.forEach((dataset) => {\n        dataset.pointBorderColor = dataset.backgroundColor = dataset.borderColor = `#${kleuren.next().value}`;\n    });\n    return data;\n}\nfunction defaultKleuren(data) {\n    data.datasets = data.datasets\n        .map((dataset) => (Object.assign({ backgroundColor: palette('tol-rainbow', dataset.data.length).map((col) => `#${col}`) }, dataset)));\n    return data;\n}\nexport function initBar(el) {\n    let data = JSON.parse(el.dataset.data);\n    data = defaultKleuren(data);\n    const options = {\n        scales: {\n            yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                        stepSize: 1,\n                    },\n                }],\n        },\n    };\n    return new Chart(createCanvas(el), { data, type: 'bar', options });\n}\nexport function initDeelnamegrafiek(el) {\n    const data = JSON.parse(el.dataset.data);\n    const options = {\n        scales: {\n            xAxes: [{\n                    stacked: true,\n                    ticks: {\n                        callback: (t, index) => data.jaren[index],\n                    },\n                }],\n            yAxes: [{\n                    stacked: true,\n                    ticks: {\n                        stepSize: 1,\n                    },\n                }],\n        },\n        tooltips: {\n            callbacks: {\n                title: (t, d) => String(d.labels[t[0].index]),\n            },\n            intersect: false,\n            mode: 'index',\n        },\n    };\n    return new Chart(createCanvas(el), { data, type: 'bar', options });\n}\nfunction createNegativetransparentLineChartController() {\n    if (Chart.defaults.NegativeTransparentLine) {\n        return;\n    }\n    Chart.defaults.NegativeTransparentLine = Chart.helpers.clone(Chart.defaults.line);\n    Chart.controllers.NegativeTransparentLine = Chart.controllers.line.extend({\n        update() {\n            if (this.chart.data.datasets.length) {\n                // get the min and max values\n                const min = this.chart.data.datasets[0].data\n                    .reduce((mininum, p) => p.y < mininum ? p.y : mininum, this.chart.data.datasets[0].data[0].y);\n                if (min >= 0) {\n                    this.chart.data.datasets[0].borderColor = 'green';\n                    return Chart.controllers.line.prototype.update.apply(this, arguments);\n                }\n                const max = this.chart.data.datasets[0].data\n                    .reduce((maximum, p) => p.y > maximum ? p.y : maximum, this.chart.data.datasets[0].data[0].y);\n                if (max <= 0) {\n                    this.chart.data.datasets[0].borderColor = 'red';\n                    return Chart.controllers.line.prototype.update.apply(this, arguments);\n                }\n                const yScale = this.getScaleForId(this.getMeta().yAxisID);\n                // figure out the pixels for these and the value 0\n                const top = yScale.getPixelForValue(max);\n                const zero = yScale.getPixelForValue(0);\n                const bottom = yScale.getPixelForValue(min);\n                // build a gradient that switches color at the 0 point\n                const context = this.chart.chart.ctx;\n                const gradient = context.createLinearGradient(0, top, 0, bottom);\n                const ratio = Math.min((zero - top) / (bottom - top), 1);\n                gradient.addColorStop(0, 'green');\n                gradient.addColorStop(ratio, 'green');\n                gradient.addColorStop(ratio, 'red');\n                gradient.addColorStop(1, 'red');\n                this.chart.data.datasets[0].borderColor = gradient;\n            }\n            // noinspection JSPotentiallyInvalidConstructorUsage\n            return Chart.controllers.line.prototype.update.apply(this, arguments);\n        },\n    });\n}\nexport function initSaldoGrafiek(el) {\n    const closed = el.dataset.closed === 'true';\n    const uid = el.dataset.uid;\n    let timespan = 11;\n    const options = {\n        scales: {\n            xAxes: [{\n                    time: {\n                        tooltipFormat: 'LLL',\n                    },\n                    type: 'time',\n                }],\n            yAxes: [{\n                    ticks: {\n                        callback: formatBedrag,\n                    },\n                }],\n        },\n        tooltips: {\n            callbacks: {\n                label(tooltipItem, data) {\n                    const datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n                    return datasetLabel + ': ' + formatBedrag(Number(tooltipItem.yLabel));\n                },\n            },\n        },\n    };\n    createNegativetransparentLineChartController();\n    const chart = new Chart(createCanvas(el), { data: {}, type: 'NegativeTransparentLine', options });\n    function load() {\n        axios.post(`/profiel/${uid}/saldo/${timespan}`)\n            .then((response) => {\n            chart.data = response.data;\n            chart.update();\n        });\n        if (!el.querySelector('.saldo-terug-button')) {\n            const terugButton = html `<a title=\"verder terug in de tijd\" class=\"saldo-terug-button\">&laquo;</a>`;\n            el.appendChild(terugButton);\n            terugButton.addEventListener('click', () => {\n                timespan = timespan * 2;\n                if (timespan > (15 * 356)) {\n                    return;\n                }\n                load();\n            });\n        }\n    }\n    if (closed) {\n        const button = html `<a href=\"#\" class=\"btn btn-primary\">Toon saldografiek</a>`;\n        button.addEventListener('click', (e) => {\n            e.preventDefault();\n            el.classList.remove('verborgen');\n            button.remove();\n            load();\n        });\n        el.parentElement.appendChild(button);\n    }\n    else {\n        el.classList.remove('verborgen');\n        load();\n    }\n}\n","var map = {\n\t\"./nl\": 62,\n\t\"./nl.js\": 62\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 76;"],"sourceRoot":""}