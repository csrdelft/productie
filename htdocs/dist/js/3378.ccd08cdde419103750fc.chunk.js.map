{"version":3,"file":"js/3378.ccd08cdde419103750fc.chunk.js","mappings":"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","sources":["webpack:///./js/page/instellingen.ts"],"sourcesContent":["import axios from 'axios';\nimport { select } from '../lib/dom';\nimport { urlBase64ToUint8Array } from '../lib/util';\nimport ctx from '../ctx';\n/**\n * Code voor de /instellingen pagina\n */\nconst instellingVeranderd = () => {\n    document\n        .querySelectorAll('.instellingen-bericht')\n        .forEach((el) => el.classList.remove('d-none'));\n};\nconst meta = document.getElementsByTagName('meta');\nconst applicationServerKey = meta['vapid-public-key'].content;\nlet isPushAvailable = false;\nlet registration;\nconst pushAbboneer = async () => {\n    if (!isPushAvailable)\n        return;\n    const result = await Notification.requestPermission();\n    if (result === 'denied') {\n        throw new Error('The user explicitly denied the permission request.');\n    }\n    if (result === 'granted') {\n        console.info('The user accepted the permission request.');\n    }\n    registration = await navigator.serviceWorker.ready;\n    const existingSubscription = await (registration === null || registration === void 0 ? void 0 : registration.pushManager.getSubscription());\n    if (existingSubscription) {\n        console.info('User is already subscribed.');\n        return;\n    }\n    // Subscribe to push notifications\n    const subscribeOptions = {\n        userVisibleOnly: true,\n        applicationServerKey: urlBase64ToUint8Array(applicationServerKey),\n    };\n    const subscription = await registration.pushManager.subscribe(subscribeOptions);\n    if (subscription) {\n        try {\n            const response = await fetch('/push-abonnement', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(subscription),\n            });\n            if (!response.ok) {\n                throw new Error('Bad status code from server.');\n            }\n            const data = await response.json();\n            if (!(data && data.success)) {\n                throw new Error('Bad response from server.');\n            }\n            console.info('Successfully subscribed to push notifications.');\n        }\n        catch (error) {\n            await (subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe());\n            throw error;\n        }\n    }\n};\nconst pushDeabboneer = async () => {\n    var _a;\n    if (!isPushAvailable)\n        return;\n    registration = await navigator.serviceWorker.ready;\n    const subscription = (_a = (await (registration === null || registration === void 0 ? void 0 : registration.pushManager.getSubscription()))) !== null && _a !== void 0 ? _a : null;\n    if (!subscription)\n        throw new Error('No existing subscription');\n    const response = await fetch('/push-abonnement', {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ endpoint: subscription.endpoint }),\n    });\n    if (!response.ok) {\n        throw new Error('Bad status code from server.');\n    }\n    const data = await response.json();\n    if (!(data && data.success)) {\n        throw new Error('Bad response from server.');\n    }\n    const isUnsubscribed = await (subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe());\n    if (isUnsubscribed) {\n        console.info('Successfully unsubscribed from push notifications.');\n    }\n};\nconst pushMeldingenVeranderd = async (ant) => {\n    switch (ant) {\n        case 'ja':\n            return await pushAbboneer();\n        case 'nee':\n            return await pushDeabboneer();\n    }\n};\nconst checkPushAvailability = async () => {\n    if (!applicationServerKey) {\n        isPushAvailable = false;\n        return;\n    }\n    const instellingJa = select('#inst_forum_meldingPush_ja');\n    const instellingNee = select('#inst_forum_meldingPush_nee');\n    const supportsPushManager = 'serviceWorker' in navigator && 'PushManager' in window;\n    if (supportsPushManager) {\n        registration = await navigator.serviceWorker.ready;\n        const hasPushManager = registration !== undefined && 'pushManager' in registration;\n        if (hasPushManager) {\n            const isIos = navigator.userAgent.includes('iPhone') ||\n                (navigator.userAgent.includes('Macintosh') && 'ontouchend' in document);\n            if (isIos) {\n                const isStandalone = window.matchMedia('(display-mode: fullscreen)').matches ||\n                    window.matchMedia('(display-mode: standalone)').matches;\n                isPushAvailable = isStandalone;\n            }\n            else {\n                isPushAvailable = true;\n            }\n        }\n    }\n    // Maak de knoppen disabled als push niet beschikbaar is\n    if (!isPushAvailable) {\n        const instellingGroup = select('#instelling-forum-meldingPush > div > div.btn-group');\n        instellingGroup.setAttribute('title', 'Push is niet beschikbaar op dit apparaat');\n        instellingJa.disabled = true;\n        instellingNee.disabled = true;\n        instellingNee.checked = true;\n    }\n    else {\n        // Update de knoppen op basis van bestaande abonnement\n        const existingSubscription = await (registration === null || registration === void 0 ? void 0 : registration.pushManager.getSubscription());\n        if (existingSubscription) {\n            instellingJa.checked = true;\n        }\n        else {\n            instellingNee.checked = true;\n        }\n    }\n};\ncheckPushAvailability();\nconst instellingOpslaan = async (ev) => {\n    ev.preventDefault();\n    const input = ev.target;\n    let href = null;\n    let waarde = null;\n    input.classList.add('loading');\n    if (input instanceof HTMLInputElement || input instanceof HTMLSelectElement) {\n        if (!input.checkValidity()) {\n            return false;\n        }\n        href = input.dataset.href;\n        waarde = input.value;\n    }\n    else if (input instanceof HTMLAnchorElement) {\n        href = input.href;\n    }\n    if (!href) {\n        throw new Error('Geen url gevonden voor instelling');\n    }\n    try {\n        // Als de instelling meldingPush is moet er meer gebeuren en de instelling wordt op een andere manier geÃ¼pdatet\n        if (href.includes('meldingPush')) {\n            const antwoord = /meldingPush\\/(\\w+)/g.exec(href);\n            await pushMeldingenVeranderd(antwoord[1]);\n        }\n        else {\n            await axios.post(href, { waarde });\n            instellingVeranderd();\n        }\n        input.classList.remove('loading');\n    }\n    catch (error) {\n        console.error(error);\n        alert('WP Error: ' + error.message);\n    }\n};\nctx.addHandler('.instellingKnop', (el) => el.addEventListener('click', instellingOpslaan));\nctx.addHandler('.change-opslaan', (el) => el.addEventListener('change', instellingOpslaan));\n"],"names":["applicationServerKey","document","getElementsByTagName","content","registration","isPushAvailable","pushMeldingenVeranderd","async","ant","result","Notification","requestPermission","Error","console","info","navigator","serviceWorker","ready","pushManager","getSubscription","subscribeOptions","userVisibleOnly","subscription","subscribe","response","fetch","method","headers","body","JSON","stringify","ok","data","json","success","error","unsubscribe","pushAbboneer","_a","endpoint","pushDeabboneer","instellingJa","instellingNee","window","undefined","userAgent","includes","isStandalone","matchMedia","matches","checked","setAttribute","disabled","checkPushAvailability","instellingOpslaan","ev","preventDefault","input","target","href","waarde","classList","add","HTMLInputElement","HTMLSelectElement","checkValidity","dataset","value","HTMLAnchorElement","antwoord","exec","querySelectorAll","forEach","el","remove","alert","message","addEventListener"],"sourceRoot":""}